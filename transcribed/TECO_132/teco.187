
HLSTSW==0	;HAIRY LISTING FEATURE
TS==1
IFE TS,HLSTSW==0	;DOESNT TRY TO WORK OUT OF TS
IFE TS,RELOCA
MOBY==40000
LPTR==0
IFN TS,[MOBY==0
LPTR==1
]

IFE TS,TITLE TECO6
IFN TS,TITLE TSTECO

GLITCH==177
ALTMOD==33
EOFCHR==3

FF=0
P"=1
A"=2
AA=3
B=4
E=5
C=6
D=7
F=10
T=11
TT=12
TT1=13
IN=14
OUT=15
CH=16
Q=17
SYM==OUT

;RIGHT HALF FLAGS

ALTF==1
ARG2==2
ARG==4
ITERF==10
SLSL==20
PCHFLG==40
COLONF==100
SYLF==200
VIEWF==400
FINF==1000
FINDR==2000
QMFLG==4000
NOTF==10000
REVSF==NOTF	;SEARCH IN REVERSE (ARGUMENT NEGATIVE)
TRACEF==20000
LET==40000
PANIC==100000	;YANK GETTING NEAR END OF BUFFER
SLASHF==200000
IFN HLSTSW,DUBSCF==400000

;LEFT HALF FLAGS

NEGF==1		;DPT-ING A NEGATIVE NUMBER
SORF2==2	;SORT IN PROGRESS
IQF==4		;:I MACRO END
LPTF==20
FATAL==40	;BAD INTERRUPT
SORF==100	;SORT COMMAND BEING INPUT
UREAD==200	;READING FROM UTAPE
UWRITE==400	;WRITING ON UTAPE
PNSTOP==1000	;STOP PUNCH
GLOF==2000	;CTRL O GLOB FLG
VARF==4000	;CTRL O VAR FLG
DEFF==10000	;CTRL O DEFINE FLAG
CTLUF==100000	;DO AN ^U AT END IF VIEWF OFF

ATYPE=37000,,
TYPR1=36000,,
TYPR2=35000,,
ITYPR=34000,,	
IITYPR=33000,,
NUUOS==5

IFE TS,[MACDMP==37400+MOBY
MACCR==37777+MOBY
DDT==34000+MOBY
IFE MOBY,LPDL==75
IFN MOBY,LPDL==200
]
IFN TS,LPDL==140
GCTBL==100
LPF==100

IFN HLSTSW,NSECS==200

SPD==60.*60.*24.	;NUMBER OF SECONDS IN A DAY (FITS IN A HALFWORD)

IFN TS,[
;TS SYMBOLS

DEFINE TSOPEN A,B
	.OPEN A,B
	JSP TT,OPNER
	TERMIN

DEFINE INFORM A,B
IF1,[PRINTX \A = B
\]TERMIN

SYSGE==2

TYIC==1
TYOC==2
UTYIC==3
UTYOC==4
LPTC==5
FDRC==6	;FOR READING FILE DIRECTORIES
DCHN==7
BDCHN==10
ERRC==11

PDLOV1==200000
MPV1==20000
IOC1==400
TYPIN==1_<TYIC>
TSMSK==PDLOV1+IOC1+MPV1
TSMSK1==TYPIN
INTON=[.SPICL,,[-1]]
INTOFF=[.SPICL,,[0]]
FDRBFL==40	;LENGTH OF FILE DIRECTORY BUFFER
LIOPDL==8	;LENGTH OF LOCAL VERSION OF IO PDL (MUST BE .LE. SYSTEM IO PDL LENGTH)
]

NQREG=="Z-"A+1 "9-"0+1 3

LOC 41
JSR UUOH
IFN TS,	JSR TSINT
LOC 100

ERR:	0
IFE TS,	PUSHJ P,UWAIT"
ERRP1:	MOVEI CH,277
	PUSHJ P,TYO
	PUSHJ P,CRR
IFN TS,	PUSHJ P,CRR
	TRO FF,QMFLG
	MOVE A,COMAX
	SUB A,COMCNT
	MOVEM A,ERR1
	MOVE A,CPTR
	MOVEM A,ERR2
	JRST GO

IFN TS,[
UTRLDT:	350700,,	;POINTER TO STORE EOF
NLINES:	20.
EIDEV:	-1	;CURRENT DEV SAVED BY EI & EW FOR EF TO RESTORE
ERDEV:	-1	;CURRENT READ DEV
ODDEV:	-1	;SAVED UTF WHEN CLOBBERED BY ARGUMENT
TIME:	0		;TIME IN SIXBIT
DATE:	0		;DATE IN SIXBIT
PDTIME:	0		;# SECONDS SINCE BEGINNING OF YEAR
LPDTIM:	0		;LOCALIZED "
YEAR:	0		;YEAR AND FLAGS

CHPSH1:	PUSH B,A	;PUSH THE DOCUMENTATION WORD
	DPB CH,[270400,,.+1]	;STORE CHANNEL
	.IOPUSH		;AC FIELD DEPOSITED BY .-1
	POPJ P,

CHPOP1:	CAIGE A,IOPDL	;IF A DOESN'T POINT INTO PDL,
	POPJ P,		;THEN NOT ON PDL , UNSCREW PDL AND DO TYPR2 (SIXBIT /NOP/)
	POP B,T		;POP LOCAL PDL ENTRY INTO T
CHPOPX:	TRNE\TRNN T,1	;SKIP IF THIS THE RIGHT KIND OF PDL ENTRY
	JRST CHPOP3	;WRONG KIND OF ENTRY, POP IT SOMEWHERE ELSE, RECURSE, THEN PUSH IT BACK
	MOVE C,CH	;RIGHT KIND OF ENTRY, SAVE ORIGINAL CHANNEL SPECIFICATION IN C
	MOVE AA,T	;WIN, SAVE LOCAL PDL ENTRY FOR TOP LEVEL
	AOS (P)		;CAUSE RETURN TO SKIP
CHPOP2:	DPB CH,[270400,,.+1]	;DEPOSIT CHANNEL FOR POP
	.IOPOP		;CHANNEL SPECIFIED BY .-1
	POPJ P,
]
PAT":
PATCH":	BLOCK 40
PATCHE"=.-1	;END OF PATCH AREA

NROOM4:	0

IFN TS,[
TSINT:	0
	0
	MOVEM A,TSA
	MOVEM CH,TSCH
	TLZ FF,FATAL
	EXCH B,TSINT
TSIL:	JUMPL B,TSIN2	;INT IN SECOND WORD
	TRZE B,MPV1
	JRST TSINT4
	TRZE B,PDLOV1
	JRST TSINT3
	TRZE B,IOC1
	JRST IOCERR
TSIN2A:	MOVE A,TSA
	MOVE CH,TSCH
	MOVE B,TSINT
	TLNN FF,FATAL
	.DISMI TSINT+1
	.DISMI [GOX]

COMFIL:	(SIXBIT /DSK/)
	SIXBIT /.TECO./
	SIXBIT /(INIT)/
TSLPTF:	SIXBIT /  !LPT>/
LPTOF:	SIXBIT /  #LPT>/
DISFB:	SIXBIT /  #DIS>/
FDF:	0
	SIXBIT \.FILE.\
	SIXBIT \(DIR)\
UTOF:	0
	SIXBIT \_TECO_\
	SIXBIT \OUTPUT\
OTTY:	SIXBIT /  !TTY>/
ITTY:	SIXBIT /   TTY>/
UTF:	3,,(SIXBIT \DSK\)
]

UTF1:LFRED1:	SIXBIT /@/
UTF2:LFRED2:	SIXBIT /@/
UTF3:	SIXBIT /@/
UTF4:	SIXBIT /@/
UTF5:	-1		;SYSTEM NAME FOR LINKED ON EQ
RUTF1:	0	;REAL FILE NAMES
RUTF2:	0	;ON READ

LISTF5:	PUSHJ P,.
LISFLG:	-1
DLIM:	ADD B,SYL
SCPDLM:	CAIN CH,ALTMOD
LOSED:	JRST .	;LOSE2\LOSE1 +S OR -<ANYTHING> => JRST LOSE2
		;+N OR +_ => JRST LOSE1
WIND:	JRST .	;SLP1J\WINNUL GO INTO LOOP
SLP1P:	JRA AA,.	;SLP1D\SLP1I INSTRUCTION EXECUTED WHEN TIME TO READ ANOTHER CHARACTER
NROOM2:	(10000),-1(14)
LPTSAV:	TLO\TLZ FF,LPTF
DPT5:	MOVEI CH,40
SYLCPS:	SUBI AA,.
DIS3A:	ASCIZ /_@/
CDATE:	SIXBIT / 00,19/

UUOH:	0
	TLZE FF,SORF+SORF2
	JRST PS8
PS9:	MOVEM B,ETYPB'
	MOVEM CH,ETYPCH'
	LDB B,[331100,,40]
	CAIGE B,40
	CAIGE B,40-NUUOS
	JRST BADUUO
IFN TS,[	SKIPGE UUODTB+NUUOS-40(B)
	PUSHJ P,DIS1
]
	JRST @UUODTB+NUUOS-40(B)

IFE TS,BRKFLG:	0
SFINDF:	0		;"VALUE" OF LAST SEARCH
BEG:	0		;CHARACTER ADDRESS OF BEGINNING OF BUFFER
PT:	0		;CHARACTER ADDRESS OF "POINTER"
Z:	0		;CHARACTER ADDRESS OF FIRST CHARACTER AFTER BUFFER
QRBUF:	0
LEV:	0
		;FOLLOWING 3 LOCATIONS PUSHED *IN ORDER* BY MACROS AND ITERATIONS
COMAX:	0		;NUMBER OF CHARACTERS IN CURRENT COMMAND STRING
CPTR:	0		;BYTE POINTER TO COMMAND STRING (CURRENT LEVEL)
COMCNT:	0		;NUMBER OF CHARACTERS LEFT IN CURRENT LEVEL OF COMMAND STRING
NUM:	0
SYL:	0
OSYL:	0
SARG:	0
LIFF:	0	;LINE FEED FLAG TYI
ERR1:	0
ERR2:	0
BLKOPR:	0
DISPNR:	0
CBUFH:	0
IFE TS,[
TABCNT:	0
BLKOP:	0
BARFL1:	0
TIME:	0
TABCNR:	0
PWOWOT:	0
]
IFE TS,BARPNT:	0
CHCNT:	0
IFE TS,DISBUF:	0
CHCNTS:	0
ITERCT:	0
MEMSIZ:	IFE TS,[IFLE MOBY-170000,[<37000-CBUF+MOBY>*5
]IFG MOBY-170000,[777700
]]IFN TS,<2000*N1KB-CBUF>*5
GCPTR:	0
CRREL:	0
GCFLG:	0
RREL:	0
INTDPH:	0		;DEPTH INTO ITERATIONS
IFN HLSTSW,[IFN TS,[
SECT:	BLOCK 2*NSECS
SECTPE==.-2
OSECT:	BLOCK 2*NSECS
OSECPE==.-2
]]
SYMLF:	0		;0 IS ,NON-0 IS @

IFN TS,[IFN HLSTSW,[
ORELAXF:	0	;OLD RELAXF
RSTLN:	0	;LINE # WHEN RESTARTED (IF RESTARTED ON CURRENT PG)
UROSBF:	0
SECTE:	0
SECTP:	SECT-1
SECNAM:	";_35
CHKSUM:	0
OSECTP:	OSECT-1
SECCHP:	0
SECCHA:	0
SECCHC:	0
PUNFPC:	0
PUNFPB:	0

RLNPOS:	0	;LINES PRINTED ON CURRENT PAGE WHEN RELAXF OFF
]]
		;AND THERAFTER UNTIL FF
IFN TS,[
LBFIP:	0
STB:	0
STM:	0
STPNR:	0
PASS:	0
SLN:	0
LSYL:	0
SLCHS:	0
IFN HLSTSW,[RELAXF:	0
SECCR:	-1
PAGELF:	0
]CTIME:	SIXBIT /  :  :  /
]

IFN TS,[
0
UTIBUF:	BLOCK 100
UTIBE:	0	;CURRENT EOF

UTOBUF:	BLOCK 100
UTOBE:
UTYIP:	0
UTYOP:	0
UTYOCT:	0
FDRBUF:	BLOCK FDRBFL
FDRBFE:	<EOFCHR>_29.
FDRP:	0	;BYTE POINTER TO FDRBUF

ERRF:	SIXBIT /  "ERR/
	2
ERRF2:	0
ERRBUF:	BLOCK 12
ERBUFL==.-ERRBUF
	0	;ASSURE TERMINATION

DBUFPT:	0
DISBUF:	BLOCK 40
	DISBFL==.-DISBUF

RGETTY:	0	;-1 GE LOSS
TSA:	0	;TEMPROARY DURING TSINT
TSCH:	0	;"
DSW:	0	;DISPLAY SWITCH 0=DIS -1=NODIS
UNRCHC:	-1	;BUFFERED TYI CH OR -1
CMFLFL:	0	;-1 READ FILE
NEWASM:	0	;NEW ASCII MODE
GEA:	0

IOP:	-LIOPDL,,IOPDL-1	;POINTER TO LOCAL IO PDL
IOPDL:	BLOCK LIOPDL	;LOCAL IO PDL
]

PF:	-LPF,,PFL-1	;Q REGISTER PDL
TEM1:	0		;TEMP
TEM2:	0		;"
STOPF:	0

ADSF:	0
LTABS==100.	;LENGTH OF THESE BAG BITING TABLES
STAB:
LBF:
AC2:	BLOCK 16
BAKTAB:	BLOCK 3
	LOC STAB+LTABS

STABP:
SYMS:	BLOCK 22
VALS:	BLOCK 22
CNTS:	BLOCK 22
SYMEND:
PFL:	BLOCK LPF
GCTAB:	BLOCK GCTBL
STBL=GCTAB		;SEARCH TABLE SAME AS GCTAB
STBLL==GCTBL		;SEARCH TABLE LENGTH SAME AS THAT OF GC TABLE
QTAB:	BLOCK NQREG
PDL:	BLOCK LPDL+4	;FOR RANDOMNESS
IFE TS,[
PUNBO:	BLOCK 100
PUNBE:	0
RBUF:	BLOCK 250
RBEND:	0
RDCHAR=<RBEND-RBUF>*5
]
SETFIL:	ASCII \:ST              î:VP \+3_10

IFN TS,[INFORM [END OF LOW IMPURE]\.-1
LOC <.+1777>&776000
]
INIT":	SKIPA P,[(-LPDL)PDL]	;SET UP PDL
	JRST GOZ
IFE TS,[CONO 633550+APRCHN
	CONO PTR,20
	CONO PTR,0
	CONO PI,12237
]	SETOM CTLBF'
	MOVEI A,200*5
	MOVEM A,BEG
	MOVEM A,PT
	MOVEM A,Z
	MOVEM A,QRBUF
IFN HLSTSW,[MOVEI A,SECT-1
	MOVEM A,SECTP
	MOVEI A,OSECT-1
	MOVEM A,OSECTP
IFN TS,	SETZM UROSBF
]	MOVEI A,CBUF"+77
	MOVEM A,CBUFH
	CLEARB FF,SFINDF
IFN TS,[SKIPE 52
	PUSHJ P,WINIT
]GOZ":IFE TS,[SETOM .COAST"
	CONO PI,2237
	SETOM .LSTP"
]	MOVE P,[(-LPDL)PDL]
	MOVE A,[(-LPF)PFL]
	MOVEM A,PF	;STORE Q REGISTER PDL POINTER
IFN TS,[MOVE A,[-LIOPDL,,IOPDL-1]	;GET INITIAL IO PDL POINTER
	MOVEM A,IOP	;STORE THERE
	.IOPDL		;MAKE SYSTEM'S VERSION AGREE
	MOVEI B,TSMSK
	MOVEI E,TSMSK1
	.SETM2 B,	;SET UP MASKS
	TSOPEN TYOC,OTTY	;OPEN TYPE OUT
	TSOPEN TYIC,ITTY	;OPEN TYPE IN
	.STATUS TYIC,B
	LDB A,[600,,B]
	SETZM RGETTY
	TRNN B,200000	;SKIP IF SHOULD TRY 340
GOZ1:	SETOM DSW
	CAIE A,SYSGE	;SKIP IF CONSOLE A GE LOSS
	JRST GOZ2
	SETOM RGETTY	;GE CONSOLE HACKS
	MOVEI B,9	;CONSERVATIVE TO AVOID AUTO CR SCREW
	MOVEM B,NLINES
	MOVEI B,5
	HRLM B,OTTY
	TSOPEN DCHN,OTTY
	JRST GOZ3

GOZ2:	SKIPGE DSW
	JRST GOZ3
	.OPEN BDCHN,DISFB
	JRST GOZ1
GOZ3:	SKIPE 51
	JRST HINIT
	MOVNI B,4000
	MOVEM B,LINES
	SKIPE RGETTY
	PUSHJ P,DIS1
	SKIPE RGETTY
	.IOT DCHN,[14]
	SKIPN PUREFL'
	IITYPR [SIXBIT /NOTPUR/]
	IITYPR [SIXBIT /TECO./]
$%.==<.FNAM2_<-36>>&17*100.+<.FNAM2_<-30>>&17*10.+<.FNAM2_<-22>>&17
	MOVEI B,$%.
	PUSHJ P,PRNT3
	SETOM CMFLFL	;-1 => READ FROM FILE
	.OPEN UTYIC,COMFIL
	SETZM CMFLFL
]

GOX:	CLEARM STOPF

IFE TS,[	SETOM FSHFLG
	CLEARM BRKFLG
	CONO TTY,10+TTYCHN
	SKIPG TICC
	JRST .+3
	PUSHJ P,TYI
	JRST .-3
	CLEARM FSHFLG
]	PUSHJ P,CRR

GO:	MOVE P,[-LPDL,,PDL-1]
	MOVE A,[-LPF,,PFL-1]
	MOVEM A,PF	;STORE Q REGISTER PDL POINTER
IFE TS,	SKIPL FSHFLG
	SKIPGE STOPF
	JRST GOX
	TRNN FF,VIEWF
	JRST VIEW2
IFE TS,[CONO PI,4002
	CONO 433550+APRCHN
]
GO1:	CLEARM LEV
	TRZ FF,777777#QMFLG#IFN HLSTSW,DUBSCF
	JRST LIS

NEWAS:	MOVEM B,NEWASM
IFN TS,[DPB B,[260100,,ITTY]
	TSOPEN TYIC,ITTY
]	JRST LIS

IFN TS,[
HINIT:	MOVE A,[50,,UTF1]
	BLT A,UTF2
	PUSHJ P,RRED
	PUSHJ P,YANK
	CLEARM 51
	JRST GO

LGOGO:	.STATUS TYIC,A
	TRNN A,77
	.LOGOUT
	JRST GO

PURIFY:	MOVEI A,400000+1001*<INIT/2000>
PURE1:	.CBLK A,
	.VALUE
	ADDI A,1001
	LDB B,[1000,,A]
	CAIGE B,<HUSED+1777>/2000
	JRST PURE1
	SETOM PUREFL
	.VALUE [ASCIZ /:PURIFIED/]
]

IFE TS,[
TYI:	ILDB CH,MACCR
	JUMPN CH,CPOPJ
	SETZM MACCR
	MOVEI CH,12
	AOSN LIFF
	POPJ P,	;INPUT LINE FEED AFTER CR
	SKIPGE STOPF
	JRST GOX
	SKIPG TICC
	JRST .-3
	MOVE CH,TIOP
	CAMN CH,[(10700)TIBE-1]
	MOVEI CH,TIBO-1
	HRRM CH,TIOP
	ILDB CH,TIOP
	CAIN CH,15
	SETOM LIFF
	SOS TICC
	POPJ P,

6TYO:	ADDI CH,40
TYOA:
TYO:	CAIN CH,11
	JRST TYO2
	CAIN CH,15
	SETOM TABCNR
	CAIE CH,12
	AOS TABCNR
	SKIPG TORM
	JRST .-1
	IDPB CH,TOIP
	SOS TORM
	EXCH CH,TOIP
	CAMN CH,[(10700)TOBE-1]
	HRRI CH,TOBO-1
	EXCH CH,TOIP
STYO:	CONSO TTY,30
	CONO TTY,10+TTYCHN
	POPJ P,

TYO2:	MOVEI CH,40
	PUSHJ P,TYO
	MOVE CH,TABCNR
	TRNE CH,7
	JRST TYO2
	MOVEI CH,11
	POPJ P,
PITELE:	PUSH P,B
	CONSZ TTY,10
	JRST TYP1
	CONSO TTY,40
	JRST TTYRET
	DATAI TTY,A
	JUMPE A,PITEL3
	TRZ A,200
	SKIPLE BRKFLG
	JRST TTYRET
PITL4A:	CAIE A,175
	CAIN A,176
	MOVEI A,33
	CAIGE A,175
	CAIGE A,140
	JRST .+3
	SKIPN NEWASM
	SUBI A,40
	MOVEM B,PITEBS
	MOVE B,ECHOCC
	ADD B,TICC
	CAIL B,<TIBE-TIBO-2>*5
	TLO A,400000
	MOVE B,PITEBS
	JUMPL A,DING
	IDPB A,TIIP
	ORCMI A,177
	AOJE A,PITEL1
	CLEARM STOPF
PITEL2:	MOVE A,TIIP
	CAMN A,[(10700)TIBE-1]
	MOVEI A,TIBO-1
	HRRM A,TIIP
	AOSA ECHOCC
DING:	SETOM DINGF
	PUSHJ P,STYO
	JRST TTYRET

PITEL1:	MOVE A,TIME
	SKIPN STOPF
	MOVEM A,TSTPTM
	AOS A,STOPF
	CAIE A,3
	JRST PITEL2
	MOVE A,TIME
	SUB A,TSTPTM
	CAIL A,20.
	JRST PITEL2-1
	HRROS STOPF
	SETOM FSHFLG
	JRST PITEL2

PITEL3:	AOS BRKFLG
	MOVE A,TIME
	MOVEM A,TSTPTM
	JRST TTYRET

PITEBS:	0
TYP1:	MOVEI A,12
	AOSN LIF
	JRST TYP3
	MOVEI A,7
	AOSN DINGF
	JRST TYP3
	MOVEI A,40
	AOSG SPCCC
	JRST TYP3
	MOVE A,TORM
	CAIL A,TOBS
	JRST TYP4
	MOVE A,TOOP
	CAMN A,[(10700)TOBE-1]
	MOVEI A,TOBO-1
	HRRM A,TOOP
	ILDB A,TOOP
	AOS TORM

TYP3:	CAIN A,10
	JRST TYO1
	CAILE A,6
	CAIL A,16
	JRST TYO1
TYP31A:	CAIE A,11
	JRST TYP31
	MOVNI A,3
	MOVEM A,SPCCC
	JRST TTYRET
TYP31:	CAIN A,33
	MOVEI A,"$
	CAIN A,177
	JRST TTYRET
	MOVE B,A
	IMULI B,200401
	AND B,[11111111]
	IMUL B,[11111111]
	TLNE B,10
	TRO A,200
	SKIPL FSHFLG
	DATAO TTY,A
	JRST TTYRET

TYP4:	SKIPG ECHOCC
	JRST TYP5
	MOVE A,ECHOP
	CAMN A,[(10700)TIBE-1]
	MOVEI A,TIBO-1
	HRRM A,ECHOP
	MOVEI A,12
	HRRM A,TYP1
	ILDB A,ECHOP
	SOS ECHOCC
	AOS TICC
	CAIN A,15
	SETOM LIF
	JRST TYP3
TYP5:	CONO TTY,200+TTYCHN
TTYRET:	POP P,B
	JRST POPRET

TYO1:	CAIE A,33
	CAIL A,40
	JRST TYP31A
	ADDI A,100
	HRRM A,TYP1
	SETOM LIF
	MOVEI A,"^
	JRST TYP31

FSHFLG:	0
TOIP:	(10700)TOBO-1
TOOP:	(10700)TOBO-1
TORM:	TOBS
TIIP:	(10700)TIBO-1
TIOP:	(10700)TIBO-1
TICC:	0
ECHOP:	(10700)TIBO-1
ECHOCC:	0
TIBO:	BLOCK 26.
TIBE:
TOBO:	BLOCK 40
TOBE:
TOBS=<TOBE-TOBO>*5
LIF:	0
DINGF:	0
SPCCC:	0
TSTPTM:	0
]

IFN TS,[
TYI:	SKIPL CH,UNRCHC
	JRST UNRCH
	MOVEI CH,12
	AOSN LIFF
	POPJ P,
	SKIPGE STOPF
	JRST GOX
TYIW:	.IOT TYIC,CH
	CAIN CH,15
	SETOM LIFF
TYIG:	CAIN CH,^G
	JRST TYIW
	POPJ P,

UNRCH:	SETOM UNRCHC
	JRST TYIG

6TYO:	ADDI CH,40
	JRST TYOA
TYO:	SKIPGE STOPF
	POPJ P,
	SKIPL NEWASM
	JRST TYOA
	CAIL CH,100
	CAILE CH,140
	CAIN CH,"/
	JRST TYO2
TYOA:	SKIPE RGETTY
	JRST DIS3
	.IOT TYOC,CH
	POPJ P,

TYO2:	PUSH P,CH
	MOVEI CH,"/
	PUSHJ P,TYOA
	POP P,CH
	JRST TYOA

CTLL:	SKIPE RGETTY	;CTRL L COMMAND
	.IOT DCHN,[14]
	CLEARM GEA
	POPJ P,
]
PPA:
IFN LPTR,[
	TLNE FF,LPTF
IFE TS,	PUSHJ P,APILPT
IFN TS,	.IOT LPTC,CH
]
PPA2:	TLNE FF,UWRITE
	PUSHJ P,UTYO
IFN TS,	POPJ P,
IFE TS,[TLNE FF,PNSTOP
	POPJ P,
	IORI CH,200
	CAIN CH,214
	JRST PPA1
PPA3:	PUSH P,CH
	PUSHJ P,PIPUN
	POP P,CH
	CAIE CH,211
	POPJ P,
	MOVEI CH,377
	PUSHJ P,PPA2+2
	JRST PPA2+2

UTYO:	EXCH A,CH
	PUSHJ P,UWR"
	TYPR1 [ASCIZ ?TAPE FULL?]
	EXCH A,CH
]
IFN TS,[UTYO:	IDPB CH,UTYOP
	AOSGE UTYOCT
	POPJ P,
UTYOA:	MOVEM CH,UTYOP
	MOVNI CH,<UTOBE-UTOBUF>*5
	MOVEM CH,UTYOCT
	MOVE CH,[UTOBUF-UTOBE,,UTOBUF]
	.IOT UTYOC,CH
	MOVE CH,[700,,UTOBUF-1]
	EXCH CH,UTYOP
]
	POPJ P,

IFN HLSTSW,[IFN TS,[
UWO1:	PUSHJ P,UTYOA
UWO:	AOS AA,UTYOP
	HRRZS AA
	CAIN AA,UTOBE
	JRST UWO1
	MOVEM CH,(AA)
	POPJ P,
]]

IFE TS,[PPA1:	PUSH P,B
	MOVEI B,12
	PUSHJ P,FEED1
	MOVEI CH,214
	PUSHJ P,PIPUN
	MOVEI CH,377
	MOVEI B,4
	PUSHJ P,FEED1+1
	MOVEI B,30
	PUSHJ P,FEED1
	POP P,B
	POPJ P,
]
CRR:	MOVEI CH,TYO
	HRRM CH,LISTF5
CRR1:	MOVEI CH,15
	PUSHJ P,@LISTF5
	MOVEI CH,12
	JRST @LISTF5

SKRCH:	SKIPG COMCNT
	TYPR2 1,(SIXBIT \UEC\)	;UNEXPECTED END OF COMMAND
RCH:	SOSGE COMCNT
	JRST RCH2
	ILDB CH,CPTR
TRACS:	POPJ P,TYO	;OR JRST TYO IN TRACE MODE

RCH2:	PUSH P,A	;POPS OFF MACRO STUFF EVEN IF
	MOVE A,MACPTR	;OTHER STUFF IS ON TOP OF PDL
	HRRZ CH,A
	POP A,MACPTR
	POP A,MARG2
	POP A,MARG1
	POP A,COMCNT
	POP A,CPTR
	POP A,COMAX
RCH2B:	PUSH A,1(CH)	;MOVE OTHER STUFF DOWN
	CAIE CH,-2(P)
	AOJA CH,RCH2B
	EXCH A,(P)	;RESTORES A
	MOVE P,(P)	;PUTS FORMER A IN P
	AOSE MACPTR
	SOSA MACPTR
	SOSA MACPTR
	JRST RCH
	POP P,CH	;RET ADDR FROM PUSHJ P,RCH
	POPJ P,		;REAL RET ADDR IN PSORT

SKRCH1:	SOSGE COMCNT
	TYPR2 2,(SIXBIT \UEC\)	;ALSO
	ILDB CH,CPTR
	POPJ P,

CLIS:	PUSHJ P,CRR
LIS:	CLEARM COMCNT
	CLEARM INTDPH
	CLEARM SYMS
	MOVE T,[SYMS,,SYMS+1]
	BLT T,SYMEND-1
	MOVE AA,[10740,,CBUF-1]	;3.6 BIT TO FOOL GC
	MOVE B,CBUFH
LI1:	TRZ FF,ALTF+SLASHF
LI2:	CAILE B,(AA)
	JRST LI3
IFE TS,	CLEARM BARPNT
	ADDI B,100
	MOVE C,Z
	IDIVI C,5
	MOVE D,QRBUF
	IDIVI D,5
	SUBM C,D
	ADDI C,CBUF
	MOVE CH,(C)
	MOVEM CH,100(C)
	SOS C
	SOJGE D,.-3
	MOVEI C,500
	ADDM C,BEG
	ADDM C,PT
	ADDM C,Z
	ADDM C,QRBUF
LI3:	MOVEM B,CBUFH
IFN TS,[SKIPN CMFLFL
	JRST LI3C
	.IOT UTYIC,CH
	JRST LI3D
]
LI3C:	PUSHJ P,TYI
	CAIN CH,"
	CAME AA,[10740,,CBUF-1]
	JRST LI3D
		;CONTROL Y TYPED, DUMP LAST COMMAND STRING INTO BUFFER
	MOVE C,COMAX
	SUBI C,3
	PUSHJ P,NROOM
	MOVE OUT,PT
	MOVE B,OUT
	ADD C,OUT
LI3E:	CAMN AA,CPTR
	MOVEM OUT,PT
	CAMN C,OUT
	JRST LI3F
	ILDB CH,AA
	PUSHJ P,PUT
	AOJA OUT,LI3E

LI3F:	CAMN B,PT
	MOVEM OUT,PT
	JRST GO

LI3D:	TRZE FF,QMFLG
	CAIE CH,"?
	AOSA COMCNT
	JRST ERRTYP
	SKIPGE NEWASM
	JRST LI3A
LI3B:	CAIE CH,177
	JRST LI4
	CAMN AA,[10740,,CBUF-1]
	JRST CLIS
	LDB CH,AA
	PUSHJ P,TYOA
	ADD AA,[70000,,]
	SKIPGE AA
	SUB AA,[430000,,1]
	SOS COMCNT
	SOS COMCNT
	TRZ FF,ALTF
	JRST LI2

LI4:IFN TS,[
	JUMPGE CH,LI4A
	SKIPN CMFLFL
	JRST LI4A
	MOVEI CH,ALTMOD
	IDPB CH,AA
	TRO FF,ALTF
]LI4A:	IDPB CH,AA
	CAIE CH,ALTMOD
	JRST LI1
	TRON FF,ALTF
	JRST LI2
	IDPB CH,AA	;EXTRA ALTMOD FOR GOOD MEASURE
	AOS A,COMCNT
	MOVEM A,COMAX
	MOVE AA,[10740,,CBUF-1]
	MOVEM AA,CPTR
	SETZM MACPTR'
IFE TS,[	CLEARM BARPNT
	CONO DIS,0
]
	TRZ FF,VIEWF
IFN TS,[SKIPN CMFLFL
	JRST LI4B
	.CLOSE UTYIC,	;DONE READING .TECO. (INIT)
	SETZM CMFLFL
LI4B:	SKIPN RGETTY
]	PUSHJ P,CRR
	JRST CD

LI3A:	CAIN CH,177
	JRST LI3R
	TRZE FF,SLASHF
	JRST LI3B
	CAIN CH,"/
	JRST LI3S
	CAIGE CH,137
	CAIGE CH,100
	JRST LI3B
	ADDI CH,40
	JRST LI3B

LI3S:	TRO FF,SLASHF
	JRST LI2

LI3R:	TRZE FF,SLASHF
	JRST LI3R1
	LDB CH,AA
	CAIGE CH,137
	CAIGE CH,100
	CAIN CH,"/
	TRO FF,SLASHF
	MOVEI CH,177
	JRST LI3B

LI3R1:	MOVEI CH,"/
	PUSHJ P,TYOA
	JRST LI2

ERRTYP:	MOVE AA,ERR2
	MOVEI B,12
	SUBI AA,2
	ILDB CH,AA
	CAMG B,ERR1
	PUSHJ P,TYO
	CAME AA,ERR2
	SOJA B,.-4
	JRST ERR+1

1INS:	SKIPL DTB(CH)	;NEGATIVE INSTRUCTIONS DO NOT RETURN VALUE
	JRST VALRET	;POSITIVE ONES RETURN VALUE
CD:
RET:	TRZ FF,ARG2+ARG+FINDR
CD1:	CLEARM NUM
CD2:	MOVSI A,(ADD B,)
CD3:	HLLM A,DLIM
	CLEARM SYL
	CLEARM OSYL
CD5:	SKIPGE STOPF
	JRST GOX
	MOVEI AA,0
	PUSHJ P,RCH
	TRZ FF,FINF+PANIC+FINDR+PCHFLG
	XCT DTB(CH)
	TLZ FF,CTLUF
	MOVE B,NUM
	TRZE FF,SYLF
	XCT DLIM
	MOVEM B,NUM
	MOVE C,SARG
	TRZ FF,VIEWF+NOTF+PCHFLG+FINDR
	JUMPE AA,1INS	;IF AA NOT CHANGED, THIS IS ONE INST. SUBR.
	JUMPGE AA,(AA)
	PUSHJ P,(AA)
	JRST RET

CDNUM:	MOVE A,OSYL
	LSH A,3
	ADDI A,-60(CH)
	MOVEM A,OSYL
	MOVE A,SYL
	IMULI A,12
	ADDI A,-60(CH)
VALRET:	MOVEM A,SYL
CD7:	TRO FF,ARG+SYLF
	JRST CD5

COMMA:	MOVEM B,SARG
	TRZE FF,ARG
	TROE FF,ARG2
	TYPR2 1,(SIXBIT \WNA\)
	JRST CD1

ACOLON:	TRO FF,COLONF
	JRST CD5	;PRESERVE VALUE

CAND:	MOVSI A,(AND B,)
	JRST CD3
COR:	MOVSI A,(IOR B,)
	JRST CD3
MINUS:	MOVSI A,(SUB B,)
	JRST CD3
TIMES:	MOVSI A,(IMUL B,)
	JRST CD3
SLASH:	MOVSI A,(IDIV B,)
	JRST CD3
CXOR:	MOVSI A,(XOR B,)
	JRST CD3

HOLE:	CLEARM SARG
	TRO FF,ARG2
END1:	MOVE A,Z
	SUB A,BEG
	JRST VALRET

OPEN:	PUSH P,NUM
	HLLZ A,DLIM
	TRZE FF,ITERF
	IORI A,1
	PUSH P,A
	AOS LEV
	JRST RET

CLOSE:	SOSGE LEV
	TYPR2 1,(SIXBIT \UMC\)	;UNMATCHED CLOSE PAREN
	MOVEM B,SYL
	POP P,CH
	HLLM CH,DLIM
	TRZ FF,ITERF
	TRNE CH,1
	TRO FF,ITERF
	POP P,NUM
	JRST CD7

CHK:	CAMG B,Z
	CAMGE B,BEG
	TYPR2 1,(SIXBIT \NIB\)	;NOT IN BUFFER
CRDPT:	POPJ P,RDPT

CHK1:	CAMG C,BEG
	MOVE C,BEG
	CAML B,Z
	MOVE B,Z
	CAMLE C,B
	TYPR2 (SIXBIT \2<1\)	;2ND ARG LESS THAN 1ST
	POPJ P,

PNT:	MOVE A,OSYL
	TRNE FF,SYLF
	JRST VALRET
	MOVE A,PT
	JRST END1+1
APPEND:	TRZE FF,COLONF
	JRST APPNDL
	TRNE FF,ARG
	JRST APPND1
	MOVE OUT,Z
	PUSHJ P,YANK2
	JRST RET

APPND1:	ADD B,PT
	SOS IN,B
	PUSHJ P,CHK
	PUSHJ P,GET
	MOVE A,CH
APPND2:	CLEARM NUM
	JRST VALRET

APPNDL:	TRNN FF,ARG
	MOVEI B,1
	MOVE OUT,Z	;APPEND # LINES
	MOVEI F,UTYI
	TLNN FF,UREAD
IFE TS,	MOVEI F,PIRPA
IFN TS,	TYPR2 (SIXBIT /NDO/)
APPNL2:	PUSHJ P,(F)
	CAIE CH,14
	CAIN CH,EOFCHR
	JRST APPNL1
	PUSHJ P,PUT
	AOS OUT
	CAIE CH,12	;END OF LINE
	JRST APPNL2
	SOJG B,APPNL2
APPNL1:	MOVEM OUT,Z
	JRST RET

YANK:IFN TS,CLEARM GEA
	MOVE OUT,BEG
	MOVEM OUT,PT
YANK2:IFN TS,[TLNE FF,UREAD
	JRST YNKF
	TYPR2 (SIXBIT /NDO/)	;NO DEVICE OPEN
]
IFE TS,[	TRZ FF,PANIC
	MOVE F,MEMSIZ
	SUB F,OUT
	SUBI F,200.*5
	TRNN FF,ARG
	MOVE B,F
	TLNN FF,UREAD
	MOVEI F,PIRPA
	TLNE FF,UREAD
	MOVEI F,UTYI
YANK3:	PUSHJ P,(F)
	PUSHJ P,PUT
	ADDI OUT,1
	TRNE FF,PANIC
	JRST YANK3A
	CAIE CH,14
	SOJG B,YANK3
	JUMPG B,YANK5
	TROE FF,PANIC
	JRST YANK6
	MOVEI B,160.*5
	JRST YANK3

YANK5:	SUBI OUT,1
]
YANK4:	MOVEM OUT,Z
IFE TS,	CAMN OUT,BEG
	TLNE FF,UREAD
	POPJ P,
IFE TS,[MOVN OUT,RCC
	CAIN OUT,10
	TRO FF,FINF
	POPJ P,
]YANK6:	ITYPR (SIXBIT \URK\)	;BUFFER GETTING BLOATED
	JRST YANK4

IFE TS,[

YANK3A:	CAIE CH,13
	CAIN CH,12
	JRST YANK6	;FOUND LF OR VT
]
DEFINE DBP7 A
	ADD A,[70000,,]
	SKIPGE A
	SUB A,[430000,,1]
TERMIN

IFN TS,[
YNKF:	PUSH P,E
	MOVE F,OUT
	PUSHJ P,GETIBP
	MOVE IN,[YPG,,A]
	BLT IN,D
	MOVE IN,UTYIP
	JRST A

YPG:	ILDB CH,IN	;A
	CAIE CH,EOFCHR
	CAIN CH,14
	JRST YPG1
	IDPB CH,F
	JRST A		;D

YPG1:	MOVEM IN,UTYIP
	HRRZ TT,IN
	CAIN TT,UTIBE
	JRST YPG2	;JUST EOB
	CAIN CH,EOFCHR
	PUSHJ P,UTYIA	;END OF FILE
YPG1A:	PUSHJ P,GETCA
	AOS OUT,F
	POP P,E
	JRST YANK4

YPG2:	PUSHJ P,UTRLD	
YPG2A:	TRNE FF,FINF
	JRST YPG1A
	MOVE IN,UTYIP
	JRST A+1	;CHAR ALREADY IN CH
]

GETBP:	MOVE TT,F
	IDIVI TT,5
	MOVE F,BTAB(TT1)
	HRRI F,CBUF(TT)
	TLZ F,17
	POPJ P,

GETIBP:	PUSHJ P,GETBP
	DBP7 F
	POPJ P,


REVERS:	PUSHJ P,CHK2
	MOVNS B
CHARAC:	PUSHJ P,CHK2
	ADD B,PT
JMP1:	PUSHJ P,CHK
	MOVEM B,PT
	JRST RET
JMP:	ADD B,BEG
	JRST JMP1
CHK2:	TROE FF,ARG
	POPJ P,
	LDB B,[(340200)DLIM]
	MOVNS B
	AOJA B,CPOPJ

KILL:	PUSHJ P,GETARG
	PUSHJ P,CHK1
	MOVEM C,PT
	SUB B,C
	JUMPE B,RET
DELETE:	PUSHJ P,CHK2
	MOVM C,B
	MOVNS C
	ADD B,PT
	PUSHJ P,CHK
	CAMGE B,PT
	MOVEM B,PT
	PUSHJ P,NROOM
	JRST RET


IFE TS,[FEED:
FEED1:	MOVEI CH,0
	PUSHJ P,PPA3
	SOJG B,.-1
	POPJ P,

UTYI:	TRNN FF,FINF
	PUSHJ P,URED"
	TROA FF,FINF
	SKIPA CH,A
	MOVEI CH,14
	POPJ P,
]

IFN TS,[
UTYI:	ILDB CH,UTYIP
	CAIE CH,EOFCHR
	POPJ P,
UTYIA:	HRRZ CH,UTYIP
	CAIN CH,UTIBE
	JRST UTRLD
IFN HLSTSW,PUSHJ P,UROSB
UICLS:	TRO FF,FINF
	.CLOSE UTYIC,
	SETOM ERDEV
IFN HLSTSW,MOVE CH,[250700,,[EOFCHR_14.+14_7]]
IFE HLSTSW,MOVE CH,[160700,,[EOFCHR_7+14]]
	MOVEM CH,UTYIP
	MOVEI CH,14
	POPJ P,

UTRLD:	MOVE CH,[700,,UTIBUF-1]	;READ NEW BUFFER
	MOVEM CH,UTYIP
	PUSHJ P,UTRLD2
	JRST UTYI	;GO BACK AND TRY AGAIN

UTRLD2:	MOVE CH,[UTIBUF-UTIBE,,UTIBUF]
	.IOT UTYIC,CH
	JUMPGE CH,CPOPJ
	HRRM CH,UTRLDT	;FIRST ADR. NOT LOADED BY SYS
	MOVEI CH,EOFCHR
	DPB CH,UTRLDT	;STORE EOF THERE
	POPJ P,
]
IFN HLSTSW,[IFN TS,[
UROSB:	SKIPN UROSBF
	POPJ P,
	SETZM UROSBF
	PUSHJ P,UTYIR
	CAIE CH,14
	POPJ P,
	PUSHJ P,UTYIR
	CAME CH,SYSEOF
	POPJ P,
	PUSHJ P,UTYIR
	CAIE CH,14
	POPJ P,
	PUSHJ P,UTYIR
	CAIE CH,14
	POPJ P,
UROSB1:	PUSH P,A
	PUSH P,B
	PUSHJ P,UTYIW
	MOVE A,CH
UROSB0:	JUMPLE A,UROSB2
	HRRZ B,OSECTP
	CAIL B,OSECPE
	TYPR2 (SIXBIT \TMO\)
	PUSHJ P,UTYIW
	PUSH B,CH
	HRRZM B,OSECTP
	SOJA A,UROSB0

UROSB2:	POP P,B
	POP P,A
	POPJ P,

UTYIRR:	PUSHJ P,UTYIRW
UTYIR:	ILDB CH,UTYIP
	CAME CH,SYSEOF
	POPJ P,
	HRRZ CH,UTYIP
	CAIN CH,UTIBE
	JRST UTYIRR
	MOVE CH,SYSEOF
	POPJ P,

UTYIWW:	PUSHJ P,UTYIRW
UTYIW:	AOS CH,UTYIP
	HRRZS CH
	CAIN CH,UTIBE
	JRST UTYIWW
	MOVE CH,(CH)
	POPJ P,

UTYIRW:	MOVE CH,[UTIBUF-UTIBE,,UTIBUF]
	.IOT UTYIC,CH
	MOVE CH,[700,,UTIBUF-1]
	MOVEM CH,UTYIP
	POPJ P,
]]

TAB:	PUSHJ P,TAB2
INSERT:	SETZM IQREG
	TRNE FF,COLONF
	JRST INSQ	;INSERT IN Q-REG
IQ1:	TRNE FF,ARG
	JRST INS1C
	MOVEI CH,ALTMOD
	TRZE FF,SLSL
	PUSHJ P,RCH
	MOVEM CH,A	;A := TERMINATING CHARACTER
	MOVE B,CPTR	;C TO COUNT CHARACTERS IN STRING
	MOVEI C,0
INSA:	SKIPG COMCNT
	JRST INSC
	PUSHJ P,RCH
INSB:	CAME CH,A
	AOJA C,INSA
	PUSHJ P,INS1	;DELIMITER FOUND
	TRZE FF,COLONF
	JRST X2
	JRST RET
INSC:	SKIPN MACPTR
	JRST INSD
	PUSH P,A
	MOVE A,CH
	PUSHJ P,INS1
	POP P,A
	PUSHJ P,PUT
	PUSHJ P,RCH
	MOVE B,CPTR
	DBP7 B
	MOVEI C,0
	AOS PT
	TRNN FF,COLONF
	JRST INSB
	EXCH CH,(P)	;REAL CHAR ON PDL
	PUSH P,B	;THEN CPTR
	PUSH P,CH	;THEN Q-REG NAME
	TLO FF,IQF
	PUSHJ P,X2
	TLZ FF,IQF
	POP P,B
	MOVEI C,0
	TRO FF,SLSL
	EXCH CH,(P)	;Q-REG NAME ON PDL
	PUSH P,A	;THEN DELIM CHAR
	PUSH P,CH	;THEN REAL CHAR
	MOVE A,-2(P)
	MOVE A,QTAB-"0(A)
	PUSHJ P,X5
	TYPR2 (SIXBIT /:IF/)	;DOESN'T HAPPEN
	POP P,CH	;GETS REAL CH
	EXCH A,(P)	;AND REAL A
	JRST INSB	;SAVING NROOM PTR FOR X3
INSD:	MOVE D,[250000,,1]
	CAML D,CPTR
	HRLZI D,620000
	EXCH D,CPTR
	SUBM D,CPTR
	MOVEI A,ALTMOD
	SUBI C,3
	PUSHJ P,INS1
	MOVEI D,2
	MOVEM D,COMCNT
	TRZE FF,COLONF
	JRST X2
	JRST RET
INS1:	TRNE FF,SLSL
	JRST IQ4
	TRNE FF,COLONF
	JRST IQ2
	PUSHJ P,NROOM
IQ3:	ADD B,CRREL
INS1B:	MOVE OUT,PT
INS1B1:	ILDB CH,B
	CAMN CH,A
	POPJ P,
	TLNN FF,SORF
	JRST .+3
	CAIN CH,"$	;DOLLAR
	MOVEI CH,33	;ALT MODE
	PUSHJ P,PUT
	AOS OUT,PT
	JRST INS1B1

PSI:	TROA FF,COLONF
INSQ:	PUSHJ P,QREGA
	PUSH P,CH
	JRST IQ1
IQ2:	SETOM IQREG'
	ADDI C,3
	MOVE D,BEG
	MOVEM D,PSRBEG'
	JRST .+2
IQ4:	EXCH A,-1(P)	;SAVING DELIM CHAR
	PUSH P,B
	PUSHJ P,X3
	POP P,B
	TRNN FF,SLSL
	JRST IQ3
	POP P,A	;RESTORES A FOR INS1B
	EXCH A,(P)
	JRST IQ3

INS1C:	PUSH P,CRET
	MOVE CH,NUM
TAB2:	TRZE FF,COLONF
	TYPR2 (SIXBIT /WNA/)
TAB3:	MOVEI C,1
	PUSHJ P,NROOM
	AOS OUT,PT
	SOJA OUT,PUT

TYO6M:	ADDI CH,40
TYOM:	PUSH P,C
	PUSH P,OUT
	PUSH P,TT
	PUSH P,TT1
	PUSHJ P,TAB3
	POP P,TT1
	POP P,TT
	POP P,OUT
	POP P,C
CRET:	POPJ P,RET


;SEARCH TABLE FORMAT

;FOLLOWING IS COMPILATION OF "SFOO SP)"

;STBL:	.+5,,.+1	;HEADER, LH POINTS TO NEXT COMPARISON STRING
		;RH POINTS TO TABLE THIS COMPARISON STRING
;	CAIN A,"F	;IF THE TEST IS TO SUCCEED THEN THE INSTRUCTION SHOULD NOT SKIP
;	CAIE A,"O	;THE CHARACTERS ARE IN A
;	CAIN A,"O
;	JRST WIN	;DOES JRST WIN IF ENTIRE STRING HAS BEEN FOUND
;	.+7,,.+1	;THIS LAST COMPARISON STRING BUT LH STILL POINTS SOMEWHERE
;	CAIN A,40
;	CAIE A,"S
;	CAIN A,"P
;	PUSHJ P,SNBRK	;SNBRK => , SBRK => 
;	JFCL
;	CAIN A,")
;	JRST WIN
;	STBL,,SLP1P	;FINAL HEADER, LH POINTS TO FIRST HEADER MAKING LIST CIRCULAR
		;RH POINTS TO A JRA AA,<ROUTINE TO GET NEXT CHARACTER>

		;GET ARGUMENTS TO SEARCH

GSARG:	TRZ FF,FINF\REVSF	;CLEAR SOME FLAGS
	PUSHJ P,CHK2	;GET ARGUMENT OR OPERATOR CONVERTED TO VALUE
	JUMPL B,GSNARG	;JUMP IF ARGUMENT NEGATIVE
	MOVEI AA,SLP1I	;SEARCH FORWARD, SLP1I PLACE TO GO TO GET NEXT CHARACTER
GSNRGR:	HRRM A,LOSED	;STORE LOSE DISPATCH
	HLRM A,WIND	;STORE WINDISPATCH
	HRRM AA,SLP1P	;STORE DISPATCH FOR GETTING NEXT CHARACTER
	MOVMM B,SEARG'	;STORE MAGNITUDE OF ARGUMENT TO SEARCH (COUNTED DOWN AS SEARCHES WIN)
SINI1:	MOVE F,Z	;NOW SET ZBP
	PUSHJ P,GETBP	;GET BYTE POINTER TO CHARACTER AFTER END OF BUFFER
	MOVEM F,ZBP'	;STORE FOR END OF BUFFER CHECKS
	POPJ P,	

GSNARG:	MOVEI AA,SLP1D	;REVERSE SEARCH, SLP1D PLACE TO GO FOR NEXT CHARACTER
	MOVE A,[WINNUL,,LOSE2]	;LOSE => GO TO LOSE2 (DON'T TRY READING FILE)
	TRO FF,REVSF	;DOCUMENT FACT THAT SEARCH IS IN REVERSE
	MOVE F,BEG	;GET CHARACTER ADDRESS OF BEGINNING OF BUFFER
	PUSHJ P,GETBP	;CONVERT TO BYTE POINTER TO CHARACTER
	MOVEM F,BBP'	;BYTE POINTER TO FIRST CHARACTER IN BUFFER, FOR END TEST ON REVERSE SEARCH
	MOVE F,PT	;DON'T SCAN PAST POINT ON REVERSE SEARCH
	JRST GSNRGR	;GO BACK TO MAIN ROUTINE

		;SEARCH COMMANDS

SERCHP:	TRO FF,PCHFLG	;N (SEARCH AND PUNCH)
LARR:	SKIPA A,[SLP1J,,LOSE1]	;LEFT ARROW (SEARCH AND YANK)
SERCH:	MOVE A,[SLP1J,,LOSE2]	;S (SEARCH)
	MOVEM A,LLOSED'	;STORE INITIAL CONTENTS OF A FOR RE-ENTER COMMAND
	MOVEI CH,ALTMOD	;NOW TO CHOOSE A TEXT TERMINATOR, DEFAULT IS ALTMODE
	TRZE FF,SLSL	;UPARROW TYPED?
	PUSHJ P,RCH	;YES, GET NEXT CHARACTER INSTEAD
	HRRM CH,SCPDLM	;STORE AS DELIMITER
	MOVE C,[-STBLL,,STBL]	;INITIALIZE C TO POINT TO SEARCH TABLE
	PUSHJ P,GSARG	;GET AND DECIPHER ARGUMENTS TO SEARCH

		;NOW COMPILE SEARCH TABLE
		;STBL=GCTAB	;STBLL==GCTBL

SCPL:	MOVE B,C	;SAVE LOCATION OF BEGINNING OF BLOCK (LOOP POINT FOR CONTROL O)
	MOVEI CH,1(C)	;GET RIGHT HALF OF UPCOMING HEADER
	PUSHJ P,SDEP	;DEPOSIT IN TABLE
SCPL1:	TDZA A,A	;CLEAR INDEX AND FALL INTO LOOP
SCNOT:	TRC A,1		;CONTROL N, COMPLEMENT 1 BIT INDEX
	PUSHJ P,RCH	;GET CHARACTER
	CAIN CH,^X	;IF CONTROL X (FOR "ANY CHARACTER"),
	ADDI A,XSER	;THEN SET INDEX
	CAIN CH,^B	;IF CONTROL B (FOR BREAK CHARACTER)
	ADDI A,BSER	;THEN SET INDEX
	CAIN CH,^N	;IF CONTROL N (FOR "NOT")
	JRST SCNOT	;THEN CLOBBER INDEX AND GET NEXT CHARACTER
	CAIN CH,^O	;IF CONTROL O ("OR"),
	JRST SCPOR	;THEN GENERATE NEW HEADER
	XCT SCPDLM	;IF TEXT TERMINATOR (RH MODIFIED),
	JRST SCPX	;THEN DONE COMPILING, GO DO IT
	CAIN CH,^Q	;IF CONTROL Q (QUOTES THE NEXT CHARACTER),
	PUSHJ P,RCH	;THEN REALLY USE NEXT CHARACTER, SKIPPING ABOVE TESTS
	TRNE A,-2	;IF INDEX CLOBBERED,
	SKIPA CH,(A)	;THEN GET TABLE ENTRY
	HLL CH,CHSER(A)	;INDEX NOT CLOBBERED OUT OF EXISTENCE, TURN INTO CAIE OR CAIN
	PUSHJ P,SDEP	;DEPOSIT TABLE ENTRY
	JRST SCPL1	;LOOP

SDEP:	MOVEM CH,(C)	;ADD AN ENTRY TO THE SEARCH TABLE
	AOBJN C,CPOPJ	;RETURN IF TABLE NOT FULL
	TYPR2 (SIXBIT /STL/)	;SEARCH STRING TOO LONG

		;TABLES FOR COMPILING SEARCH TABLE

XSER:	JFCL		;CONTROL X
	CAIA		;NOT CONTROL X

BSER:	PUSHJ P,SBRK	;CONTROL B
	PUSHJ P,SNBRK	;NOT CONTROL B

CHSER:	CAIN A,		;NORMAL CHARACTERS (HLL'ED WITH CHAR. IN RIGHT HALF)
	CAIE A,		;NOT CHAR.

SCPX:	TDZA AA,AA	;TEXT TERMINATOR ENCOUNTERED
SCPOR:	MOVEI AA,SCPL	;CONTROL O
	MOVE CH,[JRST WIN]	;SET FINAL TABLE ENTRY (EXECUTED => THIS STRING FOUND)
	PUSHJ P,SDEP	;DEPOSIT
	HRLM C,(B)	;STORE POINTER TO THIS HEADER IN LH(LAST HEADER)
	JUMPN AA,(AA)	;JUMP IF NOT TEXT TERMINATOR
	MOVE A,[STBL,,SLP1P]	;GET LIST CIRCULIZER/POINTER TO ROUTINE TO READ NEXT CHAR.
	MOVEM A,(C)	;STORE IN TABLE (THIS LAST ENTRY, DON'T INCREMENT C OR CHECK FOR OVERFLOW)
SRN3:	SKIPN SEARG	;IF ARGUMENT ZERO, (ENTRY FOR "AGAIN" COMMAND)
	JRST RET	;THEN WIN, DON'T BOTHER ACTUALLY SEARCHING
	SETOM GCTCLB'	;GCTAB HAS SEARCH STRING COMPILATION NOT YET WIPED OUT BY GC
SRN2:	SETZM TEM2	;NO WINNING SEARCHES FOR SRCV TO DOCUMENT
	MOVE F,PT	;GET POINTER (LOOP POINT FOR _ AND N)
SRN4:	PUSHJ P,GETBP	;CALCULATE BYTE POINTER TO CURRENT CHARACTER
	MOVE B,F	;PUT IN B
	MOVE C,F	;ALSO STORE AS INITIAL BYTE POINTER TO END OF STRING IN CASE NULL STRING FOUND
	MOVS 17,[SLP2,,SLP2LC]	;GET POINTER FOR BLTING IN MAIN LOOP
	BLT 17,17	;BLT IN MAIN LOOP
SRN1:	MOVE AA,STBL	;INITIALIZE LIST POINTER
	XCT WIND		;SLP1J\WINNUL GO INTO LOOP

		;MAIN SEARCH LOOP

SLP2LC:	OFFSET 20-9-.
SLP2==.
	LDB A,B		;GET CHARACTER
	XCT (AA)	;COMPARE WITH FIRST CHARACTER THIS COMPARISON STRING
		;SKIP => THIS CHARACTER LOSES, TRY NEXT COMPARISON STRING
		;NO SKIP => THIS CHARACTER WINS, TRY NEXT ONE
		;WIN ON STRING => JRST WIN
		;THIS CHARACTER TOTALLY LOSES ON ALL COMPARISON STRINGS => EXECUTE SLP1P
			;^ => AA := FIRST HEADER IN SEARCH TABLE
	SKIPA C,B	;WIN THIS CHARACTER, GET POINTER FOR CHECKING FUTURE CHARACTERS
	JRA AA,.-2	;LOSE THIS COMPARISON STRING, TRY NEXT
SLP3==.
	ILDB A,C	;GET NEXT CHARACTER
	XCT 1(AA)	;EXECUTE NEXT TABLE ENTRY
	CAMN C,ZBP	;IT CLAIMS TO HAVE WON; WAS IT AT END OF BUFFER?
	JRA AA,SLP2	;LOSE, TRY NEXT COMPARISON STRING
	AOJA AA,SLP3	;WIN THIS CHARACTER, TRY NEXT

IFN .-20,[PRINTC /SLP2 LOSES.
/]
	OFFSET 0

		;SEARCHING BACKWARDS, GET NEXT CHARACTER

SLP1E:	MOVEM B,ZBP	;INITIALIZATION, SET CEILING FOR SEARCH
SLP1D:	CAMN B,BBP	;AT BEGINNING OF BUFFER?
	JRST LOSE	;YES, LOSE
	ADD B,[70000,,]	;NO, DECREMENT B,
	JUMPGE B,SLP2	;AND GO BACK INTO LOOP
	SUB B,[430000,,1]
	JRST SLP2

		;SEARCHING FORWARDS

SLP1J:	CAMN C,ZBP	;IF AT END OF BUFFER,
	JRST WINNUL	;THEN WIN ONLY FOR NULL COMPARISON STRING
	SKIPA B,C	;INITIALIZATION, START SEARCHING AT END OF LAST FOUND STRING
SLP1I:	IBP B		;INCREMENT TO NEXT CHARACTER
	CAME B,ZBP	;AT END OF BUFFER?
	JRST SLP2	;NO, KEEP GOING
LOSE:	SETZM SFINDF	;SEARCH LOST, CLEAR FLAG FOR SEMICOLON
	XCT LOSED	;LOSE2\LOSE1 +S OR -<ANYTHING> => JRST LOSE2
		;+N OR +_ => JRST LOSE1

		;SEARCH LOST

LOSE2:	PUSHJ P,SRCV	;SET PT
	TRZN FF,COLONF	;IF COLON TYPED FOR SEARCH,
	TRNE FF,ITERF	;OR IF IN ITERATION,
	JRST RET0	;THEN RETURN 0 AS VALUE
	TYPR2 (SIXBIT /SFL/)	;ERROR (SEARCH FAILED)

RET0:	MOVEI A,0	;RETURN A VALUE OF ZERO
	JRST VALRET

		;MULTIPLE PAGE SEARCH LOST THIS BUFFER, MAYBE READ NEW BUFFER

LOSE1:	SKIPGE STOPF	;CHECK FOR QUIT
	JRST GOX	;QUIT
	TRNE FF,FINF	;EOF?
	JRST LOSE2	;YES, SEARCH LOSES FOR REAL
	MOVEI B,1	;MAYBE PUNCH ONCE
	TRZ FF,ARG
	TRNE FF,PCHFLG	;PUNCH?
	PUSHJ P,PUNCHA	;YES
	TRNN FF,PCHFLG	;YANK?
	PUSHJ P,YANK	;YES
	PUSHJ P,SINI1	;SET ZBP
	JRST SRN2	;SEARCH NEW BUFFER

		;THIS SEARCH WINS, MAYBE DO SOME MORE

WIN:	MOVEM B,TEM1	;SAVE B, (BYTE POINTER TO FIRST CHARACTER IN FOUND STRING)
	MOVEM C,TEM2	;AND C, ( " TO LAST CHARACTER IN FOUND STRING)
	SOSLE SEARG	;THIS LAST SEARCH?
	JRST SRN1	;NO, KEEP GOING
WIN1:	PUSHJ P,SRCV	;PICK UP THE PIECES (ENTRY FOR FOUND NULL STRING AT END OF BUFFER)
	SETOM SFINDF	;LAST SEARCH SUCCEEDED, SET FLAG TO SEMICOLON
	TRZN FF,COLONF	;RETURN VALUE?
	JRST RET	;NO
	TRZ AA,-1	;YES, CHASE DOWN LIST LOOKING FOR THIS LIST POINTER
	MOVE B,STBL	;GET INITIAL POINTER
	MOVNI A,1	;INITIALIZE COUNT
WIN2:	TRZ B,-1	;CLEAR OUT RIGHT HALF OF THIS LIST ENTRY
	CAME B,AA	;IS THIS THE ONE?
	JRA B,[SOJA A,WIN2]	;NO, TRY NEXT
	TRZE FF,REVSF
	MOVNS A		;SEARCH WAS BACKWARDS
	JRST VALRET	;RETURN VALUE IN A

		;PICK UP PIECES FROM SEARCH

SRCV:	SKIPN F,TEM2	;GET POINTER TO LAST CHARACTER IN FOUND STRING
	JRST SRCVX	;NO WINNERS THIS BUFFER
	MOVE B,TEM1	;GET POINTER TO FIRST CHARACTER IN FOUND STRING
	TRNE FF,REVSF	;IF SEARCH WAS BACKWARDS,
	EXCH B,F	;THEN REALLY WANT THEM INTERCHANGED
		;F NOW HAS TECO'S . IN BYTE POINTER FORM
		;B HAS BYTE POINTER TO OTHER END OF STRING FOUND
	PUSHJ P,GETCA	;CONVERT F TO CHARACTER ADDRESS
	MOVEM F,PT	;STORE NEW POINTER
	EXCH F,B	;GET OTHER BYTE POINTER IN F
	PUSHJ P,GETCA	;CONVERT TO CHARACTER ADDRESS
	SUB F,B		;GET DIFFERENCE
SRCVX:	MOVEM F,LLSSF'	;STORE AS SIGNED LENGTH OF LAST SEARCH STRING FOUND
		;SIGN OF LLSSF IS OPPOSITE THAT OF ARG TO SEARCH FROM WHICH IT WAS SET
	POPJ P,

		;SKIP UNLESS CHARACTER IN A IS BREAK CHARACTER (CONTROL B)

SBRK:	EXCH A,CH	;GET IN CH, SAVE CH
	PUSHJ P,DQT2	;SKIP IF BREAK CHARACTER
	AOS (P)		;NOT BREAK CHARACTER, CAUSE RETURN TO SKIP
	EXCH A,CH	;RESTORE AC'S
	POPJ P,

		;SKIP IF CHARACTER IN A IS BREAK CHARACTER ()

SNBRK:	PUSHJ P,SBRK	;SKIP UNLESS BREAK CHARACTER
	AOS (P)		;BREAK CHARACTER
	POPJ P,

		;SEARCHING STARTING AT END OF BUFFER, DON'T WIN FOR FORWARD NON-NULL SEARCH

WINNUL:	MOVE A,[JRST WIN]	;SET UP A AS CONSTANT FOR COMPARISON AGAINST MEMORY
WINNL2:	CAMN A,(AA)	;IF AGREEMENT,
	JRST WIN1	;THEN NULL COMPARISON STRING, WIN, KIND OF
	CAME AA,[STBL,,SLP1P]	;IF THIS ISN'T LAST ENTRY IN TABLE,
	JRA AA,WINNL2	;THEN TRY NEXT ONE
	TRNN FF,REVSF	;NO NON-NULL COMPARISON STRINGS, IF SEARCHING FORWARD,
	JRST LOSE	;THEN LOSE
	JRA AA,SLP1E	;SEARCHING BACKWARDS => RE-INITIALIZE LIST POINTER, FALL IN

		;SEARCH AGAIN

SAGAIN:	AOSE GCTCLB	;IF GC HAS OCCURED SINCE LAST TIME,
	TYPR2 (SIXBIT /SGC/)	;THEN COMPLAIN (COMPILED SEARCH TABLE WIPED OUT BY GC)
	MOVE A,LLOSED	;GET LAST LOSE DISPATCH
	PUSHJ P,GSARG	;GET ARGUMENTS TO SEARCH
	JRST SRN3	;FALL IN

		;CONVERT THE BYTE POINTER IN F TO A CHARACTER ADDRESS

GETCA:	LDB TT,[360600,,F]	;GET POSITION FIELD IN TT
	TLZ F,-1	;CLEAR OUT LH OF BYTE POINTER
	IMULI F,5
	IDIVI TT,7
	SUBI F,CBUF*5-4(TT)
	POPJ P,
TYPE:	MOVEI D,TYO	;T COMMAND
	PUSHJ P,GETARG
TYPE1:IFN TS,CLEARM GEA
TYPE1A:	PUSHJ P,CHK1
	MOVE IN,C
IFN TS,[	MOVEI A,PPA
	CAIN A,(D)
	TLNE FF,LPTF
	JRST TYPE3
IFN HLSTSW,[MOVE TT,SECTP
	CAIE TT,SECT-1
	JRST TYPE3
]	TLNE FF,UWRITE
	JRST PUNCHF
]
TYPE3:	CAML IN,B
	JRST TYPE5
	PUSHJ P,GETINC
IFN HLSTSW,[IFN TS,[
	CAIE D,CPPA
	CAIN D,PPA
	JRST SECCH
TYPE3R:]]PUSHJ P,(D)
IFE TS,[SKIPGE BRKFLG
	JRST TYPE6]
	JRST TYPE3

TYPE5:	MOVEI A,PPA
	MOVEI CH,14
	CAIE A,(D)
	POPJ P,
CPPA:	JRST PPA

TYPE6:	MOVEM IN,PT
	JRST GOX

USE:	TRNN FF,ARG
	TYPR2 2,(SIXBIT \WNA\)
USEA:	PUSHJ P,QREGA
	MOVEM B,QTAB-60(CH)
	TLNE FF,SORF+IQF
	POPJ P,
	JRST RET

QREG:	PUSH P,USE1
QREGA:	PUSHJ P,LRCH
	CAIL CH,"0
	CAILE CH,"Z
	TYPR2 (SIXBIT \IQN\)
	CAILE CH,"9
	SUBI CH,"A-"9-1
	MOVE A,QTAB-"0(CH)
USE1:	POPJ P,VALRET

IFN HLSTSW,[IFN TS,[
SECCH:	EXCH CH,CHKSUM
	ROT CH,1
	ADD CH,CHKSUM
	EXCH CH,CHKSUM
	SKIPE SECCHP
	JRST SECCH1
	SKIPG SEMMOD
	CAIE CH,";
SECCH2:	TRZA FF,DUBSCF
	TRCN FF,DUBSCF
	JRST TYPE3R
SECCH4:	MOVEM A,SECCHA
	MOVE A,SECTP
	CAIL A,SECTPE
	TYPR2 (SIXBIT \TMS\)
	PUSH A,SECNAM
	PUSH A,CHKSUM
	HRRZM A,SECTP
	MOVE A,[440700,,SECNAM]
	MOVEM A,SECCHP
	MOVEI A,5
	MOVEM A,SECCHC
	SETZM CHKSUM
	SETZM SECNAM
	MOVE A,SECCHA
	JRST TYPE3R

SECCH1:	CAIG CH,40
	JRST SECCH3
	IDPB CH,SECCHP
	SOSG SECCHC
SECCH3:	SETZM SECCHP
	JRST SECCH2

]]

IFN TS,[PUNCHF:	CAML IN,B
	JRST TYPE3
IFN HLSTSW,[SETZM PUNFPC
	MOVEM B,PUNFPB
]	MOVE F,IN
	SUBM B,IN	;IN GETS CHAR COUNT
	PUSHJ P,GETIBP
	PUSH P,E
	MOVE C,[PPG,,A]
	BLT C,C
PCHF1:	MOVE TT,UTYOP
	MOVN OUT,UTYOCT	;GETS POS COUNT
	CAMLE OUT,IN
	MOVE OUT,IN
	PUSH P,OUT
	JUMPE OUT,PPG1
	JRST A

PPG:	ILDB CH,F	;A
	IDPB CH,TT	;AA
IFN HLSTSW,CAIE CH,";	;B
	SOJG OUT,A	;E OR B
	JRST PPG1	;C OR E

PPG1:IFN HLSTSW,JUMPG OUT,PPG2
	POP P,OUT
	MOVEM TT,UTYOP
	ADDM OUT,UTYOCT
	SKIPL UTYOCT
	PUSHJ P,UTYOA
	SUB IN,OUT
	JUMPG IN,PCHF1
	POP P,E
	JRST TYPE5

IFN HLSTSW,[PPG2:SKIPL SEMMOD
	JRST E
	IBP PUNFPC
	CAMN F,PUNFPC
	JRST PPG3
	MOVEM F,PUNFPC
	JRST E

PPG3:	DBP7 TT
	MOVEM TT,UTYOP
	MOVNI OUT,(OUT)
	ADDM OUT,UTYOCT
	POP P,OUT
	ADDM OUT,UTYOCT
	PUSHJ P,GETCA
	MOVEI IN,1(F)
	POP P,E
	MOVE B,PUNFPB
	MOVEI D,PPA
	JRST SECCH4

]]

PUNCH:
PUNCHA:	IFN TS,[
	TLNN FF,LPTF\UWRITE
	TYPR2 (SIXBIT /NDO/)
]IFN HLSTSW,TRZ FF,DUBSCF
	MOVEI D,CPPA
	TRNE FF,ARG2
	JRST TYPE1-1
	MOVE E,B
	MOVE B,CPTR
	LDB T,B
	CAIE T,"P	;IF COMMAND IS P
	CAIN T,"P+40
	ILDB T,B	;THEN GET NEXT CHAR, IF W THEN DON'T YANK INTO BUFFER
	JUMPL E,CPOPJ
PUN1:	PUSHJ P,PUNCHR
	TRZ FF,ARG
	CAIE T,"W
	CAIN T,"W+40
	SKIPN COMCNT
	PUSHJ P,YANK
	MOVE C,Z
	CAMN C,BEG
	TRNN FF,FINF
	SOJG E,PUN1
CPOPJ:	POPJ P,VIEW1
PUNCHR:	SKIPGE STOPF
	JRST GOX
	MOVE C,BEG
	MOVE B,Z
	MOVEI D,PPA
	JRST TYPE1

DPT2:	MOVNS B
	TLO FF,NEGF
	SKIPGE B
	MOVEI B,0
RDPT:	SOJA TT,DPT1
DPT:	TDZA TT,TT
SLDPT:	MOVEI TT,2
DPT1:	JUMPL B,DPT2
	IDIVI B,10.
	HRLM E,(P)
	SKIPE B
	PUSHJ P,RDPT
	TLZE FF,NEGF
	PUSH P,["--"0,,DPT3]
DPT3:	JUMPLE TT,DPT4
	XCT DPT5
	PUSHJ P,@LISTF5
	SOJG TT,.-1
DPT4:	HLRE CH,(P)
DGPT:	ADDI CH,"0
	JRST @LISTF5

PRNT:IFN HLSTSW,[TRZE FF,COLONF
	JRST PRNT2
]	TRNN FF,ARG
	TYPR2 3,(SIXBIT \WNA\)
PRNT2:	PUSHJ P,PRNT3
	JRST CRR

PRNT3:	MOVEI A,TYO
	HRRM A,LISTF5
	JRST DPT

IFN HLSTSW,[PRNT1:	IFE TS,MOVEI A,0
	IFN TS,MOVNS A,SEMMOD
	SUB P,[1,,1]
	JRST VALRET
IFN TS,SEMMOD:	-1
]

DD:		;CTRL D COMMAND
IFN TS,[
	TRNE FF,ARG
	JRST DD1
	SKIPE DSW
	JRST DD3
DD2:	.CLOSE BDCHN,
	SETOM DSW
	POPJ P,

DD1:	SOS B
	DPB B,[250200,,DISFB]
DD3:	SETZM DSW
	.OPEN BDCHN,DISFB
	JRST DD2
	POPJ P,
]
IFE TS,[	ANDI B,3
	ROT B,4
	MOVEM B,CHSIZ
	POPJ P,
]
DQUOTE:	TRNN FF,ARG
	TYPR2 4,(SIXBIT \WNA\)
	PUSHJ P,LRCH
	MOVSI A,0
	IRPC Z,,[GLNE]
	CAIN CH,"Z
	MOVSI A,(JUMP!Z B,)
	TERMIN
	CAIN CH,"C
	JRST DQT1
	JUMPE A,[TYPR2 (SIXBIT /W"A/)]	;WRONG TYPE OF ARGUMENT TO "
	HRRI A,RET
	XCT A
NOGO:	MOVEI A,0
	PUSHJ P,SKRCH1
	CAIN CH,42
	AOJA A,.-2
	CAIN CH,47
	SOJL A,RET
	JRST .-5
EXCLAM:	PUSHJ P,SKRCH
	CAIE CH,"!
	JRST .-2
	JRST RET

LRCH:	PUSHJ P,SKRCH
	CAIL CH,140
	SUBI CH,40
	POPJ P,
DQT1:	PUSHJ P,DQT3
	JRST RET
	JRST NOGO

DQT3:	MOVE CH,B

		;SKIP IF CH HAS A BREAK CHARACTER
DQT2:	CAIE CH,"$
	CAIN CH,"%
	POPJ P,
	CAIN CH,".
	POPJ P,
	CAIGE CH,"0
	JRST POPJ1
	CAIG CH,"9
	POPJ P,
	CAIGE CH,"A
	JRST POPJ1
	CAIG CH,"Z
	POPJ P,
	CAIGE CH,"A+40
	JRST POPJ1
	CAIG CH,"Z+40
	POPJ P,
	JRST POPJ1

OG:	MOVE A,CPTR
	MOVE AA,A
	IDIVI AA,17
	CAMN A,SYMS(B)
	JRST OGFND
	SKIPN SYMS(B)
	JRST OGNF
	CAMN A,SYMS+1(B)
ES1:	AOJA B,OGFND
	SKIPN SYMS+1(B)
ES2:	AOJA B,OGNF
	CAMN A,SYMS+2(B)
	AOJA B,ES1
	SKIPN SYMS+2(B)
	ADDI B,2

OGNF:	PUSH P,CPTR
	PUSH P,B
	MOVEI D,STAB+1
	MOVEI A,41
	MOVEM A,-1(D)
	PUSHJ P,SKRCH
	MOVEM CH,(D)
	CAIE CH,ALTMOD
	AOJA D,.-3
	MOVEM A,(D)
	MOVE B,COMCNT
	SUB B,COMAX
	IDIVI B,5
	ADD B,CPTR
	JUMPE E,OG2
	SOS B
	MOVMS E
	JRST .(E)
	IBP B
	IBP B
	IBP B
	IBP B
OG2:	MOVE AA,COMAX
OG4:	MOVEM B,CPTR
	MOVEM AA,COMCNT
	MOVEI E,STAB
OG5:	CAIN E,1(D)
	JRST OG3
	PUSHJ P,SKRCH1
	CAMN CH,(E)
	AOJA E,OG5
	IBP B
	SOJA AA,OG4

OG3:	POP P,A
	POP P,SYMS(A)
	MOVEM AA,CNTS(A)
	MOVEM B,VALS(A)
	JRST RET

PCNT:	PUSHJ P,QREGA
	AOSA A,QTAB-60(CH)
LAT:	DATAI A
	JRST VALRET

IFN TS,[
RTIMER:	.RDTIME A,
	LSH A,1
	JRST VALRET
]

OGFND:	MOVE A,VALS(B)
	MOVEM A,CPTR
	MOVE A,CNTS(B)
	MOVEM A,COMCNT
	JRST RET

IFE TS,CHSIZ:	20îîVIEW:	TRO FF,VIEWF
VIEWP1:	PUSHJ P,DISINI
	MOVEI D,DISAD
	TRNE FF,VIEWF
	PUSHJ P,GETARG
	PUSHJ P,TYPE1A
VIEW1:	PUSHJ P,DISCLG
	TRNN FF,VIEWF
	JRST GO1
	MOVE T,CPTR
	ILDB B,T
	CAIE B,"W
	CAIN B,"W+40
	SKIPN COMCNT
	JRST RET
	PUSHJ P,TYI
	MOVE A,CH
IFE TS,	CONO DIS,0
	PUSHJ P,RCH
	JRST APPND2

VIEW2:IFE TS,CONO DIS,0
	TLZE FF,CTLUF
	JRST CNTRLV
IFN TS,[SKIPN RGETTY
	JRST VIEW2A
	HRRZ B,GEA
	HLRZ C,GEA
	MOVE IN,PT
	CAILE IN,2*MGEC(C)
	CAIG B,2*MGEC(IN)
	SKIPA C,NLINES
	JRST VIEWP1
	MOVE A,C
	IMULI A,MGEC
VIEW2B:	  SUBI IN,1
	JSP AA,VIEW2F
	  SOJLE C,VIEW2C
VIEW2C:	AOS C,IN
	MOVE B,NLINES
	MOVE A,B
	IMULI A,MGEC
VIEW2D:	SKIPA IN,PT
	  ADDI IN,1
	JSP AA,VIEW2F
	  SOJLE B,VIEW2E
VIEW2E:	MOVE B,IN
	HRLZM C,GEA
	HRRM B,GEA
	JRST VIEWP1
VIEW2F:	CAML IN,BEG
	CAML IN,Z
	JRST 1(AA)
	PUSHJ P,GET
	CAIN CH,12
	XCT (AA)
	CAIN CH,11
	SUBI A,7
	SOJG A,-2(AA)
	JRST 1(AA)
VIEW2A:]MOVE B,NLINES
	PUSHJ P,GETAG7
	PUSH P,B
	MOVN B,NLINES
	PUSHJ P,GETAG7
	POP P,B
	JRST VIEWP1

CNTRUP:	PUSHJ P,RCH
	MOVE A,CH
	JRST VALRET
QUESTN:	MOVSI A,(JRST)
	TRCE FF,TRACEF
	MOVSI A,(POPJ P,)
	HLLM A,TRACS
	JRST RET

BAKSL:	TRZE FF,ARG
	JRST BAKS1A
	MOVE IN,PT
	PUSHJ P,GETINC
	CAIE CH,"-
	JRST BAKSL7
	TRO FF,ARG
	JRST BAKSL6
BAKSLA:	PUSHJ P,GETINC
BAKSL7:	CAMLE IN,Z
	JRST BAKSL3
BAKSL6:	CAIN CH,".
	JRST BAKSL5
	CAIG CH,"9
	CAIGE CH,"0
	SOJA IN,BAKSL2
	MOVE A,SYL
	IMULI A,10.
	ADDI A,-60(CH)
	MOVEM A,SYL
	MOVE A,OSYL
	IMULI A,10
	ADDI A,-60(CH)
	MOVEM A,OSYL
	JRST BAKSLA
BAKSL5:	MOVE A,OSYL
	MOVEM A,SYL
	JRST BAKSL2
BAKSL3:	MOVE IN,Z
BAKSL2:	TRZE FF,ARG
	MOVNS SYL
	MOVEM IN,PT
	JRST CD7

BAKS1A:	MOVEI TT,40
	HRRM TT,DPT5
	MOVE TT,C
	TRZE FF,ARG2
	SKIPA F,CRDPT
BAKSL1:	MOVEI F,DPT
	MOVE T,[(700)BAKTAB-1]
	MOVEI C,0
	MOVEI CH,BAKSL4
	HRRM CH,LISTF5
	PUSHJ P,(F)
	MOVEI A,GLITCH
	IDPB A,T
	MOVE B,[(700)BAKTAB-1]
	PUSHJ P,NROOM
	PUSHJ P,INS1B
	JRST RET

BAKSL4:	IDPB CH,T
	AOJA C,CPOPJ

CLOSEB:	SKIPA C,[POP AA,]
OPENB:	MOVSI C,(PUSH AA,)
	PUSHJ P,QREGA
	HRRI C,QTAB-"0(CH)
	MOVE AA,PF	;GET PDL POINTER
	XCT C
	MOVEM AA,PF	;STORE UPDATED PDL POINTER
	JRST CD5

SEMICL:	TRNN FF,ITERF
	TYPR2 (SIXBIT \SNI\)	;SEMICOLON NOT INSIDE ITERATION
	TRNN FF,ARG
	MOVE B,SFINDF

INCMA:	JUMPL B,CD
	MOVEI A,0
INCMA1:	PUSHJ P,SKRCH1
	CAIN CH,74
	AOJA A,INCMA1
	CAIE CH,76
	JRST INCMA1
	SOJGE A,INCMA1
INCMA2:	SOS INTDPH
	SUB P,[3,,3]
	POP P,ITERCT
	JRST RET

GRTH:	SKIPG INTDPH
	TYPR2 2,(SIXBIT \UMC\)	;UNMATCHED CLOSE ANGLE BRACKET
	SOSN ITERCT
	JRST INCMA2
	MOVE A,(P)
	MOVEM A,COMCNT
	MOVE A,-1(P)
	MOVEM A,CPTR
	TRNE FF,TRACEF
	PUSHJ P,CRR


LSSTH1:	TROA FF,ITERF
FLDSZ:	MOVEM B,NLINES
	JRST RET

LSSTH:	AOS INTDPH
	PUSH P,ITERCT
	PUSH P,COMAX
	PUSH P,CPTR
	PUSH P,COMCNT
	SETOM ITERCT
	TRZE FF,ARG
	MOVEM B,ITERCT
	SKIPE ITERCT
	JRST LSSTH1
	JRST INCMA1-1

LINE:	TRNE FF,ARG2
	TYPR2 5,(SIXBIT \WNA\)	;WRONG NO OF ARGS
	PUSHJ P,GETARG
	XOR B,C
	XORM B,PT
	JRST RET

IFE TS,[DECDMP:	PUSHJ P,IOWAIT
	CONO 435550
	MOVE A,CPTR
	ILDB CH,A
	CAIN CH,ALTMOD
	JRST MACDMP
	MOVE T,[440700,,IFE MOBY*<MOBY-40000>*<MOBY-740000>,[MOBY+37760
]IFN MOBY*<MOBY-40000>*<MOBY-740000>,[40000+MOBY
]]	MOVEM T,MACCR
DCDMP2:	PUSHJ P,RCH
	CAIN CH,"$
	MOVEI CH,375
	IDPB CH,T
	CAIE CH,ALTMOD
	JRST DCDMP2
	MOVEI CH,15
	DPB CH,T
	MOVEI CH,0
	IDPB CH,T
	JRST MACDMP+1

IOWAIT:
IFN LPTR,	PUSHJ P,LPTWAT"
	PUSHJ P,UWAIT"
	CONSZ PTP,7
	JRST IOWAIT
TTYWAT:	CONSO TTY,30
	CONSZ TTY,30
	JRST TTYWAT
	POPJ P,

ADDT:	HLRZ A,DDT
	CAIE A,(CLEARM)
	JRST TAB
	PUSHJ P,IOWAIT
	JRST DDT
W=PUSHJ P,IOWAIT	;WAIT FOR IO WITH W$X
]
R=POPJ P,	;RETURN FROM DDT WITH R$X

IFN TS,[
DECDMP:	MOVE A,CPTR
	ILDB CH,A
	CAIE CH,ALTMOD
	JRST VCOM
	.CLOSE TYIC,
	.CLOSE TYOC,
	.CLOSE UTYIC,
	.CLOSE UTYOC,
	.CLOSE LPTC,
	.CLOSE DCHN,
	.CLOSE BDCHN,
	.VALUE
	JRST GOZ

VCOM:	MOVE T,[440700,,GCTAB]
VCOM2:	PUSHJ P,RCH
	CAIN CH,ALTMOD
	JRST VCOMX
	CAIN CH,"$
	MOVEI CH,ALTMOD
	IDPB CH,T
	JRST VCOM2

VCOMX:	MOVEI CH,EOFCHR
	IDPB CH,T
	.VALUE GCTAB
	JRST RET
]
MAC4:	SKIPA A,QTAB-"0(CH)
MAC:	PUSHJ P,QREGA
	TLNE A,400000
	TLNE A,377777
	JRST VALRET
	ADD A,QRBUF
	HRRZ IN,A
	PUSHJ P,GETINC
	CAIE CH,GLITCH
	JRST CD5
	TRZN FF,COLONF
	JRST MAC2
	SKIPN MACPTR
	TYPR2 (SIXBIT /NIM/)	;NOT IN MACRO
	MOVE P,MACPTR
	JRST MAC3
MAC2:	PUSH P,COMAX
	PUSH P,CPTR
	PUSH P,COMCNT
	PUSH P,MARG1'
	PUSH P,MARG2'
	PUSH P,MACPTR
	MOVEM P,MACPTR
MAC3:	MOVE B,NUM
	TRNE FF,SYLF
	XCT DLIM
	TRNN FF,ARG
	MOVEI B,0
	MOVEM B,MARG2
	MOVE B,SARG
	TRNN FF,ARG2
	MOVEI B,0
	MOVEM B,MARG1	;SIGH
	PUSHJ P,GETINC
	MOVE A,CH
	PUSHJ P,GET
	ROT CH,7
	IOR A,CH
	SUBI A,3
	MOVEM A,COMCNT
	MOVEM A,COMAX
	ADDI IN,CBUF*5
	IDIVI IN,5
	MOVE OUT,BTAB(OUT)
	HRR OUT,IN
	TLZ OUT,17
	MOVEM OUT,CPTR
	JRST CD5


X:	SETZM IQREG
	PUSHJ P,QREGA
	PUSH P,CH
	TRNE FF,SLSL
	PUSHJ P,X5
	CLEARM QTAB-"0(CH)
	PUSHJ P,GETARG
	CAMLE C,B
	TYPR2 (SIXBIT \2<1\)
	EXCH B,C
	SUBI C,-3(B)	;C HAS NO. CHARS TO X AWAY + 3
	TRNE FF,SLSL
	SUBI C,3
	ADD B,C	;1ST THREE CHARS ARE GLITCH, REMAINDER, LENGTH STRING/128.
X3:	PUSH P,PT
	ADDM C,(P)
	TRNE FF,SLSL
	SKIPA D,A
	MOVE D,BEG
	MOVEM D,PT
	PUSHJ P,NROOM
	MOVE OUT,RREL
	ADDM OUT,(P)
	ADD B,OUT
	TRNE FF,SLSL
	SKIPA OUT,UPXOPT
	MOVE OUT,BEG
	ADDM C,BEG
	MOVEI CH,GLITCH
	PUSHJ P,PUTINC
	MOVE CH,C
	TRNE FF,SLSL
	ADD CH,UPXOCT
	PUSHJ P,PUTINC
	ROT CH,-7
	MOVE IN,B
	TRNE FF,SLSL
	JRST X7
	SKIPE IQREG
	JRST X4
X1:	PUSHJ P,PUTINC
X8:	CAIN C,3
	JRST X2
	PUSHJ P,GETINC
	SOJA C,X1

X2:	TRNE FF,SLSL
	JRST X9
	SKIPE IQREG
	SKIPA B,PSRBEG
	MOVE B,PT
	SUB B,QRBUF
	TLO B,400000
X9:	SKIPN C,IQREG
	POP P,C
	MOVEM C,PT
	POP P,CH
	TLNE IQF	;IF ON, RET ADDR ON PDL
	EXCH CH,(P)	;ABOVE CH, SO SWAP
	TRZE FF,SLSL
	JRST USEA+2
	JRST USEA+1

X4:	POP P,IQREG
	MOVEM OUT,PT
	AOS PT
	JRST PUTINC

X5:	TLZN A,377777
	TLZN A,400000
	JRST X6
	ADD A,QRBUF
	MOVE IN,A
	PUSHJ P,GETINC
	CAIE CH,GLITCH
	JRST X0
	MOVEM A,UPXOPT'
	PUSH P,C
	PUSHJ P,GETINC
	MOVEM CH,C
	PUSHJ P,GETINC
	ROT CH,7
	IORM CH,C
	ADD A,C
	MOVEM C,UPXOCT'
	POP P,C
	JRST POPJ1

X0:	POP P,CH
	AOBJN P,.+1
X6:	TRZ FF,SLSL
	POPJ P,

X7:	PUSHJ P,PUT
	MOVE OUT,UPXOPT
	SETOM GCDIDL
	PUSHJ P,GCC
	SETZM GCDIDL
	MOVE IN,B
	MOVE OUT,A
	ADDI C,3
	SKIPN IQREG
	JRST X8
	POP P,IQREG
	POPJ P,

;PSEUDO Q-REGS FOR SORT

.QDL=="Z-"A+"9+2
.QKS==.QDL+1
.QKE==.QDL+2

PSORT:	TLOE FF,SORF
	TYPR2 (SIXBIT /ISK/)	;INVALID SORT KEY
	MOVEI CH,.QKS	;GET ARGS
	PUSHJ P,PSI	;IN PSEUDO Q-REGS
	MOVEI CH,.QKE
	PUSHJ P,PSI
	MOVEI CH,.QDL
	PUSHJ P,PSI
	MOVE A,MACPTR
	MOVEM A,RMCPTR'	;SAVE MACPTR
	SETOM MACPTR	;SET FLAG FOR MACRO RETURN
	TLC FF,SORF+SORF2
	MOVE A,MEMSIZ	;SAVE MEMSIZ
	MOVEM A,PSRMT'	;FOR LATER CORE FLUSH
	MOVE T,Z	;GET WORD AFTER Z
	ADDI T,CBUF*5+4	;FOR BEGINNING OF POINTERS
	IDIVI T,5
	MOVEM T,PSMEM'
	SETZM PSZF'
	MOVE TT,Z
	SUB TT,BEG	;# CHARS IN BUFFER
	IMULI TT,LPSDBK	;MAX # WDS IN PTR TBL
	ADD TT,T	;MAX ADDR OF PTR
	MOVEM TT,PSMXMT'
	MOVE B,BEG	;START FROM BEGINNING
	MOVEM B,PT
PS4:	CAML T,PSMXMT
	TYPR2 (SIXBIT \TMR\)	;TOO MANY RECORDS
	HRRM B,2(T)	;3RD WORD OF POINTER:
	PUSH P,B	;-# CHARS,,CHAR ADDR OF RECORD
	PUSH P,T
	MOVEI CH,.QKS	;FIND BEGINNING OF KEY
	PUSHJ P,MAC4
	POP P,T
	MOVE B,PT
	PUSH P,B
	IDIVI B,5
	ADD B,PSBTB(E)	;BIT POINTER TO KEY
	MOVEM B,(T)	;IS 1ST POINTER WORD
	TRO FF,ITERF	;SO LOSING SEARCH WON'T LOSE
	MOVEI CH,.QKE	;FIND END OF KEY
	PUSHJ P,PS2
	IMULI B,7	;B HAS CHAR COUNT
	SOS B	;NOW BIT COUNT -1
	MOVEM B,1(T)	;FOR 2ND POINTER WORD
	SKIPE PSZF	;IF DONE
	JRST PS1	;DON'T TRY MORE
	MOVEI CH,.QDL	;FIND NEXT RECORD
	PUSHJ P,PS2
		;DROPS THROUGH

		;DROPS THROUGH
PS7:	MOVNS B
	HRLM B,2(T)	;-LENGTH OF RECORD FOR AOBJN
	ADDI T,LPSDBK	;NEXT POINTER
	MOVE B,PT
	SKIPL PSZF	;DID WE RUN OUT
	JRST PS4	;NO
	MOVEM T,PSMEMT'
	MOVE A,PSMEM	;LOWER BOUND
	MOVEI AA,(T)	;UPPER BOUND
	MOVEI D,-1(T)	;DYNAMICALLY ALLOCATED PDL
	PUSHJ D,PS3	;SORT POINTERS
	MOVE T,BEG	;SET UP FOR LATER BLT
	IDIVI T,5
	ADDI T,CBUF
	HRRM T,D	;DESTINATION = WORD CONTAINING BEG
	MOVE A,(T)	;MUST HAVE CHARS BEFORE BEG IN WD
	HLL B,BTAB-1(TT)	;GET BPT TO NEW BUFFER AREA
	TLZ B,77
	HRR B,PSMEMT	;WHICH OVERWRITES SORT PDL
	HRLM B,D	;SOURCE FOR BLT
	MOVEM A,(B)	;SAVE CHARS
	MOVE A,PSMEM	;GET POINTERS
PS6:	SKIPL IN,2(A)
	JRST PS5	;NULL RECORD
	PUSHJ P,GET	;MOVE RECORD
	IDPB CH,B
	AOBJN IN,.-2
PS5:	ADDI A,3	;GET NEXT RECORD
	CAMGE A,PSMEMT
	JRST PS6
	BLT D,@PSMEM	;DONE, MOVE IT DOWN
PS8:	MOVE A,RMCPTR	;RESTORE MACPTR
	MOVEM A,MACPTR
	MOVE A,PSRMT	;RESTORE MEMSIZ
	MOVEM A,MEMSIZ
	ADDI A,CBUF*5
	IDIVI A,12000
IFN TS,	.CORE (A)	;FLUSH CORE
	TYPR2 (SIXBIT /CFC/)
	TLZN FF,SORF2	;IF OFF,
	JRST PS9	;RETURN TO ETYPER
	MOVE A,BEG
	MOVEM A,PT
	JRST RET

PS1:	MOVE B,Z
	POP P,C
	SUB B,C
	JRST PS7

PS2:	SETOM SFINDF
	PUSH P,T
	PUSHJ P,MAC4
	POP P,T
	POP P,D	;RETURN POINT
	POP P,C	;OLD PT
	MOVE B,PT
	SKIPL SFINDF	;IF SEARCH FAILED
	SKIPA B,Z	;WE'RE AT THE END
	CAML B,Z	;OTHERWISE CHECK
	SETOM PSZF	;DONE, SET FLAG
	SUB B,C	;# CHARS IN B
	JRST (D)

PSBTB:	430100,,CBUF
	340100,,CBUF
	250100,,CBUF
	160100,,CBUF
	070100,,CBUF

	LPSDBK==3	;NUMBER OF WORDS IN DESCRIPTOR BLOCK
	PP==D	;PDL REG

		;ENTRY TO SORT

PS3:	MOVSI C,770000	;INITIALIZE (UNCHANGED DURING SORT)

		;RECURSION POINT

PS3A:	CAIL A,-LPSDBK(AA)
	JRST PS3I	;0 OR 1 TABLE ENTRY
	HRLM A,(PP)	;SAVE LOWER LIMIT
	PUSH PP,AA	;SAVE UPPER LIMIT

		;SORT LOOP POINT

PS3A1:	SETOB T,TT	;IN CASE COUNTS EXHAUSTED
	SKIPL 1(A)	;IF LOWER ENTRY'S COUNT NOT EXHAUSTED,
	LDB T,(A)	;THEN GET BIT
	SKIPL 1-LPSDBK(AA)	;IF UPPER ENTRY'S COUNT NOT EXHAUSTED,
	LDB TT,-LPSDBK(AA)	;THEN GET BIT
	CAML TT,T	;IF UPPER ENTRY'S BIT .GE. LOWER ENTRY'S,
	JRST PS3D	;THEN BYPASS EXCHANGE
    REPEAT LPSDBK,[
	MOVE B,.RPCNT(A)
	EXCH B,.RPCNT-LPSDBK(AA)
	MOVEM B,.RPCNT(A)
   ]
	EXCH T,TT	;EXCHANGE BITS TOO

		;FROM HERE ON TREAT -1 LIKE 0

PS3D:	JUMPG T,.+2
	ADDI A,LPSDBK	;LOWER ENTRY BIT 0 => INCREMENT LOWER POINTER TO NEXT ENTRY
	JUMPLE TT,.+2
	SUBI AA,LPSDBK	;UPPER ENTRY BIT 1 => DECREMENT UPPER POINTER TO LOWER ENTRY
	CAIE AA,(A)	;AT LEAST ONE ENTRY LEFT?
	JRST PS3A1	;YES
		;DROPS THROUGH

		;(DROPS THROUGH FROM PREVIOUS PAGE)
		;INITIALIZE FOR RECURSION AND RECURSION INITIALIZATION

	HLRZ A,-1(PP)	;GET LOWER LIMIT FOR FIRST RECURSION AND END TEST FOR FOLLOWING ROUTINE
	MOVE T,(PP)	;GET UPPER LIMIT FOR INDEX TO FOLLOWING ROUTINE
	MOVEI B,0	;IN NEXT ROUTINE, B IS COUNT OF NON-EXHAUSTED KEYS

		;DECREMENT BIT COUNTS, IF NOT EXHAUSTED THEN INCREMENT BIT POINTERS

PS3F:	SOSGE 1-LPSDBK(T)	;DECREMENT BIT COUNT, SKIP IF NOT EXHAUSTED
	JRST PS3F2	;EXHAUSTED, SKIP FOLLOWING
	ADDI B,1	;ANOTHER NON-EXHAUSTED KEY
	IBP -LPSDBK(T)	;INCREMENT BIT POINTER
	TDNN C,-LPSDBK(T)
	IBP -LPSDBK(T)	;SKIP OVER BIT 1.1
PS3F2:	SUBI T,3	;BACK UP INDEX TO PREVIOUS ENTRY
	CAIE T,(A)	;IF NOT POINTING TO BEGINNING,
	JRST PS3F	;THEN NOT DONE, LOOP
	JUMPE B,PS3H	;JUMP (SKIPPING RECURSION) IF ALL KEYS EXHAUSTED

		;RECURSE

	PUSHJ PP,PS3A	;SORT LOWER "HALF"
		;AT THIS POINT, A -> MIDPOINT, KEEP AS LOWER LIMIT FOR NEXT RECURSION
	POP PP,AA	;GET UPPER LIMIT (FOR NEXT RECURSION)
	PUSHJ PP,PS3A	;SORT UPPER "HALF"

		;UNSCREW POINTER TABLE, RETURN

	HLRZ A,(PP)	;RESTORE LOWER LIMIT FOR FOLLOWING ROUTINE (AA STILL HAS UPPER LIMIT)
PS3G:	AOSG 1(A)	;INCREMENT BIT COUNT, SKIP IF IT WAS DECREMENTED AT SOS
	JRST PS3G1	;(BYTE POINTER NOT INCREMENTED AT SOS)
	MOVE T,(A)	;GET BIT POINTER
	ADD T,[10000,,]	;DECREMENT
	JUMPGE T,PS3G2	;JUMP => CAN'T POSSIBLY BE SPILLING OVER WORD BOUNDARY
	CAML T,[440100,,]
	SUB T,[430000,,1]	;SPILLED OVER WORD BOUNDARY (OR RATHER SPILL IT OVER " )
PS3G2:	MOVEM T,(A)	;STORE DECREMENTED POINTER
PS3G1:	ADDI A,3	;INCREMENT TO NEXT DESCRIPTOR BLOCK
	CAIE AA,(A)	;DONE?
	JRST PS3G	;NO
	POPJ PP,		;DONE (AT LAST!) (NOTE: ON RETURN, A AND AA BOTH HAVE WHAT AA ORIGINALLY HAD)

PS3H:	POP PP,AA
	JRST PS3G

PS3I:	MOVE A,AA
	POPJ PP,

IFN TS,[

COREX:	MOVE A,MEMSIZ
	ADDI A,CBUF*5
	PUSH P,AA
	IDIVI A,12000
	POP P,AA
	AOS A
	.CORE (A)
	POPJ P,
	AOS (P)
COREX3:	IMULI A,12000
	SUBI A,CBUF*5
	MOVEM A,MEMSIZ
	POPJ P,
]
QGET:	PUSHJ P,QREGA
	MOVE B,A
	TLZN B,377777
	TLZN B,400000
	JRST BAKSL1
	ADD B,QRBUF
	MOVE IN,B
	MOVE B,CH
	PUSHJ P,GETINC
	CAIE CH,GLITCH
	JRST RET
	PUSHJ P,GETINC
	MOVEM CH,C
	PUSHJ P,GETINC
	ROT CH,7
	IORM CH,C
	SUBI C,3
	PUSHJ P,NROOM
	MOVE OUT,PT
	HRRZ IN,QTAB-"0(B)
	ADD IN,QRBUF
	ADDI IN,3
QGET1:	JUMPE C,RET
	PUSHJ P,GETINC
	PUSHJ P,PUT
	AOS OUT,PT
	SOJA C,QGET1

IFE TS,[CLRBF:	PUSHJ P,PIBUFC
	CONO PTR,0
	JRST RET]

GETARG:	TRNE FF,ARG2
	JRST GETAG6
	TRON FF,ARG
	PUSHJ P,CHK2+2
GETAG7:	MOVE IN,PT
GETAG4:	JUMPLE B,GETAG2
	CAMN IN,Z
	JRST GETAG1
	PUSHJ P,GETINC
	CAIE CH,12
	JRST GETAG4
	SOJG B,GETAG4

GETAG1:	TRZE FF,COLONF
	SUBI IN,2
	CAMG IN,BEG
	MOVE IN,BEG
	MOVE C,PT
	MOVE B,IN
	TLZE FF,NEGF
	EXCH B,C
	POPJ P,

GETAG6:	ADD B,BEG
	ADD C,BEG
	POPJ P,


GETAG2:	SOS IN
	CAMG IN,BEG
	JRST GETAG3
	PUSHJ P,GETINC
	CAIE CH,12
	SOJA IN,GETAG2
	AOJLE B,.-1
GETAG3:	TLO FF,NEGF
	JRST GETAG1

DEFINE NTS A/
IFE TS,	A
IFN TS,	TYPR2 (SIXBIT \NTS\)
TERMIN

DEFINE OTS A/
IFE TS,	TYPR2 (SIXBIT \OTS\)
IFN TS,	A
TERMIN

ECMD:IFE TS,PUSHJ P,.OPNTP
ECMD1:IFN TS,[PUSHJ P,GDEV
	TLO FF,CTLUF
]	PUSHJ P,LRCH
	CAIN CH,^U
	OTS JRST EUHACK
	CAIGE CH,"A	;IF CHARACTER LESS THAN "A,
	TYPR2 (SIXBIT /IUC/)	;THEN ERROR
IFE TS,[	;LAST FEW COMMANDS NOT IMPLEMENTED OUT OF TIME SHARING
	CAIL CH,"A+LETAB	;IF CHARACTER TOO BIG,
	TYPR2 (SIXBIT /OTS/)	;ONLY TIME-SHARING
]
	XCT ETAB-"A(CH)

ETAB:	OTS JRST EASSIGN	;A
	TYPR2 (SIXBIT \IUC\)	;B
	NTS JRST CLSTP		;C
	JRST DELE		;D
	JRST EXIT		;E
	JRST .FILE		;F
	OTS JRST EGET		;G
	TYPR2 (SIXBIT \IUC\)	;H
	JRST WINIT		;I
	TYPR2 (SIXBIT \IUC\)	;J
	JRST TAPKIL"		;K
	JRST LISTF		;L
	JRST LISTFM		;M
	JRST RENAM		;N
	TYPR2 (SIXBIT \IUC\)	;O
	JRST BPNTRD		;P
	OTS JRST ALINK		;Q
	JRST .OPNRD		;R
	JRST MTNAM		;S
IFE TS,	JRST CNTRU1		;T
IFN TS,	POPJ P,			;T
IFN TS,[JRST EDESINE		;U
	JRST EXIT		;V
	JRST WWINIT		;W
	JRST EXIT		;X
	JRST LISTF		;Y
	JRST LISTFM		;Z
	JRST PSHIC		;[
	JRST PSHOC		;\
	JRST POPIC		;]
	JRST POPOC		;^
	JRST FCOPY		;_
]
LETAB==.-ETAB

IFE TS,[.OPN3:	TLO FF,CTLUF
.OPNTP:	MOVE A,B
	TRNN FF,ARG
.OPN2:	MOVE A,UFPNTR+2
.OPN1:	PUSHJ P,FILEST"
	JRST UTERR
	POPJ P,

UTERR:	JRST .+3(A)
	TYPR1 [ASCIZ /UNIT UNABLE
/]
	TYPR1 [ASCIZ /BAD DIRECTORY
/]
	TYPR1 [ASCIZ /TOO MANY DIRECTORIES
/]
]

IFN TS,[GDEV:	MOVE E,UTF
	MOVEM E,ODDEV	;SAVE FOR ROUTINES THAT WANT TO RETRIEVE IT
	TRNN FF,ARG
	POPJ P,
	MOVMS B
	IDIVI B,NDEVS
	MOVE B,DEVNAM(E)
	HLRM B,UTF
	POPJ P,

DEVNAM:	IRPS XX,,DSK UT1 UT2 UT3 UT4
	SIXBIT \XX\
TERMIN
NDEVS==.-DEVNAM

ASLEEP:	TRZE FF,ARG
	.SLEEP B,
	POPJ P,

EASSIGN:	LDB B,[300,,UTF]
	.ASSIGN B,
	TYPR2 (SIXBIT /UNA/)
	POPJ P,

EDESINE:	LDB B,[300,,UTF]
	.DESIGN B,
	TYPR2 (SIXBIT /UNA/)
	POPJ P,

MTNAM:	MOVE OUT,[440600,,IN]
	HRRZ IN,UTF
	MOVEI IN,-(SIXBIT /UT0/)(IN)
MTN1:	PUSHJ P,LRCH
	CAIN CH,ALTMOD
	JRST MTN2
	SUBI CH,40
	JUMPE CH,MTN1
	TLNN OUT,550000
	JRST MTN2
	IDPB CH,OUT
	JRST MTN1
MTN2:	.UTNAM IN,
	TYPR2 (SIXBIT /UTL/)
	POPJ P,

EGET:	PUSH P,LISTF5
	MOVEI A,TYOM
	HRRM A,LISTF5
	TLZ FF,CTLUF	;EGET TO INSERT IN THE BUFFER
	PUSHJ P,GDATIM
	JFCL
	PUSHJ P,GLPDTM
	MOVE A,DATE	;THE DATE
	PUSHJ P,SIXIND
	MOVE A,TIME	;THE TIME
	PUSHJ P,SIXIND
	.SUSET [.RSNAM,,A]	;THE CURRENT SYSTEM NAME
	PUSHJ P,SIXINS
	.SUSET [.RSNAM,,A]	;THE CURRENT DEFAULT FILE NAMES
	MOVEI B,";
	PUSHJ P,SIXINT
	HRLZ A,UTF
	MOVEI B,":
	PUSHJ P,SIXINT
	MOVE A,UTF1
	MOVEI B,40
	PUSHJ P,SIXINT
	MOVE A,UTF2
	PUSHJ P,SIXINS
	SKIPGE A,ERDEV	;THE NAMES OF THE FILE OPEN FOR READING (IF ANY)
	AOJA A,EGET2	;(NONE, LEAVE BLANK LINE - EVENTUALLY REPLACE THIS CRUFT WITH .RCHST)
	MOVE A,RRDSNM
	MOVEI B,";
	PUSHJ P,SIXINT
	HRLZ A,ERDEV
	MOVEI B,":
	PUSHJ P,SIXINT
	MOVE A,RUTF1
	MOVEI B,40
	PUSHJ P,SIXINT
	MOVE A,RUTF2
EGET2:	PUSHJ P,SIXINS
	SKIPL TIME
	PUSHJ P,SYMDAT	;THE DATE IN STANDARD SYMBOLIC FORM
	PUSHJ P,CRR1
	LDB CH,[320300,,YEAR]	;A THREE DIGIT NUMBER
	PUSHJ P,DGPT	;FIRST DIGIT DAY OF WEEK (0 => SUNDAY)
	LDB CH,[270300,,YEAR]	;SECOND DIGIT DAY OF WEEK OF BEGINNING OF YEAR
	PUSHJ P,DGPT
	LDB CH,[410300,,YEAR]	;THIRD DIGIT 3 BITS
		;4 BIT 1 => NORMAL YEAR AFTER 2/28
		;2 BIT 1 => LEAP YEAR
		;1 BIT 1 => DAYLIGHT SAVINGS TIME IN EFFECT
	PUSHJ P,DGPT
	PUSHJ P,CRR1
	PUSHJ P,POM	;THE PHASE OF THE MOON
	PUSHJ P,CRR1
	POP P,LISTF5
	POPJ P,

SIXIN1:	JUMPE A,CPOPJ
	MOVEI AA,0
	ROTC A,6
	JUMPE AA,SIXIN2
	CAIE AA,':
	CAIN AA,';
SIXIN2:	PUSHJ P,CTLQM
	MOVEI CH,40(AA)
	PUSHJ P,@LISTF5
	JRST SIXIN1
CTLQM:	MOVEI CH,^Q	;INSERT A CONTROL Q IN THE BUFFER
	JRST @LISTF5
SIXINT:	PUSHJ P,SIXIN1	;INSERT IN THE BUFFER THE SIXBIT WORD IN A
	MOVE CH,B	;AND THE ASCII CHAR IN B
	JRST @LISTF5

SIXIND:	JUMPGE A,SIXINS	;ROUTINE TO TYPE C(A) IN SIXBIT OR SIX SPACES, FOLLOWED BY CRLF
	MOVEI CH,40	;ARGUMENT -1 => TYPE SPACES
	MOVEI A,6	;COUNT
	PUSHJ P,@LISTF5	;TYPE A SPACE
	SOJG A,.-1
	JRST CRR1	;END WITH CRLF

SIXINS:	PUSHJ P,SIXIN1
	JRST CRR1	;END WITH CRLF

		;VARIOUS TIME GETTING ROUTINES

GDATIM:	.RDATIM A,	;GET TIME IN A, DATE IN AA
	MOVEM A,TIME	;STORE SIXBIT TIME
	MOVEM AA,DATE	;STORE SIXBIT DATE
	JUMPGE A,POPJ1	;IF TIME AVAILABLE THEN SKIP-RETURN
	POPJ P,		;NOT AVAILABLE, DON'T SKIP (BUT LEAVE TIME AND DATE NEGATIVE)

GLPDTM:	.RLPDT A,	;GET VARIOUS TIMES IN BINARY
	MOVEM AA,YEAR	;SAVE YEAR AND FLAGS
	MOVEM A,LPDTIM	;SAVE LOCALIZED # SECONDS SINCE BEGINNING OF YEAR
	TLNE AA,400000	;IF NORMAL YEAR AFTER FEB 28,
	SUBI A,SPD	;THEN BACK UP A DAY
	TLNE AA,100000	;IF DAYLIGHT SAVINGS TIME IN EFFECT,
	SUBI A,3600.	;THEN BACK UP AN HOUR
	MOVEM A,PDTIME	;SAVE # SECONDS SINCE BEGINNING OF YEAR
	POPJ P,

		;TYPE OUT (THROUGH LISTF5) THE DATE IN ENGLISH

SYMDAT:	PUSHJ P,DOW	;TYPE DAY OF WEEK
	REPEAT 2,PUSHJ P,SPSP	;TYPE TWO SPACES
	MOVE C,DATE	;GET DATE
	DPB C,[221400,,CDATE]	;DEPOSIT SIXBIT FOR DAY OF MONTH
	LDB CH,[220100,,DATE]	;GET FIRST DIGIT OF MONTH
	LDB C,[140400,,DATE]	;GET SECOND DIGIT OF MONTH
	IMULI CH,10.	;MULTIPLY THE FIRST DIGIT TO ITS PROPER WEIGHTING
	ADD C,CH	;ADD TOGETHER TO GET MONTH
	MOVE C,MONTHS-1(C)	;GET MONTH IN SIXBIT
	PUSHJ P,SIXNTY	;TYPE OUT MONTH
	MOVE C,CDATE	;GET FIRST PART OF DATE
	PUSHJ P,TYPR	;TYPE OUT
	MOVE C,DATE	;GET DATE
	MOVEI IN,2	;LIMIT TYPEOUT TO TWO CHARACTERS
	JRST TYPR3	;TYPE OUT LAST TWO DIGITS OF YEAR AND RETURN

MONTHS:	IRPS S,,[JAN FEB MARCH APRIL
MAY JUNE JULY AUG SEPT OCT NOV DEC]
	SIXBIT /S/
TERMIN

		;TYPE OUT DAY OF WEEK

DOW:	LDB A,[320300,,YEAR]	;GET DAY OF WEEK (0 => SUNDAY)
	MOVE A,DOWTBL(A)	;GET SIXBIT FOR DAY (EXCEPT FOR THE "DAY")
	PUSHJ P,SIXIN1	;TYPE OUT
	MOVSI A,(SIXBIT /DAY/)	;NOW FOR THE "DAY"
	JRST SIXIN1	;TYPE IT OUT AND RETURN

DOWTBL:	IRPS DAY,,[SUN MON TUES WEDNES THURS FRI SATUR]
	SIXBIT /DAY/
	TERMIN

		;TYPE OUT THE PHASE OF THE MOON

POM:	PUSHJ P,GNDS0	;GET NUMBER OF DAYS SINCE 1/1/0000
	MULI A,SPD	;CONVERT TO SECONDS IN A AND AA
	JFCL 17,.+1	;CLEAR FLAGS FOR FOLLOWING
	ADD AA,PDTIME	;# SECONDS SINCE BEGINNING OF YEAR
	ADD AA,SYNOFS	;THE MOON DOESN'T QUITE BELIEVE IN THE GREGORIAN CALENDAR SYSTEM
	JFCL 4,[AOJA A,.+1]	;CRY1
	ASHC A,2	;CONVERT TO QUARTER SECONDS
	DIV A,SYNP	;DIVIDE BY NUMBER OF SECONDS IN A PERIOD TO GET NUMBER OF QUARTERS SINCE THEN
	ASH AA,-2	;CONVERT REMAINDER TO SECONDS (# SECONDS INTO THIS QUARTER)
	PUSH P,AA	;SAVE REMAINDER
	IDIVI A,4	;GET QUARTER IN AA
	MOVE A,[SIXBIT /NM+   FQ+   FM+   LQ+/](AA)	;GET SIXBIT CRUFT IN A (I REFUSE TO CHANGE THE 1Q!!!)
	PUSHJ P,SIXIN1	;TYPE IT OUT
	POP P,AA	;RESTORE # SECONDS INTO THIS PERIOD
TDHMS:	MOVEI C,TDHMST	;SET POINTER TO TABLE
TDHMS1:	IDIVI AA,@(C)
	JUMPE AA,TDHMS2
	HRLM B,(P)
	PUSHJ P,[AOJA C,TDHMS1]	;INCREMENT INDEX WHILE RECURSING
	HLRZ B,(P)
TDHMS2:	PUSHJ P,DPT	;TYPE OUT IN DECIMAL
	HLLZ A,(C)	;GET SIXBIT CRUFT
	SOJA C,SIXIN1	;BACK UP INDEX, TYPE OUT, AND RETURN

TDHMST:	SIXBIT /S./+60.	;SECONDS
	SIXBIT /M./+60.	;MINUTES
	SIXBIT /H./+24.	;HOURS
	SIXBIT /D./+<,-1>	;DAYS

SYNP:	2551443.
SYNOFS:	690882.

		;GET NUMBER OF DAYS SINCE 1/1/0000 (AS OF 1/1/CURRENT YEAR) IN A

GNDS0:	MOVEI B,@YEAR	;GET YEAR
	MOVEI A,-1(B)	;ALSO GET YEAR-1 IN A
	IMULI B,365.	;FIRST APPROXIMATION
	IDIVI A,4
	ADD B,A		;ADD NUMBER OF YEARS DIVISIBLE BY 4
	IDIVI A,25.
	SUB B,A		;SUBTRACT NUMBER OF YEARS DIVISIBLE BY 100
	IDIVI A,4
	ADD A,B	;ADD CRUD ALREADY CALCULATED TO NUMBER OF YEARS DIVISIBLE BY 400
	AOJA A,CPOPJ

;FILE COPY
FCOPY:	MOVEI A,6
	HRLM A,UTF
	PUSHJ P,FFRRDD
	TSOPEN UTYIC,UTF
	MOVEI A,7
	HRLM A,UTF
	PUSHJ P,FFRRDD
	TSOPEN UTYOC,UTF
FCOPY2:	MOVE T,[UTOBUF-UTOBE,,UTOBUF]
	.IOT UTYIC,T
	JUMPL T,FCOPY4
	MOVE T,[UTOBUF-UTOBE,,UTOBUF]
	.IOT UTYOC,T
	JRST FCOPY2

FCOPY4:	.CLOSE UTYIC,
	MOVSI T,-UTOBUF-1(T)
	EQVI T,<,-1>#<UTOBUF>
	.IOT UTYOC,T
	.CLOSE UTYOC,
	POPJ P,
]
BPNTRD:	PUSHJ P,.OPNRD
	TRZ FF,ARG
	JRST .FNPNT

IFN TS,[.OPNRD:	PUSHJ P,FFRRDD
RRED:	HRRZ A,UTF
	HRRZM A,ERDEV
	MOVEI A,2
	HRLM A,UTF
	TSOPEN UTYIC,UTF
	MOVEI CH,UTYIC
	DPB CH,[350700,,UTIBE]
IRPS AC,,[A AA B E C]
	PUSH P,AC
TERMIN
	MOVE A,[UTYIC,,A]
	.SUSET [.RSNAM,,A+3]
	.RCHST A,	;CLOBBERS A,AA,B,E,C
	JUMPN A+1,RRED1
	MOVE A+1,UTF+1
	MOVE A+2,UTF+2
RRED1:	MOVEM A+1,RUTF1
	MOVEM A+2,RUTF2
	MOVEM A+3,RRDSNM'	;SAVE SYSTEM NAME (MAY BE 0 => NOT IMPORTANT)
IRPS AC,,[C E B AA A]
	POP P,AC
TERMIN
	TLO FF,UREAD
	MOVE CH,[700,,UTIBE-1]
	MOVEM CH,UTYIP
IFN HLSTSW,SETOM UROSBF
	POPJ P,
]

IFN TS,[	;IO PUSH-DOWN COMMANDS

		;E[ => PUSH INPUT CHANNEL

PSHIC:	TLZ FF,CTLUF	;DON'T TRY TO CONTROL U
	TLZN FF,UREAD	;IF FILE NOT OPEN,
	TYPR2 (SIXBIT /NDO/)	;THEN ERROR
	MOVEI CH,UTYIC	;SET ARG TO FOLLOWING
	PUSHJ P,PSHCK	;C := WORD ADR OR DIE BECAUSE NOT RANDOM ACCESS
	MOVE A,UTYIP	;GET BYTE POINTER
	IBP A		;MAKE SURE IT POINTS *TO* THE WORD TO GET THE NEXT BYTE FROM
	HRREI T,-UTIBE(A)	;GET - # WORDS TO GO TO END OF BUFFER
	JUMPE T,PSHIC2	;JUMP IF AT END OF BUFFER, DON'T NEED TO DO .ACCESS
	ADD C,T		;CALCULATE DESIRED WORD ADDRESS
	.ACCESS UTYIC,C	;CLOBBER TO DESIRED
PSHIC2:	HRRI A,EOFCHR	;GET EOF CHARACTER (1.1 BIT ALWAYS SET)
	PUSHJ P,CHPSH	;DO THE PUSH
	JRST UICLS	;CLOBBER POINTERS AND RETURN

		;E] => POP INTO INPUT CHANNEL

POPIC:	TLZ FF,CTLUF\UREAD	;NO FILE OPEN, DON'T TRY TO CONTROL U
	PUSHJ P,UICLS	;CLOBBER POINTERS FIRST
	MOVE CH,[TRNN T,UTYIC]	;TRNN SKIPS IF THIS RIGHT KIND OF PDL ENTRY, UTYIC CHANNEL TO POP INTO
	PUSHJ P,CHPOP	;POP INTO THE CHANNEL
	.STATUS UTYIC,CH	;GET CHANNEL STATUS
	TRNN CH,77	;IF NO DEVICE OPEN,
	POPJ P,		;THEN THAT'S ALL
	HRRI A,UTIBUF	;CONVERT BACK TO BYTE POINTER
	DBP7 A		;DECREMENT TO GET RELOCATED ORIGINAL POINTER
	MOVEM A,UTYIP	;STORE AS POINTER
	TLO FF,UREAD	;CHANNEL OPEN
	MOVE A,[UTYIC,,A]
	.RCHST A,	;GET CHANNEL (AND FILE) STATUS
	IRPS MEM,,[ERDEV RUTF1 RUTF2 RRDSNM]
	MOVEM A+.IRPCNT,MEM
	TERMIN
	JRST UTRLD2	;READ FROM FILE AND RETURN

		;CHECK THE VALIDITY OF THE INPUT FILE OPEN ON CHANNEL SPECIFIED BY CH

PSHCK:	MOVS A,CH	;GET CHANNEL
	HRRI A,A
	.RCHST A,	;GET WORD ADDRESS IN C (C=A+4)
	JUMPGE C,CPOPJ	;RETURN IF VALID
	TYPR2 (SIXBIT /NRA/)	;NOT RANDOMLY ACCESSIBLE

		;E\ => PUSH OUTPUT CHANNEL

PSHOC:	TLZ FF,CTLUF	;DON'T TRY TO CONTROL U
	TLZN FF,UWRITE	;FILE OPEN?
	TYPR2 (SIXBIT /NFO/)	;NO
	IBP UTYOP	;INCREMENT OUTPUT POINTER TO POINT AT WORD TO DEPOSIT INTO NEXT
	MOVEI A,@UTYOP	;GET EFFECTIVE ADDRESS OF UTYOP
	SUBI A,UTOBUF	;CONVERT TO NUMBER OF FULL WORDS IN OUTPUT BUFFER
	JUMPE A,PSHOC2	;SKIP FOLLOWING IF NONE
	MOVSI A,-1(A)	;DECREMENT COUNT BY ONE AND PUT IN LEFT HALF, CLEAR RIGHT HALF
	EQVI A,#UTOBUF	;COMPLETE TWOS COMPLEMENT TO LEFT HALF AND SET RIGHT HALF TO POINT TO UTOBUF
	.IOT UTYOC,A	;OUTPUT THE PART OF THE BUFFER THAT IS FULL
PSHOC2:	MOVE AA,UTYOP	;NOW GET OUTPUT POINTER AGAIN
	LDB A,[73500,,(AA)]	;GET FIRST FOUR CHARACTERS IN INCOMPLETELY PROCESSED BUFFER WORD
	LSHC A,7	;LEFT-JUSTIFY CHARACTERS AND SHIFT MEAT OF BYTE POINTER IN, LEAVE BIT 1.1 BLANK (=> OUTPUT)
	MOVEI CH,UTYOC	;PUT CHANNEL SPECIFICATION IN CH
	PUSHJ P,CHPSH	;PUSH THE CHANNEL (ALSO PUSH A ONTO LOCAL PDL)
	JRST .FILE2	;CLOBBER BUFFER POINTERS AND RETURN

		;E^ => POP INTO OUTPUT CHANNEL

POPOC:	TLZ FF,CTLUF	;DON'T TRY TO CONTROL U
	PUSHJ P,.FILE2	;CLOBBER BUFFER POINTERS
	MOVE CH,[TRNE T,UTYOC]	;GET CHANNEL AND TEST INSTRUCTION IN T (INSTRUCTION SKIPS IF THIS RIGHT PDL ENTRY)
	PUSHJ P,CHPOP	;POP INTO THE CHANNEL
	MOVEM A,UTOBUF	;STORE BACK PARTIALLY FILLED WORD
	MOVE B,[700,,UTOBUF]	;GET BYTE POINTER LESS POSITION FIELD IN B
	DPB A,[350700,,B]	;DEPOSIT SIZE FIELD + EXTRA LOW BIT
	DBP7 B		;CONVERT BACK TO RELOCATED VERSION OF ORIGINAL POINTER
	MOVEM B,UTYOP	;STORE BACK NEW POINTER
	ANDI A,177	;MASK A TO POSITION FIELD_1
	IDIVI A,5_1	;GET # CHARACTERS STILL TO BE PROCESSED THIS WORD - 1 IN A
	ADDI A,<UTOBE-UTOBUF>*5-4	;CONVERT TO NUMBER OF CHARACTERS YET TO OUTPUT
	MOVNM A,UTYOCT	;STORE AS COUNT REMAINING
	TLO FF,UWRITE	;FILE OPEN
	MOVE A,[UTYOC,,A]
	.RCHST A,	;GET SYMBOLIC DEVICE NAME
	HRRZM A,EIDEV	;STORE OUTPUT DEVICE
	POPJ P,

		;PUSH THE IO CHANNEL SPECIFIED BY CH

CHPSH:	MOVE B,IOP	;GET IO PDL POINTER
	PUSHJ P,CHPSH1	;DO THE PUSH
	MOVEM B,IOP	;STORE BACK UPDATED POINTER
	POPJ P,

		;IO POP INTO THE CHANNEL SPECIFIED BY CH

CHPOP:	HLLM CH,CHPOPX	;STORE VALIDITY CHECKING INSTRUCTION
	HRRM CH,GCHN2	;STORE CHANNEL IN CHANNEL SEARCH ROUTINE (MAKE IT SKIP OVER IT)
	MOVEI C,17	;SET FIRST CHANEL FOR GCHN TO TRY
	MOVE B,IOP	;GET IO PDL POINTER
	HRRZ A,B	;GET RH IN A
	MOVE AA,[TYPR2 (SIXBIT /NOP/)]	;NOT ON PDL: EXECUTED IF SPECIFIED TYPE OF CHANNEL HASN'T BEEN PUSHED
	PUSHJ P,CHPOP1	;DO THE POP
	XCT AA		;LOST, DO THE APPROPRIATE THING
	MOVEM B,IOP	;STORE BACK UPDATED POINTER
	MOVE A,AA	;PUT RETURN LOCAL PDL WORD IN A FOR ROUTINE THAT CALLED THIS ONE
	MOVE CH,C	;RESTORE CH FOR CALLING ROUTINE
	POPJ P,

		;ENTRY ON TOP OF PDL WRONG TYPE, POP IT SOMEWHERE ELSE, RECURSE, THEN PUSH IT BACK

CHPOP3:	PUSH P,T	;SAVE LOCAL DESCRIPTOR WORD ON MAIN PDL
	PUSHJ P,GCHN	;GET A FREE CHANNEL TO POP INTO
	JRST POPAJ	;NO CHANNELS AVAILABLE
	PUSHJ P,CHPOP2	;POP INTO CHANNEL
	HRLM C,-1(P)	;SAVE CHANNEL NUMBER POPPED INTO
	PUSHJ P,[SOJA A,CHPOP1]	;TRY AGAIN ON ORIGINAL TASK
	SOS -1(P)	;LOSE, CAUSE RETURN NOT TO SKIP
	HLRZ CH,-1(P)	;RESTORE CHANNEL NUMBER, THIS TIME IN CH FOR PUSH BACK
	POP P,A		;RESTORE LOCAL PDL ENTRY, BUT IN A
	AOS (P)		;CAUSE RETURN TO SKIP
	JRST CHPSH1	;PUSH BACK CHANNEL AND RETURN

		;FIND A FREE CHANNEL TO POP INTO

GCHN:			;GCHN NAME OF ENTRY TRANSFERED TO, GCHN2 NAME OF INSTRUCTION TO ADDRESS MODIFY
GCHN2:	CAIN C,		;RH MODIFIED, CHANNEL REALLY TRYING TO POP INTO SO LEAVE IT ALONE
	JRST GCHN3	;DON'T POP INTO THIS CHANNEL
	DPB C,[270400,,.+1]	;DEPOSIT CHANNEL FOR .STATUS
	.STATUS T	;CHANNEL PUT IN BY .-1, GET STATUS OF POTENTIAL CHANNEL TO POP INTO
	TRNN T,77	;DEVICE OPEN ON CHANNEL?
	JRST POPJ1	;NO, RETURN WINNING
GCHN3:	SOJGE C,GCHN	;LOSE, TRY NEXT CHANNEL
	MOVE AA,[TYPR2 (SIXBIT /NFC/)]	;NO FREE CHANNELS TO POP INTO
	POPJ P,		;NON-SKIP RETURN

]		;END IFN TS, CONDITIONAL

EXIT:IFN TS,PUSH P,CH
	HRLOI B,377777	;INFINITY
	TRO FF,ARG
	TLNN FF,UREAD
	PUSHJ P,PUNCHR
	TLNE FF,UREAD
	PUSHJ P,PUNCHA
IFE TS,	JRST .FILE
IFN TS,[POP P,CH
	SKIPE AA,52
	MOVEM AA,UTF2
	CAIN CH,"E
	JRST .FILE
	PUSH P,CH
	MOVE A,50
	MOVE B,CPTR
	ILDB B,B
	CAIN B,ALTMOD
	JRST EXIT2
	PUSHJ P,FFRRDD
	MOVE B,[FILPTR]
	MOVE E,[440600,,A]
EXIT3:	ILDB CH,E
	ADDI CH,40
	IDPB CH,B
	TLNE E,770000
	JRST EXIT3
	IBP B
	TRNN E,AA#A
	JRST EXIT3
	.VALUE SETFIL
EXIT2:	MOVE A,UTF1
	MOVE AA,UTF2
	PUSHJ P,.FILE1
	SKIPN A,53
	JRST EXIT1
	MOVEM A,UTF2
	MOVE A,50
	MOVEM A,UTF1
	PUSHJ P,DELE1
EXIT1:	POP P,CH
	CAIN CH,"V
	.VALUE [ASCIZ \:KILL -1<LISP\]
	TRZN FF,COLONF
	.VALUE [ASCIZ \:KILL 0<MIDASDEBUGJLî\]
	.VALUE [ASCII \0<MIDASDEBUGJLî\]
	TRZ FF,ARG+FINF
	SKIPE A,52
	MOVEM A,UTF2
	JRST SYMLPT
FILPTR==10700,,SETFIL

UCLOSE:	MOVE A,UTOF+1
	SKIPA AA,[SIXBIT /FLAP/]
.FILE:	PUSHJ P,FRD
.FILE1:	MOVEM A,UTF3
	MOVEM AA,UTF4
	SKIPGE CH,EIDEV
	TYPR2 (SIXBIT /NFO/)
	HRRM CH,UTF
	TDZA E,E
.FILEX:	MOVEI E,1	;DON'T RENAME
IFN HLSTSW,[MOVEI AA,2
.FILEY:]MOVEI CH,EOFCHR
	PUSHJ P,UTYO
	MOVEI CH,14
IFN HLSTSW,[PUSHJ P,UTYO
	SOJG AA,.FILEY
].FILEA:PUSHJ P,UTYO
	MOVE CH,UTYOP
	HRRI CH,EOFCHR
	TLNE CH,760000
	JRST .FILEA
IFN HLSTSW,[.FILB:SKIPL SEMMOD
	JRST .FILEB
	MOVE A,SECTP
	CAIE A,SECT-1
.FILB6:	SKIPN UROSBF
	JRST .FILB5
	PUSHJ P,UTYI
	JRST .FILB6

.FILB5:	MOVE A,SECTP
	CAIL A,SECTPE
	TYPR2 (SIXBIT \TMS\)
	PUSH A,SECNAM
	PUSH A,CHKSUM
	HRRZM A,SECTP
	PUSH P,B
	PUSH P,C
	MOVEI C,1
	MOVEI A,SECT-1
.FILB9:	CAML A,SECTP
	JRST .FILB3
	LDB AA,[350700,,1(A)]
	CAIN AA,";
	JRST .FILB2
	MOVE AA,2(A)	;CKSM
	MOVEI B,OSECT-3
.FILB4:	ADDI B,2
	CAML B,OSECTP
	JRST .FILB2
	MOVE CH,1(A)
	XOR CH,1(B)
	TDNE CH,[-2]
	JRST .FILB4
	CAME AA,2(B)
.FILB2:	IORM C,1(A)
	ADDI A,2
	JRST .FILB9

.FILB3:	POP P,C
	POP P,B
	MOVEI A,0
	MOVE CH,SECTP
	SUBI CH,SECT-1
	PUSHJ P,UWO
	MOVEM CH,SECTE
.FILB1:	CAML A,SECTE
	JRST .FILEB
	MOVE CH,SECT(A)
	PUSHJ P,UWO
	AOJA A,.FILB1

.FILEB:	MOVEI A,SECT-1
	MOVEM A,SECTP
	MOVEI A,OSECT-1
	MOVEM A,OSECTP
]		;END IFN HLSTSW, CONDITIONAL
	MOVEI CH,UTOBUF-1
	SUB CH,UTYOP
	HRLS CH
	HRRI CH,UTOBUF
	.IOT UTYOC,CH
	JUMPN E,.FILE2
	SETZM UTF1
	MOVEI CH,UTYOC
	MOVEM CH,UTF2
	.FDELE UTF
	JRST OPNER1
	MOVE A,UTF3
	MOVEM A,UTF1
	MOVE A,UTF4
	MOVEM A,UTF2
.FILE2:	PUSH P,0
	MOVE 0,[REPEAT 5,[EOFCHR_<7*.RPCNT>+]]	;DISGUST
	.CLOSE UTYOC,
	SETOM EIDEV
	POP P,0
	TLZ FF,UWRITE
	POPJ P,


WWINIT:	PUSHJ P,FFRDEV	;SET DEFAULT FILENAMES
WINIT:	MOVSI A,3
	HRR A,UTF
	HRRZM A,EIDEV
	JSP T,WINITA
	JSP TT,OPNER
IFN HLSTSW,[SETZM CHKSUM
	MOVE A,[";_35]
	MOVEM A,SECNAM
	MOVEI A,SECT-1
	MOVEM A,SECTP
	TRZ FF,DUBSCF
]	POPJ P,

WINITA:	MOVEM A,UTOF
	.OPEN UTYOC,UTOF
	XCT (T)
FHAK:	TLO FF,UWRITE+PNSTOP
	MOVE CH,[700,,UTOBUF-1]
	MOVEM CH,UTYOP
	MOVNI CH,<UTOBE-UTOBUF>*5
	MOVEM CH,UTYOCT
	JRST 1(T)

CNTRLE:	.CLOSE LPTC,
	TLZ FF,LPTF
	JRST RET

CTLB1:	MOVEI A,0
	.OPEN LPTC,TSLPTF
	MOVNI A,1
	JRST VALRET

CNTRLB:	TRZE FF,COLONF
	JRST CTLB1	;: HAS VALUE
	TSOPEN LPTC,TSLPTF
]
IFE TS,[CNTRLB:	MOVEI CH,14
	AOSN CTLBF'
IFN LPTR,PUSHJ P,APILPT
]
	TLO FF,PNSTOP+LPTF
CTLB3:	TRZE FF,COLONF
	JRST VALRET
	JRST CD

IFE TS,[ZZ==.
RDCHN==3îîPCHCHN==UTCCHN"
FLGCHN==6
DATCHN==7
APRCHN==5
TPCHN==2
TPCHNA==40
LPTCHN==PCHCHN
TTYCHN==PCHCHN


LOC 40+APRCHN+APRCHN
JSR IAPRBRK

LOC 40+RDCHN+RDCHN
JSR RBRK

LOC 40+FLGCHN+FLGCHN
JSR RECYC

LOC 40+DATCHN+DATCHN
BLKO DIS,BLKOP
TYPR1 [ASCIZ /DISPLAY BLKO OVERFLOW
/]

LOC 40+PCHCHN+PCHCHN
JSR PBRK

LOC ZZ

RECYC:	0
	EXCH A,BLKOPR
	MOVEM A,BLKOP
	EXCH A,BLKOPR
	CONO DIS,300+FLGCHN*10+DATCHN
	JRST 12,@RECYC
]DISINI:IFN TS,[SKIPE DSW
	JRST DIS1
	MOVE T,[440700,,DISBUF]
	MOVEM T,DBUFPT
	MOVEI T,^T
	IDPB T,DBUFPT
	POPJ P,
]
IFE TS,[
	SETZM BARPNT
	MOVE T,Z
	IDIVI T,5
	ADDI T,CBUF+2
	MOVEM T,DISBUF
	MOVEI TT,20115+IFN TS,2
	IOR TT,CHSIZ
	PUSH T,TT
	PUSH T,[221700060000]
	HRLI T,600
	MOVEM T,DISPNR
	LDB TT,[(40200)CHSIZ]
	MOVNS TT
	MOVEI T,170.
	LSH T,(TT)
	TRZ T,7
	MOVEM T,CHCNTS
	MOVNM T,CHCNT
	MOVEI T,86.
	LSH T,(TT)
	MOVEM T,LINES
	MOVEI T,(HRRZ A,(CH))
	HRLM T,DISA1
	POPJ P,
]
IFN TS,[
MGEL==22.	;NUMBER LINES IN GE CONSOLE
MGEC==45.	;#CHARS/LINE
DIS1:	SKIPL RGETTY
	POPJ P,
	.IOT DCHN,[^T]
	HRLI CH,-MGEL-1
	HLROM CH,LINES'
	TLCA CH,<-MGEL-1>#<-MGEC-1>
DIS1A:	HRLI CH,-MGEC
	HLROM CH,CRCNT'
	AOS LINES
	POPJ P,

DIS2:	SKIPL RGETTY
	POPJ P,
	MOVEM CH,DIS7B'
	MOVEI CH,[566660,,]	;CLOSE BRAK, OPEN BRAK
	CAIN IN,1(A)
	PUSHJ P,DIS7
	SKIPA CH,DIS7B
DIS3:	TRO FF,VIEWF
	MOVEM CH,DIS7B
DIS3B:	SKIPG LINES
	CAIN CH,12
	POPJ P,
	SKIPL LINES
	JRST DIS4
	CAIN CH,15
	JRST DIS6A
	CAIN CH,11
	JRST DIS8
	CAIE CH,ALTMOD
	CAIL CH,40
	JRST DIS6
	DPB CH,[260600,,DIS3A]
	SKIPA CH,DIS6B
DIS5:	MOVEI CH,[ASCIZ \FLUSHED\]
DIS7:	HRLI CH,440700
	MOVEM CH,DIS7A'
DIS7C:	ILDB CH,DIS7A
	JUMPE CH,DIS6C
	PUSHJ P,DIS6
	JRST DIS7C

DIS6E:	SKIPA CH,DIS7B
DIS6D:	SKIPA CH,DIS7B
DIS6:	AOSL CRCNT
DIS6A:	PUSHJ P,DIS1A
	.IOT DCHN,CH
DIS6C:	MOVE CH,DIS7B
DIS6B:	POPJ P,DIS3A

DIS4:	AOS LINES
	HRRM CH,DIS3A
	MOVEI CH,[ASCIZ \--MORE--\]
	PUSHJ P,DIS7
	PUSHJ P,TYI
	CAIN CH,40
	JRST DIS4A
	MOVEM CH,UNRCHC
	JRST DIS5

DIS4A:	PUSHJ P,DIS1
	HRRZ CH,DIS3A
	JRST DIS3B

DIS8:	MOVN CH,CRCNT
	SUBI CH,7
	JUMPL CH,DIS6D
	IORI CH,7
	MOVNM CH,CRCNT
	JRST DIS6E
]

DISAD:	MOVE A,PT
IFN TS,[SKIPE DSW
	JRST DIS2
]	SKIPN LINES
	POPJ P,
	CAIN IN,1(A)
	JRST DISBAR
IFN TS,[
DISA1:	CAIGE CH,40
	JRST DISA2
DISA3:	IDPB CH,DBUFPT
	MOVE A,DBUFPT
	CAME A,[010700,,DISBUF+DISBFL-1]
	POPJ P,
	MOVE A,[440700,,DISBUF]
	MOVEM A,DBUFPT
	MOVE A,[-DISBFL,,DISBUF]
	.IOT BDCHN,A
	POPJ P,

DISA2:	CAIE CH,11
	CAIN CH,12
	JRST DISA3
	CAIN CH,15
	JRST DISA3
	CAIN CH,33
	JRST DISA5
	PUSH P,CH
	MOVEI CH,"^
	PUSHJ P,DISA3
	POP P,CH
	ADDI CH,100
	JRST DISA3

DISA5:	MOVEI CH,"$
	JRST DISA3
]

IFE TS,[
	HRRZ\HLRZ A,DISTBL(CH)
	TRNN A,-100
	JRST DISA2
	TRNE A,-200
	JRST (A)
	MOVEI A,40
	PUSHJ P,DISA2
	XCT DISA1
	SKIPLE CHCNT
DISA2:	AOSG CHCNT
DISA3:	IDPB A,DISPNR
	POPJ P,

DEFINE LC A
A,,DISLC
TERMIN

DEFINE UC A
DISUC,,A
TERMIN

DEFINE AC A
A,,A
TERMIN


DISACR:	MOVE CH,CHCNTS
	MOVNM CH,CHCNT
	MOVEI A,34
	JRST DISA3

DISALF:	SOS LINES'
	MOVEI A,33
	JRST DISA3

DSATB:	MOVEI A,40
DISAT1:	LDB CH,[300,,CHCNT]
	CAIE CH,7
	PUSH P,[DISAT1]
	JRST DISA2

DISBLB:	MOVEI A,50
	PUSHJ P,DISA2
	TRO CH,100
DISUC:	SKIPA A,[HRRZ A,35(CH)]
DISLC:	MOVE A,[HLRZ A,36(CH)]
	IDPB A,DISPNR
	HLLM A,DISA1
	JRST DISA1

DISBS:	SOS CHCNT
	MOVEI A,72
	JRST DISA3

DISRUB:	MOVEI A,"O&77
	PUSHJ P,DISA2
	MOVEI CH,10
	PUSHJ P,DISA1
	MOVEI A,"X&77
	JRST DISA2


DISBAR:	MOVEI A,36
	IDPB A,DISPNR
	MOVEI A,62
	IDPB A,DISPNR
	MOVE A,DISPNR
	MOVEM A,BARPNT
	MOVEI A,(HLRZ A,(CH))
	HRLM A,DISA1
	JRST DISA1

DISTBL:	REPEAT 7,LC DISBLB
	LC 63
	LC DISBS
	AC DSATB
	AC DISALF
	LC DISBLB
	LC DISBLB
	AC DISACR
	REPEAT 33-16,LC DISBLB
	LC 47
	REPEAT 4,LC DISBLB
	AC 40
	REPEAT 47-41,UC <.-DISTBL>&77
	LC 100+65,	;SINGLE QUOTE
	REPEAT 133-50,UC <.-DISTBL>&77
	LC 53
	LC 52
	LC 54
	LC 100+67
	LC 60
	LC 100+66
	REPEAT 173-141,LC <.-DISTBL-140>
	LC 55
	LC 62,	;VERTICAL BAR=174
	LC 56
	LC 43,	;TILDE=176
	UC DISRUB
IFN .-DISTBL-200,PRINTX /DISTBL LOSS/

]
IFN TS,[
DISBAR:	PUSH P,CH
	MOVEI CH,^B
	PUSHJ P,DISA3
	MOVEI CH,"|
	PUSHJ P,DISA3
	MOVEI CH,^E
	PUSHJ P,DISA3
	POP P,CH
	JRST DISA1
]
DISCLG:	IFN TS,[
	SKIPE DSW
	JRST DISCL1
DISCL2:	MOVE A,DBUFPT
	TLNN A,760000
	JRST DISCL3
	MOVEI A,EOFCHR
	IDPB A,DBUFPT
	JRST DISCL2

DISCL3:	MOVEI A,DISBUF
	SUB A,DBUFPT
	SOS A
	HRLS A
	HRRI A,DISBUF
	.IOT BDCHN,A
	POPJ P,
]
IFE TS,[
	MOVE A,DISPNR
	MOVEI CH,37
	IDPB CH,A
	TLNE A,550000
	JRST .-2
	TLC A,2400
	MOVEI CH,3000
	IDPB CH,A
	HRRZ B,DISBUF
	MOVEM B,BLKOPR
	MOVEI CH,6
	CAIL B,-20.(A)
	XORM CH,1(B)
	CONO PI,2237
	CONO PI,4002
	CONO APR,2000+APRCHN
	POPJ P,
]
IFN TS,[
DISCL1:	SKIPL RGETTY
	POPJ P,
	.IOT DCHN,[15]
	AOSG LINES
	JRST DISCL1
	JRST DIS1
]
GET:	MOVEI TT,(IN)
	IDIVI TT,5
	LDB CH,BTAB(TT1)
	POPJ P,

PUT:	MOVEI TT,(OUT)
	IDIVI TT,5
	DPB CH,BTAB(TT1)
	POPJ P,

GETINC:	PUSHJ P,GET
	AOJA IN,CPOPJ

PUTINC:	PUSHJ P,PUT
	AOJA OUT,CPOPJ

	440700+TT,,CBUF	;FOR SORT
BTAB:	350700+TT,,CBUF
	260700+TT,,CBUF
	170700+TT,,CBUF
	100700+TT,,CBUF
	10700+TT,,CBUF


		;MAKE ROOM IN BUFFER AT CURRENT LOCATION
		;C HAS # CHARACTERS TO BE INSERTED, MAY BE NEGATIVE

NROOM:	TLNE FF,SORF2
	TYPR2 (SIXBIT /ISK/)	;INVALID SORT KEY
	CLEARM CRREL
	CLEARM RREL
	MOVEM 17,AC2+15	;SAVE 17
	MOVE 17,PT
	CAME 17,Z
	JRST NROOM7	;NOT AT END OF BUFFER
	ADD 17,C
	CAMGE 17,MEMSIZ
	JRST NROOM1
NROOM7:	MOVE 17,[(2)AC2]
	BLT 17,AC2+14	;SAVE REST OF AC'S
	JUMPL C,NROOM6	;JUMP IF DELETING
	SETOM GCFLG
NROOM9:	MOVE 17,Z
	ADD 17,C
	CAML 17,MEMSIZ
	JRST NRGC
	MOVE A,PT
	CAMN A,Z
	JRST NRM5A
	ADDI 17,CBUF*5
	MOVE 14,C
	IDIVI 14,5
	IMULI 15,7
	MOVN 13,15
	MOVEI 15,-43(15)
	MOVE 11,PT
	ADDI 11,CBUF*5
	IDIVI 11,5
	MOVNI 16,-5(12)
	IMULI 16,7
	DPB 16,[(300600)NROOM2]
	ADDI 14,1(11)
	MOVE 16,Z
	ADDI 16,CBUF*5
	IDIVI 16,5
	MOVEI B,1(16)
	SUB B,11
	HRLI 11,(MOVE A,(B))
	HRLOI 12,(ROT A,)
	HRLI 13,(ROTC A,)
	HRLI 14,(MOVEM AA,(B))
	HRLI 15,(ROTC A,)
	MOVE 17,[JRST .+3]
	MOVE 16,.+1
	SOJGE B,11
	ROTC A,43(13)
	DPB A,NROOM2
NRM5A:	ADDM C,Z
NROOM5:	MOVS 17,[(2)AC2]
	BLT 17,17
	POPJ P,

IFN TS,[
GCRM:	PUSHJ P,COREX
	TYPR2 (SIXBIT /SCE/)
	POPJ P,
]
NRGC:	PUSHJ P,GC
	JRST NROOM9

		;NROOM CALLED WITH POINTER AT END OF BUFFER

NROOM1:	ADDM C,Z
	MOVE 17,AC2+15
	POPJ P,

		;NROOM CALLED WITH NEGATIVE ARGUMENT, REMOVE CHARACTERS FROM BUFFER

NROOM6:	MOVE 14,PT
	ADDI 14,CBUF*5
	IDIVI 14,5
	MOVEM 14,B
	HRRM 14,NROOM4
	IMULI 15,7
	DPB 15,[(300600)NROOM4
	MOVNI 15,-44(15)
	DPB 15,[(360600)NROOM4
	MOVE 11,Z
	ADDI 11,CBUF*5
	IDIVI 11,5
	ADDI 11,1
	MOVE 13,C
	IDIVI 13,5
	ADDI 13,-1(11)
	MOVNM 14,12
	IMULI 12,7
	MOVNI 15,-43(12)
	SUBI B,1(13)

NROOM8:	HRLI 11,(MOVE AA,(B))
	HRLI 12,(ROTC A,)
	HRLI 13,(MOVEM A,(B))
	MOVE 14,[ADDM A,@13
	HRLI 15,(ROTC A,)
	MOVE 17,[JRST NROOM3
	ADDM C,Z
	LDB C,NROOM4
	MOVE A,@11
	ROT A,-1
	MOVE 16,.+1
	AOJLE B,11

NROOM3:	DPB C,NROOM4
	JRST NROOM5

GC:	AOSE GCFLG
IFN TS,	JRST GCRM
IFE TS,	TYPR2 (SIXBIT /SCE/)
GCC:	SETOM GCPTR
	SETOM GCTCLB	;GCTAB ABOUT TO BE CLOBBERED, WIPING OUT LAST SEARCH STRING COMPILATION
	CLEARM SYMS
	MOVE T,[SYMS,,SYMS+1
	BLT T,SYMEND-1	;CLEAR O SYM TAB
	MOVEI T,CPTR	;MARK CPTR
	PUSHJ P,GCMA
	HRRZ T,P	;MARK PDL
	PUSHJ P,GCMA
	CAIL T,PDL
	SOJA T,.-2
	HRRZ T,PF	;GET PF
	CAIL T,PFL
	PUSHJ P,GCM
	CAILE T,PFL
	SOJA T,.-2
	MOVE T,[(,-NQREG)QTAB]
	PUSHJ P,GCM
	AOBJN T,.-1
	SKIPE GCDIDL'
	POPJ P,
	SKIPGE GCPTR
	JRST GCE

GCS:	MOVE IN,QRBUF
GCS1A:	MOVSI TT,1*5
	MOVE OUT,GCPTR
GCS1:	HRRZ A,GCTAB(OUT)
	ADD A,QRBUF
	CAMGE A,IN
	JRST GCS2
	CAMGE A,TT
	MOVE TT,A
		;DROPS THROUGH

		;DROPS THROUGH
GCS2:	SOJGE OUT,GCS1
	TRNN TT,-1
	JRST GCE1
	MOVE F,TT
	IDIVI IN,5
	IDIVI F,5
	ADDI IN,CBUF+1
	ADDI F,CBUF
	MOVS OUT,F
	MOVE T,F
	SUB T,IN
	JUMPL T,GCS4A
	HRR OUT,IN
	MOVE B,Z
	IDIVI B,5
	SUBI B,-CBUF(T)
	BLT OUT,(B)
	MOVNS OUT,T
	IMULI OUT,5
	ADDM OUT,BEG
	ADDM OUT,PT
	ADDM OUT,Z
	ADDM OUT,RREL
	MOVE CH,GCPTR
GCS3:	HRRZ A,GCTAB(CH)
	ADD A,QRBUF
	CAMGE A,TT
	JRST GCS4
	ADDM OUT,GCTAB(CH)
	HLRZ A,GCTAB(CH)
	CAIN A,CPTR
	ADDM OUT,CRREL
	SKIPL (A)
	ADDM T,(A)
	SKIPGE (A)
	ADDM OUT,(A)
GCS4:	SOJGE CH,GCS3
	ADD TT,OUT
GCS4A:	MOVE IN,TT
	PUSHJ P,GETINC
	CAIE CH,GLITCH
GCERR:	TYPR1 [ASCIZ /GC ERROR
/]
	PUSHJ P,GETINC
	MOVE A,CH
	PUSHJ P,GETINC
	ROT CH,7
	IOR A,CH
	ADDI IN,-3(A)
	JRST GCS1A

GCM:	MOVE IN,(T)
	TLZE IN,400000
	TLZE IN,377777
	POPJ P,
	ADD IN,QRBUF
GCM2:	CAML IN,BEG
	POPJ P,
	SKIPE GCDIDL
	JRST GCD
	PUSHJ P,GET
	CAIE CH,GLITCH
	POPJ P,
	SUB IN,QRBUF
	JUMPL IN,CPOPJ
	AOS TT,GCPTR
	CAIL TT,GCTBL
	JRST GCERR
	HRL IN,T
	MOVEM IN,GCTAB(TT)
	POPJ P,

GCMA:	LDB TT,[(221400+T)]	;PTR IN T
	CAIE TT,700
	POPJ P,
	MOVE IN,-1(T)	;GET COMAX
	SUB IN,1(T)	;SUB COMCNT
	LDB TT,[(360600+T)]
	IDIVI TT,7
	HRRZ TT1,(T)
	IMULI TT1,5
	SUBI TT1,CBUF*5-2(TT)
	SUBM TT1,IN
	JRST GCM2
GCD:	CAMLE IN,OUT
	ADDM C,(T)
	POPJ P,

GCE:	MOVE IN,QRBUF
GCE1:	IDIVI IN,5
	ADDI IN,1
	MOVE T,BEG
	IDIVI T,5
	CAMG T,IN
	POPJ P,
	SUBM IN,T
	ADDI IN,CBUF
	HRLS IN
	SUB IN,T
	MOVSS IN
	MOVE B,Z
	IDIVI B,5
	ADDI B,CBUF(T)
	BLT IN,(B)
	IMULI T,5
	ADDM T,BEG
	ADDM T,PT
	ADDM T,Z
	ADDM T,RREL
	POPJ P,

IFE TS,[IAPRBRK:	0
	PUSH P,A
	CONSO 1200
	JRST ILMEM
	CONO 1440+APRCHN
	JSR APRBRK"
	SOSG BARFL1
	JRST BARFL2
APRBK7:	SKIPGE OFTAPE
	CONSZ PTR,400
	JRST APRB69
	SETOM PWOWOT
APRB69:	SKIPGE RBRK+1
	AOSG RDRUN
	JRST APRBK3
	MOVEI A,(JSR)
	HRLM A,RBRK+1
	SETOM OFTAPE
	CONO PTR,400
APRBK3:	CONSO DIS,77
	JRST APRBA
	MOVE A,BLKOP
	HRRZS BLKOP
	CAMN A,BLKOP
	CONO PI,4002
APRBA:	AOS A,TIME
	SUB A,TSTPTM
	CAIL A,10
	SKIPG BRKFLG
	JRST APRBA1
	SETOM BRKFLG
	HRROS STOPF
APRBA1:	POP P,A
	JRST 12,@IAPRBRK

BARFL2:	CONSO DIS,77
	JRST APRBK7
	MOVEI A,30.
	MOVEM A,BARFL1
	LDB A,BARPNT
	TRC A,22
	DPB A,BARPNT
	JRST APRBK7

ILMEM:	MOVEI B,0
	CONSO 200000
	MOVEI B,10
	CONO 433550+APRCHN
	MOVE P,[(,-LPDL)PDL-1]
	MOVEI CH,7
	PUSHJ P,TYO
	SOJG B,.-1
	TRO FF,VIEWF
	JRST 10,ERR+1
IFN LPTR,[
APILPT:	EXCH A,CH
	PUSHJ P,PILPT"
	EXCH A,CH
	POPJ P,
]

PIPUN:	SKIPG PUNCC
	JRST .-1
	IDPB CH,PUNIP
	HRRZ CH,PUNIP
	CAIN CH,PUNBE-1
	MOVEI CH,PUNBO
	HRRM CH,PUNIP
	SOS CH,PUNCC
	CONSO PTP,7
	CONO PTP,10+PCHCHN
	POPJ P,

PBRK:	0
	JSR UTCBRK"
	PUSH P,A
PBRK1:
IFN LPTR,[
	JRST LPTBRK"
LPTRTN":]
	CONSO PTP,10
	JRST PITELE
	MOVEI A,+<PUNBE-PUNBO>*4-4
	CAMG A,PUNCC
	JRST PUNSTP
	ILDB A,PUNOP
	DATAO PTP,A
	HRRZ A,PUNOP
	CAIN A,PUNBE-1
	MOVEI A,PUNBO
	HRRM A,PUNOP
	AOSA PUNCC
PUNSTP:	CONO PTP,0
POPRET":	POP P,A
	JRST 12,@PBRK

PUNCC:	+<PUNBE-PUNBO>*4-4
PUNIP:	(1000)PUNBO-1
PUNOP:	(1000)PUNBO-1
TTYRET=POPRET
]
IFN TS,[

TSIN2:	TRZE B,TYPIN
	JRST TSINT1
	JRST TSIN2A

TSINT1:	MOVEI A,TYIC
	.ITYIC A,
	JRST TSIL
	CAIN A,^Z
	.LOGOUT
	CAIE A,^G
	JRST TSIL
	.RESET TYOC,
	.RESET TYIC,
	SETOM STOPF
	HRRZ A,TSINT+1
	CAIN A,TYIW
TSINT5:	TLO FF,FATAL
	JRST TSIL

TSINT4:	SOS TSINT+1
	PUSHJ P,COREX
	JRST .+2
	JRST TSIL
	IITYPR [SIXBIT \NOMEM\]
TSIN4A:	MOVEI A,15.
	PUSHJ P,INTXCT
	.SLEEP A,
	PUSHJ P,COREX
	JRST TSIN4A
	JRST TSIL

IOCERR:	PUSH P,TT
	SOS TT,TSINT+1
	ADDI TT,2
	ATYPE [ASCIZ *
I/O CHANNEL ERROR*]
	PUSHJ P,ERRZAP
	ATYPE ERRBUF
	POP P,TT
	.VALUE
	JRST TSIL

TSINT3:	ITYPR (SIXBIT \PCE\)
	JRST TSINT5

]
IFE TS,[
RBRK:	0
	JSR RDTEM
	EXCH B,RDTEM
	PUSH P,A
	MOVNI A,10
	MOVEM A,RDRUN
	IDPB B,RDIP
	HRRZ A,RDIP
	CAIN A,RBEND-1
	MOVEI A,RBUF
	HRRM A,RDIP
	AOS A,RCC
	CAILE A,RDCHAR/4
	CAIE B,214
	CAIL A,RBEND*5-RBUF*5-30
	JRST RBRK2
RBRK3:	POP P,A
	MOVE B,RDTEM
	JRST 12,@RBRK

RBRK2:	MOVEI A,(JSR)
	HRLM A,RBRK+1
	JRST RBRK3

RDTEM:	0
	CONO PTR,RDCHN
	JRST 12,@RBRK
]
IFN TS,[
;EXECUTE NEXT INSTRUCTION WITH INTERRUPTS ENABLED

INTXCT:	PUSH P,TSA	;SAVE STORED A,
	PUSH P,TSINT	;B,
	PUSH P,TSINT+1	;AND PC TO RETURN TO
	.SUSET INTON	;ENABLE INTERRUPTS
	XCT @-3(P)	;EXECUTE THE INSTRUCTION
;MAYBE INSERT FOLLOWING IN CASE INSTRUCTION SKIPS
;	JRST .+2
;	AOS -3(P)
	.SUSET INTOFF
	POP P,TSINT+1
	POP P,TSINT
	POP P,TSA
	JRST POPJ1	;RETURN, SKIPPING OVER INSTRUCTION
]
IFE TS,[
PIRPA3:	AOSN PWOWOT
	PUSHJ P,PIBUF1
	AOSG OFTAPE
	JRST PIBUFX
	MOVEI CH,20
	SKIPL RBRK+1
	PUSHJ P,RDST+1
PIRPA:	SKIPG RCC
	JRST PIRPA3
	HRRZ CH,RDOP
	CAIN CH,RBEND-1
	MOVEI CH,RBUF
	HRRM CH,RDOP
	SOS CH,RCC
	SKIPL OFTAPE
	CAIL CH,RDCHAR*3/4
	JRST PIRPA4
	SKIPL RBRK+1
	PUSHJ P,RDST
PIRPA4:	ILDB CH,RDOP
	CAIN CH,177
	JRST PIRPA
	JUMPE CH,PIRPA
	POPJ P,

PIBUFX:	CONO PTR,400
	JRST PIBUFD

PIBUF1:	CLEARM OFTAPE
PIBUFC:	CONO PTR,0
PIBUFD:	MOVNI CH,10
	MOVEM CH,RCC
	MOVE CH,RDIP
	MOVEM CH,RDOP
	MOVEI CH,(JSR)
	HRLM CH,RBRK+1
	MOVEI CH,14
	POPJ P,

	MOVEI CH,10
	MOVNM CH,RDRUN
	CONSZ PTR,20
	JRST .-1
	HRLI CH,(DATAI PTR,)
	HLLM CH,RBRK+1
	CONO PTR,RDCHN(CH)
	POPJ P,

RDOP:	(700)RBUF
RDIP:	(700)RBUF
RCC:	0
OFTAPE:	0
RDRUN:	0

RDST:	MOVEI CH,10
	MOVNM CH,RDRUN
	CONSZ PTR,20
	JRST .-1
	HRLI CH,(DATAI PTR,)
	HLLM CH,RBRK+1
	CONO PTR,RDCHN(CH)
	POPJ P,

LOOK:	HRLZI A,-27
	SKIPA TT,UFPNTR"
	ADDI TT,2
	CAMN B,(TT)
	CAME C,1(TT)
	AOBJN A,LOOK+2
	TLZN A,-1
	POPJ P,	;NOT FOUND
	AOS A
]POPJ1:	AOS (P)
	POPJ P,

IFE TS,[RRED:	MOVE A,LFRED1
	MOVE AA,LFRED2
	PUSHJ P,OPNRD
	TYPR1 [ASCIZ /FILE NOT FOUND
/]
	POPJ P,


.OPNRD:	PUSHJ P,FFRRDD
.OPNR1:	PUSHJ P,OPNRD"
	TYPR1 [ASCIZ /FILE NOT FOUND
/]
	TLO FF,UREAD
	JRST CNTRU1
]

IFN TS,[FFRDEV:TLOA FF,NEGF
]FRD:	IFN TS,TLZ FF,NEGF
	TROA FF,ALTF
FFRRDD:	TRZ FF,ALTF
	MOVE A,UTF1
	MOVE AA,UTF2
	TRO FF,NOTF+FINDR
F1:	MOVEI C,0
	MOVE B,[440600,,C]
F2:	PUSHJ P,LRCH
	CAIE CH,40
	CAIN CH,ALTMOD
	JRST SFN
	CAIN CH,^B	; REFERENCES SECOND DEFAULT FILE NAME
	JRST F6
IFN TS,[CAIN CH,";
	JRST SYSN
	CAIN CH,":
	JRST DEVN
]	CAIN CH,^Q
	PUSHJ P,LRCH
	SUBI CH,40
	TLNE B,770000
	IDPB CH,B
	JRST F2

IFN TS,[SYSN:	.SUSET [.SSNAM,,C]
	JRST F1
DEVN:	TRZ FF,FINDR
	HLRM C,UTF
	JRST F1
]
F6:	SKIPA C,UTF2
SFN:	JUMPL B,SFN1
	TRZN FF,NOTF
	MOVE A,AA
	MOVE AA,C
SFN1:	CAIE CH,ALTMOD
	JRST F1
FX:	TRZE FF,ALTF
IFN TS,	JRST FX1
IFE TS,	POPJ P,
	MOVEM A,UTF1
	MOVEM AA,UTF2
	POPJ P,
IFN TS,[FX1:	TLZN FF,NEGF
	POPJ P,
	JUMPL B,CPOPJ
	TRNE FF,FINDR
	HLRM AA,UTF
	POPJ P,
]
IFN TS,[TAPKIL:	HRRZ A,UTF
	CAMN A,ERDEV
	PUSHJ P,UICLS
	CAMN A,EIDEV
	PUSHJ P,UCLOSE
	LDB B,[400,,UTF]
	TLZ FF,CTLUF
	.UDISMN B,
	TYPR2 (SIXBIT \UNF\)
	MOVE A,ODDEV
	MOVEM A,UTF	;RESTORE OLD DEFAULT DEVICE NAME
	POPJ P,]

IFE TS,[
DELE:	PUSHJ P,FRD
	PUSHJ P,UDELE"
	JRST CNTRU1
]
IFN TS,[
DELE:	PUSHJ P,FFRRDD
DELE1:	SETZM UTF3
DELRNM:	HRRZS UTF	;CLEARS LEFT HALF SO NOT TO GET SCREWED BY LINKS
	.FDELE UTF
	JRST DELE2
	POPJ P,

	JUMP 0,UTF	;FAKE OUT AC FIELD REFERENCE
DELE2:	JSP TT,OPNER
]

IFE TS,[
.FILE:	PUSHJ P,FRD
	PUSHJ P,FILE"
TPFUL:	TYPR1 [ASCIZ /TAPE FULL/]
CNTRU1:	TLO FF,CTLUF
	POPJ P,


CLSTP:	TRNN FF,ARG2
	JRST UCLSTP"
	PUSH P,UFPNTR+2
	PUSH P,UFPNTR
	MOVE A,C
	PUSHJ P,.OPN1
	POP P,UFPNTR
	PUSHJ P,UCLSTP
	POP P,A
	PUSHJ P,FILEST
	JRST UTERR
	JRST CNTRU1

MTNAM:	MOVE OUT,[220600+IN,,177]
	MOVE IN,UFPNTR
	HLLZS 177(IN)

MTN1:	PUSHJ P,LRCH
	SUBI CH,40
	JUMPE CH,MTN1
	CAIE CH,175-40
	TLNN OUT,770000
	JRST CNTRU1
	IDPB CH,OUT
	JRST MTN1
]


IFN TS,[
CNTRLV:	PUSHJ P,CNTRU0
	JRST GO1
EUHACK:	PUSHJ P,FFRDEV
CNTRLU:	TRO FF,VIEWF
	PUSHJ P,GDEV
CNTRU0:	MOVEI OUT,DISAD
	PUSHJ P,DISINI
	JRST LSTF2
LISTF:	SKIPE RGETTY
	PUSHJ P,DISINI
	SKIPA OUT,[TYO]
LISTFM:	MOVEI OUT,TYOM
LSTF1:	TRNE CH,20
	PUSHJ P,FFRDEV
LSTF2:	SETOM IN	;FAKE OUT DISBAR TEST
	TLZ FF,CTLUF
	HRRM OUT,LISTF5
	PUSHJ P,AOFDIR
LISTF2:	PUSHJ P,GFDBLK
	CAIN OUT,TYOM	;IF DUMPING CRUD INTO BUFFER,
	JRST LSTF3	;THEN DO IT FAST
LISTF6:	ILDB CH,FDRP
	CAIE CH,EOFCHR
	CAIN CH,14
	JRST LISTF%
	PUSHJ P,@LISTF5
	JRST LISTF6

LSTF3:	MOVEI CH,-1(CH)	;BACK UP TO LAST WORD .IOT'ED INTO
	CAIE CH,FDRBUF	;IF NOT POINTING TO BEGINNING OF BUFFER,
	SUBI CH,1	;THEN BACK UP A WORD FOR "FORM FEED AT END OF LAST WORD" SCREW
	MOVEI C,-FDRBUF(CH)	;GET INDEX INTO BUFFER IN C
	IMULI C,5	;CONVERT C TO NUMBER OF CHARACTERS UP TO THIS WORD
	HRLI CH,440700	;CONVERT TO BYTE POINTER TO WORD
LSTF4:	ILDB A,CH	;GET CHARACTER FROM LAST WORD (DOES THIS LOOK BACKWARDS TO YOU?)
	CAIE A,14	;IF FORM FEED,
	CAIN A,EOFCHR	;OR IF EOF CHARACTER,
	JRST .+2	;THEN FOUND END
	AOJA C,LSTF4	;HAVEN'T FOUND END YET, LOOP BACK
	JUMPE C,CPOPJ	;IF NO CHARACTERS THEN THAT'S ALL FOR THIS ROUTINE
	PUSHJ P,NROOM	;GET ROOM IN BUFFER
	MOVE F,PT	;GET TECO'S "POINTER"
	ADDM C,PT	;RELOCATE
	PUSHJ P,GETIBP	;GET BYTE POINTER FOR PUTTING STUFF IN BUFFER
	ILDB CH,FDRP	;NOW GET CHARACTER TO COPY
	IDPB CH,F	;COPY IT
	SOJG C,.-2	;DO IT THE APPROPRIATE NUMBER OF TIMES
	IBP FDRP	;INCREMENT FDRP TO MAKE IT APPEAR THAT THE ACTUAL EOF CHARACTER WAS ENCOUNTERED

		;PROCESS THE NEXT BLOCK OF THE FILE DIRECTORY BEING LISTED

LISTF%:	HRRZ CH,FDRP
	CAIN CH,FDRBFE
	JRST LISTF2	;MORE TO COME
	.CLOSE FDRC,
	HRRZ A,LISTF5
	SKIPE RGETTY
	CAIE A,TYO
	CAIN A,DISAD
	JRST DISCLG
	POPJ P,
]

IFE TS,[
LISTFM:	SKIPA OUT,[TYOM]
LISTF:	MOVEI OUT,TYO
	CLEARM LISFLG
	HRRM OUT,LISTF5
CNTRU5:	PUSHJ P,PTLAB
LSTF1A:	SKIPN LISFLG
	JRST LISTF9
	MOVE C,[SIXBIT \TAPE\]
	MOVEI IN,5
	PUSHJ P,TYPR+1
	MOVE B,UFPNTR+2
	PUSHJ P,DPT
	PUSHJ P,LISTF4
LISTF9:	MOVEI B,0
	MOVE A,UFPNTR
	HRLI A,-23.
	SKIPN (A)
	SKIPE 1(A)
	AOJA A,.+2
	AOJA B,.-1
	AOBJN A,.-4
	JUMPN B,.+4
	MOVSI C,(SIXBIT \NO\)
	MOVEI IN,3
	PUSHJ P,TYPR+1
	MOVE OUT,[(600)[SIXBIT /FREE FILES/]-1]
	PUSHJ P,LISTFA
	JUMPE B,.+3
	PUSHJ P,DPT
	PUSHJ P,LISTF4
	MOVE OUT,[(600) [SIXBIT /FREE BLOCKS/]-1]
	PUSHJ P,LISTFA
	HRLZI TT1,-30
	MOVEI A,0
	MOVE D,UFPNTR
	SUBI D,2
	JRST LISTF1



	ADDI D,2
	SKIPN C,(D)
LISTF3:	AOBJN TT1,.-2
	TLNN TT1,-1
	POPJ P,
	HRRZ B,TT1
	SKIPN LISFLG
	JRST .+4
	PUSHJ P,DPT
	MOVEI CH,40
	PUSHJ P,@LISTF5
	ADD TT1,UFPNTR
	MOVE B,55(TT1)
	LDB CH,[(100)104(TT1)]
	DPB B,[(10100)CH]
	SUB TT1,UFPNTR
	ADDI CH,40
	PUSHJ P,@LISTF5
	PUSHJ P,LISTF4
	TLNN C,770000
	PUSHJ P,LISTF4
	TLNE C,770000
	PUSHJ P,TYPR-1
	MOVE C,1(D)
	PUSHJ P,TYPR-1
	HRRZ A,TT1
LISTF1:	SETZB B,E
	MOVE OUT,UFPNTR+1
	ILDB CH,OUT
	CAIN CH,(A)
	AOS E
	CAIE CH,37
	JRST .-4
	SKIPE C,A
	PUSHJ P,LOOK
	SKIPA B,E
	JRST LISTF1+1
	PUSHJ P,DPT
	MOVNS LISFLG
	SKIPGE LISFLG
	PUSHJ P,LISTF4
	SKIPGE LISFLG
	PUSHJ P,LISTF4
	SKIPL LISFLG
	PUSHJ P,CRR1
	JRST LISTF3
]	PUSH P,TYPR2A
TYPR:	MOVEI IN,6
TYPR3:	MOVE OUT,[(600)C-1]
	ILDB CH,OUT
	ADDI CH,40
	XCT LISTF5
	SOJG IN,.-3
TYPR2A:	POPJ P,LISTF4
LISTFA:	MOVEI IN,12.
	PUSHJ P,TYPR+2
SLTAB:
LISTF4:	MOVEI CH,11
	JRST @LISTF5

TYPA:	MOVE OUT,[(10700)C-1]
TYPA1:	ILDB CH,OUT
	SKIPN CH
	MOVEI CH,40
	PUSHJ P,@LISTF5
	TLNE OUT,760000
	JRST TYPA1
	POPJ P,

IFE TS,[
RENAM:	PUSH P,C
	PUSHJ P,FRD
	PUSHJ P,.LOOK"
	TYPR1 [ASCIZ /NOT FOUND
/]
	PUSH P,A+2	;FILE NO
	PUSH P,A+3	;PNTR TO FIRST WD OF NAME
	PUSHJ P,FRD
	PUSHJ P,.LOOK
	JRST RNAM1
	CAME A+3,(P)
	TYPR1 [ASCIZ /ALREADY EXISTS
/]
RNAM1:	POP P,TT
	MOVEM A,(TT)
	MOVEM A+1,1(TT)
	POP P,A
	POP P,C
	TRNN FF,ARG2
	POPJ P,
	ADD A,UFPNTR"
	DPB C,[(100)104(A)]
	LSH C,-1
	DPB C,[(100)55(A)]
CTYOM:	POPJ P,TYOM

WINIT:	TLO FF,PNSTOP+UWRITE
	PUSHJ P,OPNWR"
	TYPR1 [ASCIZ \NO FREE FILES
\]
	JRST CNTRU1
]

IFN TS,[
RENAM:	PUSHJ P,FFRRDD
	PUSHJ P,FRD
	MOVEM A,UTF3
	MOVEM AA,UTF4
	PUSHJ P,DELRNM
	MOVE A,[UTF3,,UTF1]
	BLT A,UTF2	;SET DEFAULT NAMES TO NEW ONES
	POPJ P,

ALINK:	MOVE A,[200000,,(SIXBIT /DSK/)]	;ADD A LINK, EQ COMMAND
	MOVEM A,UTF	;ALWAYS CLOBBERS DEFAULT DEVICE TO DSK EVEN OVER NUMERIC ARGUMENTS
	PUSHJ P,FFRRDD	;GET LINK NAME
		;FOLLOWING CODING PROBABLY WANTS TO BE SPEEDED UP SOME DAY
	.SUSET [.RSNAM,,UTF3]	;SAVE SYSTEM NAME FOR LATER RETRIEVAL
	PUSHJ P,FRD	;GET NAME OF FILE TO LINK TO
	EXCH A,UTF3	;SET 1ST FILENAME OF LINKED AND RETRIEVE SNAM
	MOVEM AA,UTF4	;SET 2ND FILENAME OF LINKED
	.SUSET [.RSNAM,,UTF5]	;SET SYSTEM NAME OF LINKED
	.SUSET [.SSNAM,,A]	;SET SYSTEM NAME OF LINK
	TSOPEN FDRC,UTF	;DOESN'T CLOBBER UTYIC OR UTYOC
	POPJ P,


SIXNTY:	PUSH P,C
	MOVE C,[440600,,(P)]
SIXNT1:	ILDB CH,C
	JUMPE CH,POPAJ
	ADDI CH,40
	PUSHJ P,@LISTF5
	JRST SIXNT1
]

;UUO HANDLER

UUODTB:	ETYPR4	;IITYPR
	SETZ ETYP3	;ITYPR
	SETZ ETYP2A	;TYPR2
	ETYP1A	;TYPR1
	UATYPE	;ATYPE

BADUUO:	MOVEI B,[ASCIZ /
BAD UUO
/]
	PUSHJ P,ASCIT2
	JRST ETYP1

ASCITP:	HRRZ B,40
ASCIT2:	HRLI B,440700
ETYP1B:	ILDB CH,B
	SKIPE CH
	CAIN CH,14
	POPJ P,
	PUSHJ P,TYOA
	JRST ETYP1B

ETYP1A:	MOVE P,[-LPDL,,PDL-1]
	PUSHJ P,ASCITP
	JRST ETYP1

ETYP2:	LDB CH,[140600,,40]
	PUSHJ P,6TYO
	LDB CH,[60600,,40]
	PUSHJ P,6TYO
	LDB CH,[600,,40]
	JRST 6TYO

ETYPR4:
IFN TS,[
	LDB B,[270400,,40]
	JUMPN B,ETYP4C
	PUSHJ P,DIS1
ETYP4C:]
	HRRZ B,40
	HRLI B,440600
ETYP4A:	ILDB CH,B
	JUMPE CH,ETYP4B
	PUSHJ P,6TYO
	TLNN B,770000
	JRST ETYP4B
	JRST ETYP4A

UATYPE:	PUSHJ P,ASCITP
	JRST ETYP4B

IFN TS,[
OPNER1:	MOVEI TT,FHAK
OPNER:	HRLZ D,@-2(TT)	;DEVICE NAME
	IITYPR D
	IITYPR 1,[SIXBIT /:/]
	.SUSET [.RSNAM,,D]
	IITYPR 1,D
	IITYPR 1,[SIXBIT /;/]
	TLZ F,CTLUF
	PUSHJ P,ERRZAP
	TYPR1 ERRBUF

ERRZAP:	PUSHJ P,CRR
	LDB A,[270400,,-2(TT)]
	MOVEM A,ERRF2
	.OPEN ERRC,ERRF
	TYPR1 [ASCIZ /
ERROR DEVICE NOT AVAILABLE
/]
	MOVE A,[-ERBUFL,,ERRBUF]
	.IOT ERRC,A
	.CLOSE ERRC,
	POPJ P,
]
ETYP1:IFE TS,PUSHJ P,IOWAIT
	JRST IFE TS,[GOZ]IFN TS,[GOX]

ETYP2A:	MOVE P,[-LPDL,,PDL-1]
	PUSHJ P,ETYP2
	JRST ERRP1

ETYP3:	PUSHJ P,ETYP2
	PUSHJ P,CRR
ETYP4B:	MOVE B,ETYPB
	MOVE CH,ETYPCH
	JRST 2,@UUOH


IFE TS,[CNTRLV:	PUSHJ P,.OPN2
	PUSH P,CPOPJ
	SETOB IN,LISFLG	;MAKE SURE DISAD TEST FOR DISBAR FAILS
	MOVEI A,40
	HRRM A,DPT5
	PUSH P,CHSIZ
	MOVEI A,20
	MOVEM A,CHSIZ
	MOVEI A,DISAD
	HRRM A,LISTF5
	PUSHJ P,DISINI
	MOVE OUT,UFPNTR"+1
CNTRU4:	MOVEI C,25.
	MOVEI T,0
CNTRU2:	ILDB B,OUT
	CAIN B,37
	JRST CNTRU3
	JUMPE B,CNTRU6
	JUMPE T,CNTR6B
	PUSHJ P,SPSP
	SOJG T,.-1
CNTR6B:	PUSHJ P,SLDPT
CNTR6A:	SOJG C,CNTRU2
	PUSHJ P,CRR1
	JRST CNTRU4

CNTRU6:	ADDI T,3
	JRST CNTR6A

CNTRU3:	PUSHJ P,CNTRU5
CTLUX:	PUSHJ P,DISCLG
	POP P,CHSIZ
	POPJ P,
]
LIGHTS:	TRNE FF,ARG
	JRST LIGT1
	DATAI 760,A
	JRST VALRET

LIGT1:	DATAO 760,B
	JRST RET

LSTCRF==SLASHF	;CR READ FROM FILE

IFN TS,[		;@ COMMAND
SYMLPT:	LDB A,[260100,,FF]	;LPTF
	TLZ FF,LPTF
	DPB A,[400100,,LPTSAV]
IFN HLSTSW,[MOVEI CH,OSECT-1
	MOVEM CH,OSECTP
]	AOSA SYMLF
]
SYMLST:	SETZM SYMLF	;CONTROL O
	TRZ FF,LSTCRF
	TRNE FF,ARG
	JRST BEAST	;NUMERIC ARG TYPED, IF <OR=0 THEN BIGPRINT & RETURN
	SETOM SLN	;OTHERWISE SET SLN TO ARG AND RETURN TO SYML1
SYML1:	MOVE CH,Z
	IDIVI CH,5
	ADDI CH,CBUF+10
	IDIVI CH,3	;YES.  WELL, LIE DOWN ON THE COUCH
	IMULI CH,3	;THERE AND WE'LL TALK ABOUT IT.
	MOVEM CH,STPNR
	MOVEM CH,STB
	CLEARM PASS
	MOVEI CH,60
	HRRM CH,DPT5	;PRINT LEADING ZEROS
	PUSHJ P,RRED
NPASS:	MOVEM A,STM	;NO EFFECT ON PASS 1
IFN HLSTSW,SETZM PAGELF
	MOVSI T,1
MNLP2:	MOVE B,[440700,,LBF]
	MOVEM B,LBFIP
	SETOM SLCHS
	CLEARM LSYL
MNLP5:	TLZ FF,DEFF
MNLP:	PUSHJ P,GETSYL
	SKIPGE IFE TS,[BRKFLG] IFN TS,[STOPF]
	JRST SLQ
MNLP3:	TRNN FF,ALTF
	CAIN CH,";
	TROA FF,ALTF
	TRNN FF,LET
	JRST MNLP1
	CAIE CH,"=
	CAIN CH,":
	JRST DEFSM
	TLNN FF,DEFF
	TLNE FF,VARF
	JRST DEFSM
	TLZE FF,GLOF
	JRST DEFGLO
	CAMN SYM,[SIXBIT \DEFINE\]
	TLOA FF,DEFF
	JRST MNLP4

MNLP1:	CAIN CH,14
	JRST SLFF
	CAIE CH,13
	CAIN CH,12
	JRST SLLF
	JRST MNLP
MNLP4:	TRNN FF,ALTF
	SKIPN PASS
	JRST MNLP1

LOGES:	MOVEI D,0
	MOVE A,STB
	MOVE B,STPNR
	SKIPL SYM
	SKIPA B,STM	;LOOK IN LOWER HALF
	MOVE A,STM	;LOOK IN UPPER HALF
LOGES1:	MOVE C,A
	ADD C,B
	IDIVI C,6
	IMULI C,3	;YES, REALLY
	CAMN SYM,(C)
	JRST LOGES2	;FOUND
	CAIL A,-3(B)
	JRST MNLP1	;NOT FOUND
	CAML SYM,(C)
	SKIPA A,C	;LOOK HIGHER
	MOVE B,C	;LOOK LOWER
	JRST LOGES1

LOGES2:	MOVMS D,1(C)
	CAIE CH,")
	MOVEM D,LSYL
	JRST MNLP1

SLRCH:	PUSHJ P,UTYI
	TRZE FF,FINF
	JRST NP1
	CAIN CH,15	;IF CR,
	TROA FF,LSTCRF	;THEN SET FLAG AND RETURN
	SKIPN PASS
	POPJ P,
	TRZE FF,LSTCRF	;IF LAST CHAR WAS CR,
	PUSHJ P,SLRCH2	;THEN MAYBE TYPE ^M
SLRCH3:	EXCH CH,LBFIP
	CAMN CH,[10700,,LBF+LTABS]
	JRST SLRCH1
	EXCH CH,LBFIP
	IDPB CH,LBFIP
	AOS SLCHS
	POPJ P,

SLRCH2:	CAIL CH,11	;LAST CHAR INPUT WAS CR, NEW ONE IN CH
	CAILE CH,15	;IF LESS THAN LINE FEED OR GREATER THAN CR
	JRST .+2	;THEN PREFIX WITH ^M
	POPJ P,
	PUSH P,CH
	MOVEI CH,136
	PUSHJ P,SLRCH3
	MOVEI CH,"M
	PUSHJ P,SLRCH3
	POP P,CH
	POPJ P,

SLRCH1:	EXCH CH,LBFIP
	POPJ P,

SLFF:	SKIPN SLCHS
	TRZA FF,ARG\ALTF
	PUSHJ P,SLLF4
IFN HLSTSW,[
	SKIPE RELAXF
	JRST SLFFA
	CLEARM RLNPOS
	CLEARM RSTLN
SLFFA:
]
IFE HLSTSW*TS,SKIPE PASS
IFN HLSTSW,[IFN TS,[SKIPN RELAXF
	SKIPN PASS
	SKIPA
]]	PUSHJ P,FORMF
	HLLOS T
IFN HLSTSW,SETZM PAGELF
	AOJA T,MNLP2

SLLF:	PUSHJ P,SLLF4
	TRO FF,ARG
	AOJA T,MNLP2

GETSYL:	MOVE B,[440600,,SYM]
	MOVEI SYM,0
	TDZ FF,[GLOF+VARF,,LET]
GETS6:	PUSHJ P,SLRCH
GETS1:	CAIE CH,"@
	CAIN CH,"!
	JRST GETS6
	CAIN CH,""
	JRST GETSGL
	CAIN CH,"'
	JRST GETSVR
	CAIG CH,"Z
	CAIGE CH,"A
	JRST GETS3
GETS4:	TRO FF,LET
GETS2:	TRC CH,40
	TLNE B,770000
	IDPB CH,B
	JRST GETS6

GETSGL:	TLOA FF,GLOF
GETSVR:	TLO FF,VARF
	TRNE FF,LET
	JRST GETS6
	PUSHJ P,SLRCH
	JRST GETSYL

NP1:	TRZ FF,LSTCRF
	SUB P,[2,,2]
	SKIPE PASS
	JRST SYME
PASS2:IFN HLSTSW,[
	SETZM RLNPOS
	SETZM RSTLN
	SETZM RELAXF
	SETOM SECCR
]
	SETOM PASS
	PUSHJ P,RRED
IFN HLSTSW,IFN TS,SETZM UROSBF
	TRZ FF,ARG
IFN TS,[	SKIPN SYMLF
	JRST LPTW4	; COMMAND
LPTW2:	.OPEN UTYOC,LPTOF
	JRST LPTW1
LPTW3:	JSP T,FHAK	;INITIALIZE UTAPE BUFFER POINTERS
	JFCL
]
LPTW4:	PUSHJ P,.FNPNT
	CLEARM SLCHS
	MOVE A,STB
	MOVE B,STPNR
	PUSHJ P,SORT
	MOVE A,STB
PASS21:	CAMGE A,STPNR
	SKIPGE (A)
	JRST NPASS
	ADDI A,3
	JRST PASS21

GETS3:	CAIG CH,"9
	CAIGE CH,"0
	CAIN CH,".
	JRST GETS2
	CAIE CH,"%
	CAIN CH,"$
	JRST GETS4
	CAIE CH,";
	POPJ P,
	TRO FF,ALTF
IFE HLSTSW,	POPJ P,
IFN HLSTSW,[IFN TS,[
	HRRZ CH,OSECTP
	SKIPE PASS
	CAIN CH,OSECT-1
	JRST GETS3A
	PUSHJ P,SLRCH
	CAIE CH,";
	JRST GETS1
	SKIPE CH,RELAXF
	TRO FF,ARG	;IF NOT PRINTING SET ARG SO NEXT LINE WILL GET CR IF IT GETS PRINTED
	MOVEM CH,ORELAXF	;SAVE OLD PRINTING STATE
	AOS CH,SECCR
	ASH CH,1
	SETZM RELAXF
	MOVEM T,SECT(CH)+2	;STORE PG + LINE #
	TRNE FF,COLONF
	JRST GETS6	;REALLY WANT TO LIST ALL
	MOVE CH,OSECT(CH)+2
	TRNE CH,1	;SKIP ON NOT CHANGED
	JRST GETS3B	;GOING TO PRINT
	SETOM RELAXF	;GOING TO STOP PRINTING
	SKIPE ORELAXF
	JRST GETS6	;WAS ALREADY STOPPED
	HRRZ CH,T
	SUB CH,RSTLN	;LINE NUM AT WHEN STARTED (IF STARTED ON THIS PG)
	ADDM CH,RLNPOS
	JRST GETS6

GETS3B:	SKIPE ORELAXF	;SKIP ON WAS ALREADY PRINTING
	HRRZM T,RSTLN	;SAVE STARTED LN #
	JRST GETS6

GETS3A:	MOVEI CH,";
	POPJ P,
]]
IFN TS,[
LPTW1:	.OPEN UTYOC,[SIXBIT \  #TPL\]
	JRST LPTW1A
	JRST LPTW3
LPTW1A:	SKIPGE STOPF
	JRST GOX
	MOVEI A,30.
	.SLEEP A,
	JRST LPTW2
]
SLLF4:	TRZ FF,ALTF	;PRINT BUFFER
IFN HLSTSW,IFN TS,SKIPG RELAXF
	SKIPN PASS
	POPJ P,
IFN HLSTSW,[
	SKIPGE RELAXF
	AOS RLNPOS	;PRINTING THINS LINE EVEN THO RELAXF .NE. 0
	MOVMS RELAXF
]
	TRZE FF,ARG
	PUSHJ P,CRR1
	MOVEI B,1(T)	;LINE #
	REPEAT 3,PUSHJ P,SPSP
	PUSHJ P,SLDPT
SLLF1C:	HLLZS SYLCPS
	PUSHJ P,SLTAB
	MOVE D,LSYL
	JUMPE D,SLLF1
	HLRZ B,D
	PUSHJ P,SLDPT
	PUSHJ P,SPSP
	MOVEI B,1(D)
	PUSHJ P,SLDPT

SLLF1:	PUSHJ P,SLTAB
	SOSGE SLCHS
	JRST SLLF2
	MOVE B,[440700,,LBF]
	MOVEM B,LBFIP
SLLF1B:	ILDB CH,LBFIP
	PUSHJ P,PPA
	AOS AA,SYLCPS
	CAIE CH,11
	JRST SLLF1A
	ADDI AA,7
	TRZ AA,7
	HRRM AA,SYLCPS
SLLF1A:	SOSL SLCHS
	JRST SLLF1B
SLLF2:	HRRZ B,T	;LINE #
IFN HLSTSW,[
	JUMPE B,SLLF2A	;ALWAYS PRINT PG IF AT TOP OF LOSERS PAGE
	ADD B,RLNPOS	;FOR  EXTENDED PAGES, USE REAL LPT POS
	SUB B,RSTLN
SLLF2A:
]	IDIVI B,60.
IFN HLSTSW,[TRNE T,-1
	SKIPE PAGELF
]	JUMPN E,CPOPJ
	PUSH P,B
	MOVEI AA,69.
	XCT SYLCPS
	PUSHJ P,SPSP
	SOJG AA,.-1
IFN HLSTSW,	SETOM PAGELF
	MOVE C,[SIXBIT \ PAGE \]
	PUSHJ P,TYPR
	HLRZ B,T	;PAGE #
	PUSHJ P,DPT
	POP P,B
	JUMPE B,CPOPJ
	MOVEI CH,".
	PUSHJ P,PPA
	JRST DPT

DEFSM:	SKIPE PASS
	JRST MNLP
	PUSHJ P,ES
	JUMPN D,MNLP5	;JUMP IF ALREADY DEFINED
	MOVNM T,1(F)
	MOVEI D,(SIXBIT \V\)
	TLNE FF,DEFF
	MOVEI D,(SIXBIT \M\)
	TLZE FF,VARF+DEFF
	MOVEM D,2(F)
	TLZN FF,GLOF
	JRST MNLP
DEFGLO:	SKIPE PASS
	JRST MNLP
	PUSHJ P,ES
	MOVEI D,(SIXBIT \G\)
	MOVEM D,2(F)
	JRST MNLP

ES:	PUSH P,T
	PUSH P,TT
	MOVE TT,[AES2,,D]
	BLT TT,TT
	HRR D,STB
	MOVEM SYM,@STPNR
	JRST D

AES2:	CAMN SYM,.	;D
	JRST AES1	;F
	ADDI D,3	;T
	JRST D	;TT

AES1:	POP P,TT
	POP P,T
	HRRZ F,D
	CAME F,STPNR
	JRST AES1A
	CLEARB D,1(F)
	CLEARM 2(F)
	ADDI F,3
	EXCH F,STPNR
	POPJ P,
AES1A:	MOVMS D,1(F)
	POPJ P,

SYME:	HRRZ A,T
IFN HLSTSW,[
	SUB A,RSTLN
	ADD A,RLNPOS
]
	JUMPE A,SYME1
	PUSHJ P,FORMF	;START AT TOP OF PAGE IF NOT THERE ALREADY
SYME1:	TRZ FF,COLONF	;LIST SYMBOLS
	MOVE A,STB
	MOVE B,STPNR
	MOVEI F,60.
	CAMN A,B
	JRST SLEND
SLPP:	MOVE B,STPNR
	SUBI B,-3(A)
	MOVE AA,[747474747474]
	CAIL B,3*6*60.+3
	JRST SLPP2
	IDIVI B,3*6
	MOVEI AA,1(B)
	IMULI AA,10101
	IMULI B,10101
	HRL AA,AA
	HRL B,B
	ASH E,1
	MOVNI E,-6*6(E)
	ROTC AA,6(E)
SLPP2:	MOVEI F,60.
	MOVEM A,SLCHS
SLPL:	MOVE T,[440600,,AA]
	MOVEI D,6
SLPL1:	SKIPL 2(A)
	CAML A,STPNR
	JRST SLEND
	MOVE C,(A)
	PUSHJ P,TYPR
	PUSHJ P,SPSP
	HRLZ C,2(A)
	MOVEI IN,2
	PUSHJ P,TYPR+1
	HRROS 2(A)
	SKIPN 1(A)
	JRST SLPL2
	SKIPG 1(A)
	TRO FF,SYLF
	MOVMS C,1(A)
	HLRZ B,C
	PUSHJ P,SLDPT
	MOVEI CH,40
	TRZE FF,SYLF
	MOVEI CH,"*
	PUSHJ P,PPA
	MOVEI B,1(C)
	PUSHJ P,SLDPT
SLPL3:	REPEAT 3,PUSHJ P,SPSP
	ILDB B,T
	IMULI B,3
	ADD A,B
	SOJG D,SLPL1
	MOVE A,SLCHS
	ADDI A,3
	MOVEM A,SLCHS
	PUSHJ P,CRR1
	SOJG F,SLPL
	ADDI A,3*5*60.
	JRST SLPP

SLPL2:	MOVE C,[SIXBIT \ UNDEF\]
	PUSHJ P,TYPR
	PUSHJ P,SPSP
	JRST SLPL3	;DONE LISTING SYMBOLS

SLEND:IFN HLSTSW,[MOVE A,OSECTP
	SUBI A,OSECT-1
	CAIG A,2
	JRST SLEND1	;ONLY ONE SECTION (IE NOT REALLY ANY)
	PUSHJ P,CRR1
	MOVSI CH,1
	MOVEM CH,SECT
	CAIN F,60.
	JRST SLES1	;ALREADY AT TOP OF PAGE
	MOVEI B,-2(A)
	IDIVI B,12.
	MOVEI E,4(B)
	CAMG E,F
	JRST SLES2	;WILL FIT ON CURRENT PAGE
	PUSHJ P,FORMF	;PUT ON SEPARATE PAGE
SLES1:	MOVEI AA,48.
	PUSHJ P,SPSP
	SOJG AA,.-1
	MOVE C,[SIXBIT \    SE\]
	PUSHJ P,TYPR
	MOVE C,[SIXBIT \CTIONS\]
	PUSHJ P,TYPR
	PUSHJ P,CRR1
	MOVNI F,2
SLES3:	PUSHJ P,CRR1
	MOVEI D,6
SLES4:	ADDI F,2
	MOVE C,OSECT(F)
	PUSHJ P,TYPA
	REPEAT 2,PUSHJ P,SPSP
	HLRZ B,SECT(F)
	PUSHJ P,SLDPT
	PUSHJ P,SPSP
	HRRZ B,SECT(F)
	ADDI B,1
	PUSHJ P,SLDPT
	SOJLE D,SLES3
	MOVEI AA,6
	PUSHJ P,SPSP
	SOJG AA,.-1
	CAILE A,2(F)
	JRST SLES4
]
SLQ:	PUSHJ P,FORMF
	IFN TS,[SKIPE SYMLF
	JRST LPTSVA	;@
]	JRST RET	;CTRL O

SLEND1:	PUSHJ P,FORMF
SLEND2:	SKIPGE STOPF
	JRST SLQ
	SOSG SLN
	JRST SLEND4
	MOVEI A,STB
SLEND3:	CAML A,STPNR
	JRST PASS2
	HRRZS 2(A)
	ADDI A,3
	JRST SLEND3
SLEND4:IFN HLSTSW,[MOVEI A,OSECT-1
	MOVEM A,OSECTP
	MOVEI A,SECT-1
	MOVEM A,SECTP
]	SKIPN SYMLF
	JRST RET
IFN TS,[
LPTSVA:	XCT LPTSAV
	PUSHJ P,.FILEX
]
	JRST RET
IFN HLSTSW,[
SLES2:	PUSHJ P,CRR1
	JRST SLES1
]
SORT:	MOVSI C,400000
SORT1:	HRLM B,(P)
	CAIL A,-3(B)
	JRST SORT7
	PUSH P,A
SORT3:	TDNN C,(A)
	JRST SORT4
	SUBI B,3
	TDNE C,(B)
	JRST SORT2
	EXCH C,(A)
	EXCH C,(B)
	EXCH C,(A)
	EXCH C,1(A)
	EXCH C,1(B)
	EXCH C,1(A)
	EXCH C,2(A)
	EXCH C,2(B)
	EXCH C,2(A)
SORT4:	ADDI A,3
SORT2:	CAME A,B
	JRST SORT3
	ROT C,-1
	POP P,A
	JUMPL C,SORT6
	PUSHJ P,SORT1
	HLRZ B,(P)
	PUSHJ P,SORT1
SORT6:	ROT C,1
SORT7:	HLRZ A,(P)
	POPJ P,

.FNPNT:	MOVEI A,PPA
	HRRM A,LISTF5
	PUSHJ P,.+1
IFE TS,[MOVE A,LFRED1
	PUSHJ P,.FNPT2
	MOVE A,LFRED2
]
IFN TS,[MOVE A,RUTF1
	PUSHJ P,.FNPT2
	MOVE A,RUTF2
]
	PUSHJ P,.FNPT2
FORMF:	MOVEI CH,15
	PUSHJ P,@LISTF5
	MOVEI CH,14
	JRST @LISTF5

.FNPT2:	PUSH P,A
	TRNN FF,ARG
	PUSHJ P,PTLAB
.FN3:	MOVE A,(P)
	MOVEI B,4
	PUSHJ P,CRR1
	SOJN B,.-1
	MOVEI TT1,7
.FN239:	MOVEI D,3
.FN249:	SETZM AA
	ROTC A,6
	MOVEI T,3
.FN259:	XCT LDBT1-1(T)
	IMULI AA,10101
	SETZM C
	TRNE TT,2
	HRLM AA,C
	CAIG T,1
	JRST .FN269
	TRNE TT,1
	HRRM AA,C
.FN269:	PUSHJ P,TYPR
	IDIVI AA,10101
	SOJN T,.FN259
	JUMPE A,.FN279
	MOVEI CH,40
	REPEAT 3,PUSHJ P,PPA
	JRST .FN249
.FN279:	MOVE A,(P)
	PUSHJ P,CRR1
	SOJN D,.FN249
	SOJN TT1,.FN239
POPAJ:	POP P,A
	POPJ P,
PTLAB:	PUSHJ P,CRR1
IFE TS,[MOVE C,UFPNTR
	MOVE C,177(C)
	CAMN C,[-1]
	JRST CRR1
	LSH C,18.
	PUSHJ P,TYPR
	JRST CRR1
]
IFN TS,[PUSHJ P,AOFDIR
	PUSHJ P,GFDBLK
PTLAB2:	ILDB CH,FDRP
	CAIE CH,15
	CAIN CH,12
	JRST .+3
	PUSHJ P,@LISTF5
	JRST PTLAB2
	.CLOSE FDRC,
	PUSHJ P,LISTF4
	.SUSET [.RUNAM,,C]
	PUSHJ P,TYPR
	PUSHJ P,LISTF4
	PUSHJ P,GDATIM	;GET DATE AND TIME
	POPJ P,		;SYSTEM DOESN'T HAVE THEM, QUIT HERE
	PUSHJ P,GLPDTM	;WIN, ALSO GET CRUD FOR PHASE OF MOON
	MOVE C,TIME	;GET TIME FOR PRINTING OUT
	DPB C,[301400,,CTIME+1]
	LSH C,-14
	DPB C,[61400,,CTIME]
	LSH C,-14
	DPB C,[301400,,CTIME]
	MOVE C,CTIME
	PUSHJ P,TYPR
	MOVE C,CTIME+1
	PUSHJ P,SIXNTY
	PUSHJ P,LISTF4
	PUSHJ P,SYMDAT	;TYPE OUT DATE
	PUSHJ P,LISTF4	;TYPE ANOTHER TAB
	JRST POM	;END WITH PHASE OF MOON

SPSP:	MOVEI CH,40
	JRST @LISTF5

IFN TS,[
AOFDIR:	HRRZ C,UTF
	HRLI C,2
	MOVEM C,FDF
	.OPEN FDRC,FDF
	JSP TT,OPNER
	POPJ P,

GFDBLK:	MOVE CH,[440700,,FDRBUF]
	MOVEM CH,FDRP
	HRLI CH,-FDRBFL
	.IOT FDRC,CH
	POPJ P,
]

BEAST:	MOVEM B,SLN
	JUMPG B,SYML1
	MOVEI CH,PPA
	HRRM CH,LISTF5
	PUSHJ P,FRD
	PUSH P,AA
	PUSHJ P,.FNPT2
	POP P,A
	PUSHJ P,.FNPT2
	PUSHJ P,FORMF
	JRST RET

LDBT1:	REPEAT 3,LDB TT,LDBT2-1+.RPCNT*7(TT1)

LDBT2:	REPEAT 21.,[%T1==.RPCNT/7
		%T2==.RPCNT-%T1*7
		CH5.7T(AA+200+<2*%T1+5*%T2>_12.)
		]

CH5.7T:	0	;SP
DEFINE .. A,B,C,D,E,F,G,H
	IFSN H,,[PRINTC /CH5.7T LOSE!
/]
	A_31.+B_26.+C_21.+D_16.+E_11.+F_6+G_1
TERMIN

	.. 4,4,4,4,4,0,4,,	;!
	.. 12,12,12,0,0,0,0,,	;"
	.. 12,12,37,12,37,12,12,,	;#
	.. 4,17,24,16,5,36,4,,	;$
	.. 36,31,2,4,10,23,3,,	;%
	.. 4,12,4,10,25,22,15,,	;&
	.. 4,4,4,0,0,0,0,,	;'
	.. 2,4,10,10,10,4,2,,	;(
	.. 10,4,2,2,2,4,10,,	;)
	.. 0,25,16,33,16,25,0,,	;*
	.. 0,0,4,33,4,0,0,,	;+
	.. 0,0,0,0,14,4,10,,	;,
	.. 0,0,0,16,0,0,0,,	;-
	.. 0,0,0,0,0,14,14,,	;.
	.. 0,1,2,4,10,20,0,,	;/

	.. 16,21,23,25,31,21,16,,	;0
	.. 4,14,4,4,4,4,16,,	;1
	.. 16,21,1,2,4,10,37,,	;2
	.. 16,21,1,6,1,21,16,,	;3
	.. 2,6,12,37,2,2,2,,	;4 . . . OK, BEELER?
	.. 37,20,36,1,1,21,16,,	;5
	.. 16,21,20,36,21,21,16,,	;6
	.. 37,1,2,4,10,20,20,,	;7
	.. 16,21,16,21,21,21,16,,	;8
	.. 16,21,21,17,1,21,16,,	;9
	.. 0,14,14,0,14,14,0,,	;:
	.. 0,14,14,0,14,4,10,,	; ;
	.. 0,2,4,10,4,2,0,,	;<
	.. 0,0,37,0,37,0,0,,	;=
	.. 0,10,4,2,4,10,0,,	;>
	.. 16,21,2,4,4,0,4,,	;?
	.. 0,16,33,25,33,16,0,,	;@
	.. 16,21,21,37,21,21,21,,	;A
	.. 36,21,21,36,21,21,36,,	;B
	.. 16,21,20,20,20,21,16,,	;C
	.. 36,21,21,21,21,21,36,,	;D
	.. 37,20,20,36,20,20,37,,	;E
	.. 37,20,20,36,20,20,20,,	;F
	.. 16,21,20,20,23,21,16,,	;G
	.. 21,21,21,37,21,21,21,,	;H
	.. 16,4,4,4,4,4,16,,	;I
	.. 7,1,1,1,1,21,16,,	;J
	.. 21,22,24,34,22,21,21,,	;K
	.. 20,20,20,20,20,20,37,,	;L
	.. 21,33,25,21,21,21,21,,	;M
	.. 21,21,31,25,23,21,21,,	;N
	.. 16,21,21,21,21,21,16,,	;O
	.. 36,21,21,36,20,20,20,,	;P
	.. 16,21,21,21,25,22,15,,	;Q
	.. 36,21,21,36,21,21,21,,	;R
	.. 16,21,20,16,1,21,16,,	;S
	.. 37,4,4,4,4,4,4,,	;T
	.. 21,21,21,21,21,21,16,,	;U
	.. 21,21,21,21,21,12,4,,	;V
	.. 21,21,21,21,21,25,12,,	;W
	.. 21,21,12,4,12,21,21,,	;X
	.. 21,21,12,4,4,4,4,,	;Y
	.. 37,2,4,16,4,10,37,,	;Z
	.. 6,4,4,4,4,4,6,,	;[
	.. 0,20,10,4,2,1,0,,	;\
	.. 14,4,4,4,4,4,14,,	;]
	.. 4,16,25,4,4,4,4,,	;^
	.. 0,4,10,37,10,4,0,,	;_

	IFN .-CH5.7T-64.,.. ,,,,,,,69


DTB:	
IFE TS,	MOVE A,TIME	;^@
IFN TS,	MOVEI AA,RTIMER	;^@
	MOVEI AA,CXOR	;^A
IFN LPTR,	MOVEI AA,CNTRLB	;^B
IFE LPTR,	TYPR2 (SIXBIT /LPT/)
IFE TS,	MOVEI AA,CLRBF	;^C
IFN TS,	MOVEI AA,TAB	;^C
	HRROI AA,DD	;^D
IFE LPTR,	TYPR2 (SIXBIT /LPT/)
IFE TS+LPTR-1,	TLZ FF,LPTF	;^E
IFN TS,	MOVEI AA,CNTRLE	;^E
IFE TS,	MOVEI AA,LAT	;^F
IFN TS,	.RDSW A,		;^F
	MOVEI AA,DECDMP	;^G - TS QUIT
	MOVEI AA,DECDMP	;^H
	MOVEI AA,TAB	;^I - TAB
	MOVEI AA,CD	;^J - LINE FEED
	MOVEI AA,TAB	;^K - VERT TAB
IFE TS,	HRROI AA,TAB	;^L - FORM FEED
IFN TS,	HRROI AA,CTLL	;^L - FORM FEED
	MOVEI AA,CD	;^M - CARR RET
	MOVEI AA,FLDSZ	;^N
	MOVEI AA,SYMLST	;^O
	MOVEI AA,PSORT	;^P
	NTS TLO FF,UREAD	;^Q
	NTS TLZ FF,PNSTOP	;^R
IFE TS,	TLZ FF,UREAD	;^S
IFN TS,	HRROI AA,ASLEEP	;^S
	TLO FF,PNSTOP	;^T
IFE TS,	HRROI AA,.OPN3	;^U
IFN TS,	HRROI AA,CNTRLU	;^U
	TLZ FF,UWRITE	;^V
	TLO FF,UWRITE	;^W
	MOVE A,MARG1	;^X
	MOVE A,MARG2	;^Y
IFE TS,	HRROI AA,ADDT	;^Z
IFN TS,	TYPR2 (SIXBIT \^Z?\)	;^Z
IFE TS,	JRST GO		;^[ - ALT MODE
IFN TS,	JRST LGOGO	;ALTMODE IN TIME SHARING, MAYBE TRY TO LOG OUT
	MOVEI AA,LIGHTS	;^\
	TYPR2 (SIXBIT /7SW/)	;^]
	MOVEI AA,CNTRUP	;^^
	TYPR2 (SIXBIT /7SW/)	;^_

	MOVEI AA,CD2	;
	MOVEI AA,EXCLAM	;!
	MOVEI AA,DQUOTE	;"
	MOVEI AA,COR	;#
	HRROI AA,NEWAS	;$
	MOVEI AA,PCNT	;%
	MOVEI AA,CAND	;&
	MOVEI AA,CD	;'
	MOVEI AA,OPEN	;(
	MOVEI AA,CLOSE	;)
	MOVEI AA,TIMES	;*
	MOVEI AA,CD2	;+
	MOVEI AA,COMMA	;,
	MOVEI AA,MINUS	;-
	JRST PNT	;.
	MOVEI AA,SLASH	;/

	JRST CDNUM	;0
	JRST CDNUM	;1
	JRST CDNUM	;2
	JRST CDNUM	;3
	JRST CDNUM	;4
	JRST CDNUM	;5
	JRST CDNUM	;6
	JRST CDNUM	;7
	JRST CDNUM	;8
	JRST CDNUM	;9
	JRST ACOLON	;:
	MOVEI AA,SEMICL	; ;
	MOVEI AA,LSSTH	;<
	HRROI AA,PRNT	;=
	MOVEI AA,GRTH	;>
	MOVEI AA,QUESTN	;?
REPEAT 2,[
IFE TS,	HRROI AA,TAB	;@
IFN TS,	MOVEI AA,SYMLPT	;@
	MOVEI AA,APPEND	;A
	MOVEI A,0	;B
	MOVEI AA,CHARAC	;C
	MOVEI AA,DELETE	;D
	HRROI AA,ECMD	;E
	NTS HRROI AA,FEED	;F
	MOVEI AA,QGET	;G
	MOVEI AA,HOLE	;H
	MOVEI AA,INSERT	;I
	MOVEI AA,JMP	;J
	MOVEI AA,KILL	;K
	MOVEI AA,LINE	;L
	JRST MAC	;M
	MOVEI AA,SERCHP	;N
	MOVEI AA,OG	;O
	HRROI AA,PUNCH	;P
	MOVEI AA,QREG	;Q
	MOVEI AA,REVERS	;R
	MOVEI AA,SERCH	;S
	HRROI AA,TYPE	;T
	MOVEI AA,USE	;U
	MOVEI AA,VIEW	;V
	MOVEI AA,CD	;W
	MOVEI AA,X	;X
	HRROI AA,YANK	;Y
	MOVEI AA,END1	;Z
	MOVEI AA,OPENB	;[
	MOVEI AA,BAKSL	;\
	MOVEI AA,CLOSEB	;]
	TRO FF,SLSL	;^
IFE .RPCNT,	MOVEI AA,LARR	;_
]IFN .-DTB-177,[PRINTX \DTB LOSS
\]	MOVEI AA,TAB

CONSTANTS
HUSED:	INFORM [TOP OF PURE]\.-1

IFN TS,LOC <.+1777>&776000
VARIABLES
-1	;BE SURE THIS PAGE EXISTS FOR PURIFY
CBUF:
IFN TS,N1KB==CBUF/2000+IFN .&1777,1
END INIT
